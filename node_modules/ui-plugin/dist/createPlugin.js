"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
exports.__esModule = true;
exports.createPlugin = void 0;
var pluginStore_1 = require("./pluginStore");
var shared_1 = require("./shared");
function createPlugin(args) {
    var plugin = {
        name: args.name,
        enabled: true,
        defaultConfig: args.defaultConfig,
        initialState: args.initialState,
        methodHandlers: args.methods || {},
        loadHandlers: [],
        eventHandlers: {}
    };
    return {
        onLoad: function (handler) {
            plugin.loadHandlers.push(handler);
        },
        on: function (otherPluginName, handlers) {
            Object.keys(handlers).forEach(function (eventName) {
                var handler = handlers[eventName];
                // https://github.com/Microsoft/TypeScript/pull/12253#issuecomment-263132208
                if (handler) {
                    var eventKey = shared_1.getEventKey(otherPluginName, eventName);
                    var prevHandlers = plugin.eventHandlers[eventKey];
                    plugin.eventHandlers[eventKey] = prevHandlers
                        ? __spreadArrays(prevHandlers, [handler]) : [handler];
                }
            });
        },
        register: function () {
            pluginStore_1.addPlugin(plugin);
        }
    };
}
exports.createPlugin = createPlugin;
