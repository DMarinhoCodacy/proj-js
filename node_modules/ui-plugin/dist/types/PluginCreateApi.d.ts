import { PluginEventHandlers, PluginLoadHandler } from './PluginContextHandlers';
import { PluginSpec, PluginWithEvents } from './PluginSpec';
declare type On<T extends PluginSpec> = <TEmitter extends PluginWithEvents>(otherPluginName: TEmitter['name'], handlers: PluginEventHandlers<T, TEmitter>) => void;
export interface PluginCreateApi<T extends PluginSpec> {
    onLoad: (handler: PluginLoadHandler<T>) => void;
    on: On<T>;
    register: () => void;
}
export {};
