'use strict';
var __spreadArrays =
  (this && this.__spreadArrays) ||
  function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++)
      s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
        r[k] = a[j];
    return r;
  };
var __importDefault =
  (this && this.__importDefault) ||
  function (mod) {
    return mod && mod.__esModule ? mod : { default: mod };
  };
exports.__esModule = true;
exports.ArraySlot = void 0;
var react_1 = __importDefault(require('react'));
var PlugConnect_1 = require('./PlugConnect');
var useSlotPlugs_1 = require('./useSlotPlugs');
function ArraySlot(_a) {
  var name = _a.name,
    _b = _a.slotProps,
    slotProps = _b === void 0 ? {} : _b,
    _c = _a.plugOrder,
    plugOrder = _c === void 0 ? [] : _c;
  var plugs = useSlotPlugs_1.useSlotPlugs(name);
  return (
    // TS isn't happy with function components returning non-JSX.Elements
    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544
    react_1['default'].createElement(
      react_1['default'].Fragment,
      null,
      getSortedPlugs(plugs, plugOrder).map(function (plug) {
        return react_1['default'].createElement(PlugConnect_1.PlugConnect, {
          key: plug.id,
          pluginName: plug.pluginName,
          component: plug.component,
          slotProps: slotProps,
        });
      }),
    )
  );
}
exports.ArraySlot = ArraySlot;
function getSortedPlugs(plugs, plugOrder) {
  var orderedPlugs = plugs
    .filter(function (p) {
      return (
        typeof p.plugName === 'string' && plugOrder.indexOf(p.plugName) !== -1
      );
    })
    .sort(function (p1, p2) {
      return plugOrder.indexOf(p1.plugName) - plugOrder.indexOf(p2.plugName);
    });
  var unorderedPlugs = plugs.filter(function (p) {
    return orderedPlugs.indexOf(p) === -1;
  });
  return __spreadArrays(orderedPlugs, unorderedPlugs);
}
