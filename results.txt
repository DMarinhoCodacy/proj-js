Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver/nested_symlinks/mylib/async.js[39m[22m [6:5 - 11:18] (5 lines, 86 tokens)
   [1m[32mnode_modules/resolve/test/resolver/nested_symlinks/mylib/sync.js[39m[22m [5:1 - 10:17]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js[39m[22m [1:1 - 9:3] (8 lines, 83 tokens)
   [1m[32mnode_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js[39m[22m [1:1 - 9:6]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js[39m[22m [9:14 - 23:20] (14 lines, 171 tokens)
   [1m[32mnode_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js[39m[22m [9:5 - 23:15]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js[39m[22m [30:22 - 37:24] (7 lines, 68 tokens)
   [1m[32mnode_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js[39m[22m [30:14 - 37:18]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js[39m[22m [38:3 - 65:49] (27 lines, 226 tokens)
   [1m[32mnode_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js[39m[22m [38:9 - 65:49]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/parser/lib/plugins/flow/scope.js[39m[22m [1:1 - 9:6] (8 lines, 61 tokens)
   [1m[32mnode_modules/@babel/parser/lib/plugins/typescript/scope.js[39m[22m [1:1 - 9:4]

Clone found (javascript):
 - [1m[32mnode_modules/blamer/build/main/vcs/git.js[39m[22m [8:2 - 21:6] (13 lines, 113 tokens)
   [1m[32mnode_modules/blamer/build/module/vcs/git.js[39m[22m [2:8 - 15:7]

Clone found (javascript):
 - [1m[32mnode_modules/blamer/build/main/vcs/git.js[39m[22m [24:8 - 37:8] (13 lines, 116 tokens)
   [1m[32mnode_modules/blamer/build/module/vcs/git.js[39m[22m [18:6 - 31:1515]

Clone found (javascript):
 - [1m[32mnode_modules/@nodelib/fs.walk/out/readers/async.js[39m[22m [82:9 - 87:11] (5 lines, 78 tokens)
   [1m[32mnode_modules/@nodelib/fs.walk/out/readers/sync.js[39m[22m [44:9 - 49:15]

Clone found (javascript):
 - [1m[32mnode_modules/@nodelib/fs.walk/out/readers/async.js[39m[22m [87:11 - 93:11] (6 lines, 72 tokens)
   [1m[32mnode_modules/@nodelib/fs.walk/out/readers/sync.js[39m[22m [49:15 - 55:15]

Clone found (javascript):
 - [1m[32mnode_modules/@nodelib/fs.walk/out/providers/async.js[39m[22m [4:2 - 9:9] (5 lines, 60 tokens)
   [1m[32mnode_modules/@nodelib/fs.walk/out/providers/stream.js[39m[22m [5:2 - 10:8]

Clone found (javascript):
 - [1m[32mnode_modules/@nodelib/fs.scandir/out/adapters/fs.js[39m[22m [1:1 - 9:2] (8 lines, 95 tokens)
   [1m[32mnode_modules/@nodelib/fs.stat/out/adapters/fs.js[39m[22m [1:1 - 10:2]

Clone found (javascript):
 - [1m[32mnode_modules/@nodelib/fs.scandir/out/adapters/fs.js[39m[22m [12:1 - 19:2] (7 lines, 70 tokens)
   [1m[32mnode_modules/@nodelib/fs.stat/out/adapters/fs.js[39m[22m [10:1 - 17:2]

Clone found (javascript):
 - [1m[32mnode_modules/@jscpd/finder/dist/subscribers/index.js[39m[22m [1:1 - 6:13] (5 lines, 77 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/validators/index.js[39m[22m [1:1 - 6:25]

Clone found (javascript):
 - [1m[32mnode_modules/@jscpd/finder/dist/reporters/json.js[39m[22m [2:2 - 8:13] (6 lines, 65 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/reporters/xml.js[39m[22m [3:5 - 9:12]

Clone found (javascript):
 - [1m[32mnode_modules/@jscpd/finder/dist/reporters/index.js[39m[22m [1:1 - 6:12] (5 lines, 77 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/validators/index.js[39m[22m [1:1 - 6:25]

Clone found (javascript):
 - [1m[32mnode_modules/@jscpd/finder/dist/reporters/csv.js[39m[22m [1:1 - 8:6] (7 lines, 84 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/reporters/markdown.js[39m[22m [1:1 - 8:6]

Clone found (javascript):
 - [1m[32mnode_modules/@jscpd/finder/dist/hooks/index.js[39m[22m [1:1 - 6:11] (5 lines, 77 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/validators/index.js[39m[22m [1:1 - 6:25]

Clone found (javascript):
 - [1m[32mnode_modules/@jscpd/core/dist/validators/index.js[39m[22m [1:1 - 6:33] (5 lines, 77 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/validators/index.js[39m[22m [1:1 - 6:25]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/definitions/utils.js[39m[22m [120:2 - 127:22] (7 lines, 107 tokens)
   [1m[32mnode_modules/@babel/types/lib/definitions/utils.js[39m[22m [107:2 - 114:15]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/definitions/typescript.js[39m[22m [318:17 - 323:15] (5 lines, 61 tokens)
   [1m[32mnode_modules/@babel/types/lib/definitions/typescript.js[39m[22m [301:7 - 306:8]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [90:12 - 95:10] (5 lines, 59 tokens)
   [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [81:8 - 86:6]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [290:11 - 296:13] (6 lines, 85 tokens)
   [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [81:8 - 96:21]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [322:22 - 329:23] (7 lines, 63 tokens)
   [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [180:29 - 187:22]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [336:12 - 345:17] (9 lines, 99 tokens)
   [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [80:19 - 89:20]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [380:22 - 387:11] (7 lines, 63 tokens)
   [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [180:29 - 187:22]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [413:17 - 418:19] (5 lines, 68 tokens)
   [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [404:18 - 409:20]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [422:17 - 427:2] (5 lines, 68 tokens)
   [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [404:18 - 409:20]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [455:19 - 460:16] (5 lines, 61 tokens)
   [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [447:19 - 452:17]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [478:28 - 483:2] (5 lines, 63 tokens)
   [1m[32mnode_modules/@babel/types/lib/definitions/flow.js[39m[22m [470:20 - 476:2]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/parser/lib/util/scope.js[39m[22m [138:21 - 143:4] (5 lines, 66 tokens)
   [1m[32mnode_modules/@babel/parser/lib/util/scope.js[39m[22m [46:14 - 51:13]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/parser/lib/parser/node.js[39m[22m [73:3 - 79:3] (6 lines, 65 tokens)
   [1m[32mnode_modules/@babel/parser/lib/parser/node.js[39m[22m [48:3 - 54:7]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/parser/lib/parser/lval.js[39m[22m [66:9 - 75:6] (9 lines, 75 tokens)
   [1m[32mnode_modules/@babel/parser/lib/plugins/estree.js[39m[22m [225:2 - 234:2]

Clone found (yaml):
 - [1m[32mnode_modules/with/.github/workflows/rollingversions.yml[39m[22m [6:1 - 22:5] (16 lines, 135 tokens)
   [1m[32mnode_modules/with/.github/workflows/test.yml[39m[22m [8:1 - 24:5]

Clone found (yaml):
 - [1m[32mnode_modules/with/.github/workflows/rollingversions-canary.yml[39m[22m [4:5 - 26:15] (22 lines, 151 tokens)
   [1m[32mnode_modules/with/.github/workflows/test.yml[39m[22m [4:13 - 24:8]

Clone found (yaml):
 - [1m[32mnode_modules/with/.github/workflows/rollingversions-canary.yml[39m[22m [26:15 - 37:2] (11 lines, 92 tokens)
   [1m[32mnode_modules/with/.github/workflows/rollingversions.yml[39m[22m [24:8 - 36:4]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/src/languages/haml.js[39m[22m [134:10 - 147:2] (13 lines, 149 tokens)
   [1m[32mnode_modules/reprism/src/languages/pug.js[39m[22m [177:7 - 189:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/src/languages/haml.js[39m[22m [147:13 - 160:7] (13 lines, 75 tokens)
   [1m[32mnode_modules/reprism/src/languages/pug.js[39m[22m [191:13 - 204:6]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/src/languages/asciidoc.js[39m[22m [245:8 - 252:6] (7 lines, 84 tokens)
   [1m[32mnode_modules/reprism/src/languages/asciidoc.js[39m[22m [226:6 - 233:8]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/src/languages/asciidoc.js[39m[22m [251:2 - 259:2] (8 lines, 78 tokens)
   [1m[32mnode_modules/reprism/src/languages/asciidoc.js[39m[22m [233:8 - 241:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/src/languages/asciidoc.js[39m[22m [259:6 - 266:75] (7 lines, 66 tokens)
   [1m[32mnode_modules/reprism/src/languages/asciidoc.js[39m[22m [203:12 - 210:6]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/src/languages/asciidoc.js[39m[22m [266:7 - 272:2] (6 lines, 62 tokens)
   [1m[32mnode_modules/reprism/src/languages/markup.js[39m[22m [46:5 - 53:6]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/xojo.js[39m[22m [19:7 - 25:2] (6 lines, 80 tokens)
   [1m[32mnode_modules/reprism/src/languages/xojo.js[39m[22m [14:7 - 19:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/wiki.js[39m[22m [49:2 - 62:2] (13 lines, 80 tokens)
   [1m[32mnode_modules/reprism/src/languages/wiki.js[39m[22m [50:7 - 62:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/wiki.js[39m[22m [69:5 - 77:2] (8 lines, 64 tokens)
   [1m[32mnode_modules/reprism/src/languages/wiki.js[39m[22m [70:5 - 77:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/vim.js[39m[22m [8:2 - 18:2] (10 lines, 2360 tokens)
   [1m[32mnode_modules/reprism/src/languages/vim.js[39m[22m [3:2 - 12:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/vhdl.js[39m[22m [20:7 - 31:2] (11 lines, 118 tokens)
   [1m[32mnode_modules/reprism/src/languages/vhdl.js[39m[22m [15:7 - 25:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/twig.js[39m[22m [32:11 - 39:2] (7 lines, 106 tokens)
   [1m[32mnode_modules/reprism/src/languages/twig.js[39m[22m [27:11 - 34:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/textile.js[39m[22m [236:2 - 244:52] (8 lines, 109 tokens)
   [1m[32mnode_modules/reprism/src/languages/textile.js[39m[22m [268:2 - 274:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/swift.js[39m[22m [8:2 - 21:2] (13 lines, 90 tokens)
   [1m[32mnode_modules/reprism/src/languages/swift.js[39m[22m [3:2 - 15:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/smarty.js[39m[22m [73:2 - 84:9] (11 lines, 69 tokens)
   [1m[32mnode_modules/reprism/lib/languages/soy.js[39m[22m [80:2 - 91:6]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/smalltalk.js[39m[22m [8:2 - 19:2] (11 lines, 81 tokens)
   [1m[32mnode_modules/reprism/src/languages/smalltalk.js[39m[22m [3:2 - 13:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/rip.js[39m[22m [8:2 - 28:2] (20 lines, 107 tokens)
   [1m[32mnode_modules/reprism/src/languages/rip.js[39m[22m [3:2 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/rip.js[39m[22m [28:7 - 34:2] (6 lines, 57 tokens)
   [1m[32mnode_modules/reprism/src/languages/rip.js[39m[22m [23:7 - 28:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/rest.js[39m[22m [74:7 - 83:2] (9 lines, 71 tokens)
   [1m[32mnode_modules/reprism/src/languages/rest.js[39m[22m [75:7 - 83:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/rest.js[39m[22m [177:2 - 184:2] (7 lines, 63 tokens)
   [1m[32mnode_modules/reprism/src/languages/rest.js[39m[22m [181:7 - 188:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/renpy.js[39m[22m [20:7 - 37:2] (17 lines, 99 tokens)
   [1m[32mnode_modules/reprism/src/languages/renpy.js[39m[22m [15:7 - 31:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/prolog.js[39m[22m [8:2 - 16:2] (8 lines, 66 tokens)
   [1m[32mnode_modules/reprism/src/languages/prolog.js[39m[22m [3:2 - 10:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/plsql.js[39m[22m [11:5 - 23:2] (12 lines, 141 tokens)
   [1m[32mnode_modules/@jscpd/tokenizer/dist/languages/plsql.js[39m[22m [8:9 - 17:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/php.js[39m[22m [8:2 - 28:2] (20 lines, 69 tokens)
   [1m[32mnode_modules/reprism/src/languages/php.js[39m[22m [3:2 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/php.js[39m[22m [62:7 - 73:2] (11 lines, 80 tokens)
   [1m[32mnode_modules/reprism/src/languages/php.js[39m[22m [57:7 - 67:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/perl.js[39m[22m [103:7 - 112:2] (9 lines, 81 tokens)
   [1m[32mnode_modules/reprism/src/languages/perl.js[39m[22m [102:9 - 110:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/perl.js[39m[22m [147:7 - 156:2] (9 lines, 89 tokens)
   [1m[32mnode_modules/reprism/src/languages/perl.js[39m[22m [146:9 - 154:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/perl.js[39m[22m [156:2 - 172:2] (16 lines, 223 tokens)
   [1m[32mnode_modules/reprism/src/languages/perl.js[39m[22m [156:7 - 172:23]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/pascal.js[39m[22m [37:2 - 42:2] (5 lines, 67 tokens)
   [1m[32mnode_modules/reprism/src/languages/pascal.js[39m[22m [37:7 - 42:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/parser.js[39m[22m [53:11 - 62:2] (9 lines, 89 tokens)
   [1m[32mnode_modules/reprism/src/languages/parser.js[39m[22m [48:11 - 56:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/parser.js[39m[22m [65:5 - 74:2] (9 lines, 105 tokens)
   [1m[32mnode_modules/reprism/src/languages/parser.js[39m[22m [60:5 - 71:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/objectivec.js[39m[22m [8:2 - 13:2] (5 lines, 89 tokens)
   [1m[32mnode_modules/reprism/src/languages/objectivec.js[39m[22m [3:2 - 7:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/nix.js[39m[22m [8:2 - 23:2] (15 lines, 95 tokens)
   [1m[32mnode_modules/reprism/src/languages/nix.js[39m[22m [3:2 - 17:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/mel.js[39m[22m [8:2 - 19:2] (11 lines, 73 tokens)
   [1m[32mnode_modules/reprism/src/languages/mel.js[39m[22m [3:2 - 13:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/markup.js[39m[22m [8:2 - 23:2] (15 lines, 100 tokens)
   [1m[32mnode_modules/reprism/src/languages/markup.js[39m[22m [3:2 - 17:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/markdown.js[39m[22m [64:7 - 75:2] (11 lines, 68 tokens)
   [1m[32mnode_modules/reprism/src/languages/markdown.js[39m[22m [65:7 - 75:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/markdown.js[39m[22m [102:7 - 111:2] (9 lines, 68 tokens)
   [1m[32mnode_modules/reprism/src/languages/markdown.js[39m[22m [103:7 - 111:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/makefile.js[39m[22m [28:7 - 38:2] (10 lines, 86 tokens)
   [1m[32mnode_modules/reprism/src/languages/makefile.js[39m[22m [23:7 - 32:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/lolcode.js[39m[22m [8:2 - 16:2] (8 lines, 89 tokens)
   [1m[32mnode_modules/reprism/src/languages/lolcode.js[39m[22m [3:2 - 10:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/lolcode.js[39m[22m [18:7 - 25:2] (7 lines, 80 tokens)
   [1m[32mnode_modules/reprism/src/languages/lolcode.js[39m[22m [13:7 - 19:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/keyman.js[39m[22m [8:2 - 15:2] (7 lines, 110 tokens)
   [1m[32mnode_modules/reprism/src/languages/keyman.js[39m[22m [3:2 - 11:126]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/julia.js[39m[22m [13:7 - 20:2] (7 lines, 137 tokens)
   [1m[32mnode_modules/reprism/src/languages/julia.js[39m[22m [8:7 - 14:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/jsx.js[39m[22m [58:9 - 66:2] (8 lines, 141 tokens)
   [1m[32mnode_modules/reprism/src/languages/jsx.js[39m[22m [65:9 - 78:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/jsx.js[39m[22m [67:15 - 75:2] (8 lines, 81 tokens)
   [1m[32mnode_modules/reprism/src/languages/jsx.js[39m[22m [78:15 - 85:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/jolie.js[39m[22m [8:2 - 19:2] (11 lines, 84 tokens)
   [1m[32mnode_modules/reprism/src/languages/jolie.js[39m[22m [3:2 - 13:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/javascript.js[39m[22m [31:5 - 42:2] (11 lines, 79 tokens)
   [1m[32mnode_modules/reprism/src/languages/javascript.js[39m[22m [26:5 - 36:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/javascript.js[39m[22m [51:5 - 59:2] (8 lines, 72 tokens)
   [1m[32mnode_modules/reprism/src/languages/javascript.js[39m[22m [46:5 - 53:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/io.js[39m[22m [28:7 - 35:2] (7 lines, 210 tokens)
   [1m[32mnode_modules/reprism/src/languages/io.js[39m[22m [27:7 - 33:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/inform7.js[39m[22m [8:2 - 19:2] (11 lines, 82 tokens)
   [1m[32mnode_modules/reprism/src/languages/inform7.js[39m[22m [3:2 - 13:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/ichigojam.js[39m[22m [16:7 - 23:2] (7 lines, 171 tokens)
   [1m[32mnode_modules/reprism/src/languages/ichigojam.js[39m[22m [11:7 - 17:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/haxe.js[39m[22m [8:2 - 22:2] (14 lines, 97 tokens)
   [1m[32mnode_modules/reprism/src/languages/haxe.js[39m[22m [3:2 - 16:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/haskell.js[39m[22m [29:7 - 44:2] (15 lines, 86 tokens)
   [1m[32mnode_modules/reprism/src/languages/haskell.js[39m[22m [24:7 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/haml.js[39m[22m [62:9 - 75:2] (13 lines, 76 tokens)
   [1m[32mnode_modules/reprism/src/languages/haml.js[39m[22m [60:9 - 73:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/haml.js[39m[22m [122:10 - 129:2] (7 lines, 146 tokens)
   [1m[32mnode_modules/reprism/lib/languages/pug.js[39m[22m [162:7 - 169:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/haml.js[39m[22m [129:2 - 142:7] (13 lines, 73 tokens)
   [1m[32mnode_modules/reprism/lib/languages/pug.js[39m[22m [169:4 - 182:6]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/go.js[39m[22m [8:2 - 18:2] (10 lines, 77 tokens)
   [1m[32mnode_modules/reprism/src/languages/go.js[39m[22m [3:2 - 12:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/glsl.js[39m[22m [8:2 - 13:2] (5 lines, 74 tokens)
   [1m[32mnode_modules/reprism/src/languages/glsl.js[39m[22m [3:2 - 7:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/fortran.js[39m[22m [26:7 - 37:2] (11 lines, 281 tokens)
   [1m[32mnode_modules/reprism/src/languages/fortran.js[39m[22m [21:7 - 32:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/eiffel.js[39m[22m [26:2 - 35:2] (9 lines, 176 tokens)
   [1m[32mnode_modules/reprism/src/languages/eiffel.js[39m[22m [22:7 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/eiffel.js[39m[22m [35:7 - 40:2] (5 lines, 114 tokens)
   [1m[32mnode_modules/reprism/src/languages/eiffel.js[39m[22m [31:7 - 36:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/diff.js[39m[22m [8:2 - 16:2] (8 lines, 79 tokens)
   [1m[32mnode_modules/reprism/src/languages/diff.js[39m[22m [3:2 - 11:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/d.js[39m[22m [8:2 - 22:2] (14 lines, 100 tokens)
   [1m[32mnode_modules/reprism/src/languages/d.js[39m[22m [3:2 - 19:42]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/d.js[39m[22m [22:2 - 30:2] (8 lines, 89 tokens)
   [1m[32mnode_modules/reprism/src/languages/d.js[39m[22m [20:7 - 28:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/css.js[39m[22m [32:5 - 40:2] (8 lines, 72 tokens)
   [1m[32mnode_modules/reprism/src/languages/css.js[39m[22m [27:5 - 34:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/clojure.js[39m[22m [8:2 - 17:2] (9 lines, 89 tokens)
   [1m[32mnode_modules/reprism/src/languages/clojure.js[39m[22m [3:2 - 11:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/c.js[39m[22m [15:5 - 27:2] (12 lines, 76 tokens)
   [1m[32mnode_modules/reprism/src/languages/c.js[39m[22m [10:5 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/bison.js[39m[22m [11:5 - 25:2] (14 lines, 84 tokens)
   [1m[32mnode_modules/reprism/src/languages/bison.js[39m[22m [6:5 - 19:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/bison.js[39m[22m [35:11 - 43:2] (8 lines, 63 tokens)
   [1m[32mnode_modules/reprism/src/languages/bison.js[39m[22m [30:11 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/basic.js[39m[22m [19:7 - 25:2] (6 lines, 284 tokens)
   [1m[32mnode_modules/reprism/src/languages/basic.js[39m[22m [14:7 - 19:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/autohotkey.js[39m[22m [14:7 - 35:2] (21 lines, 111 tokens)
   [1m[32mnode_modules/reprism/src/languages/autohotkey.js[39m[22m [9:7 - 29:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/aspnet.js[39m[22m [8:2 - 15:2] (7 lines, 63 tokens)
   [1m[32mnode_modules/reprism/src/languages/aspnet.js[39m[22m [3:2 - 9:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/aspnet.js[39m[22m [37:5 - 43:2] (6 lines, 65 tokens)
   [1m[32mnode_modules/reprism/src/languages/aspnet.js[39m[22m [37:5 - 45:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/asciidoc.js[39m[22m [201:2 - 206:2] (5 lines, 66 tokens)
   [1m[32mnode_modules/reprism/src/languages/asciidoc.js[39m[22m [203:7 - 207:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/asciidoc.js[39m[22m [216:7 - 237:2] (21 lines, 286 tokens)
   [1m[32mnode_modules/reprism/src/languages/asciidoc.js[39m[22m [218:7 - 238:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/asciidoc.js[39m[22m [239:7 - 257:2] (18 lines, 228 tokens)
   [1m[32mnode_modules/reprism/src/languages/asciidoc.js[39m[22m [241:7 - 239:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/asciidoc.js[39m[22m [257:7 - 263:75] (6 lines, 69 tokens)
   [1m[32mnode_modules/reprism/src/languages/asciidoc.js[39m[22m [259:7 - 207:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/asciidoc.js[39m[22m [264:2 - 269:2] (5 lines, 63 tokens)
   [1m[32mnode_modules/reprism/lib/languages/markup.js[39m[22m [49:5 - 55:6]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/ada.js[39m[22m [8:2 - 14:2] (6 lines, 117 tokens)
   [1m[32mnode_modules/reprism/src/languages/ada.js[39m[22m [3:2 - 9:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/ada.js[39m[22m [16:2 - 24:2] (8 lines, 71 tokens)
   [1m[32mnode_modules/reprism/src/languages/ada.js[39m[22m [14:7 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/languages/actionscript.js[39m[22m [15:5 - 22:2] (7 lines, 64 tokens)
   [1m[32mnode_modules/reprism/src/languages/actionscript.js[39m[22m [10:5 - 16:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/yaml.js[39m[22m [1:1 - 55:2] (54 lines, 333 tokens)
   [1m[32mnode_modules/reprism/lib/languages/yaml.js[39m[22m [1:1 - 55:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/xojo.js[39m[22m [1:1 - 27:2] (26 lines, 204 tokens)
   [1m[32mnode_modules/reprism/lib/languages/xojo.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/xeora.js[39m[22m [1:1 - 123:2] (122 lines, 706 tokens)
   [1m[32mnode_modules/reprism/lib/languages/xeora.js[39m[22m [1:1 - 123:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/wiki.js[39m[22m [1:1 - 82:2] (81 lines, 539 tokens)
   [1m[32mnode_modules/reprism/lib/languages/wiki.js[39m[22m [1:1 - 82:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/wasm.js[39m[22m [1:1 - 34:2] (33 lines, 318 tokens)
   [1m[32mnode_modules/reprism/lib/languages/wasm.js[39m[22m [1:1 - 34:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/visual-basic.js[39m[22m [1:1 - 41:2] (40 lines, 255 tokens)
   [1m[32mnode_modules/reprism/lib/languages/visual-basic.js[39m[22m [1:1 - 41:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/vim.js[39m[22m [1:1 - 20:2] (19 lines, 2419 tokens)
   [1m[32mnode_modules/reprism/lib/languages/vim.js[39m[22m [1:1 - 20:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/vhdl.js[39m[22m [1:1 - 33:2] (32 lines, 246 tokens)
   [1m[32mnode_modules/reprism/lib/languages/vhdl.js[39m[22m [1:1 - 33:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/verilog.js[39m[22m [1:1 - 30:2] (29 lines, 173 tokens)
   [1m[32mnode_modules/reprism/lib/languages/verilog.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/velocity.js[39m[22m [1:1 - 78:2] (77 lines, 516 tokens)
   [1m[32mnode_modules/reprism/lib/languages/velocity.js[39m[22m [1:1 - 78:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/vbnet.js[39m[22m [1:1 - 22:2] (21 lines, 142 tokens)
   [1m[32mnode_modules/reprism/lib/languages/vbnet.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/typescript.js[39m[22m [1:1 - 17:2] (16 lines, 116 tokens)
   [1m[32mnode_modules/reprism/lib/languages/typescript.js[39m[22m [1:1 - 17:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/twig.js[39m[22m [1:1 - 53:2] (52 lines, 414 tokens)
   [1m[32mnode_modules/reprism/lib/languages/twig.js[39m[22m [1:1 - 53:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/tsx.js[39m[22m [1:1 - 12:2] (11 lines, 101 tokens)
   [1m[32mnode_modules/reprism/lib/languages/tsx.js[39m[22m [1:1 - 12:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/textile.js[39m[22m [1:1 - 263:2] (262 lines, 1857 tokens)
   [1m[32mnode_modules/reprism/lib/languages/textile.js[39m[22m [1:1 - 263:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/tcl.js[39m[22m [1:1 - 49:2] (48 lines, 310 tokens)
   [1m[32mnode_modules/reprism/lib/languages/tcl.js[39m[22m [1:1 - 49:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/swift.js[39m[22m [1:1 - 35:2] (34 lines, 229 tokens)
   [1m[32mnode_modules/reprism/lib/languages/swift.js[39m[22m [1:1 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/stylus.js[39m[22m [1:1 - 118:2] (117 lines, 746 tokens)
   [1m[32mnode_modules/reprism/lib/languages/stylus.js[39m[22m [1:1 - 118:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/soy.js[39m[22m [1:1 - 95:2] (94 lines, 680 tokens)
   [1m[32mnode_modules/reprism/lib/languages/soy.js[39m[22m [1:1 - 95:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/smarty.js[39m[22m [1:1 - 88:2] (87 lines, 644 tokens)
   [1m[32mnode_modules/reprism/lib/languages/smarty.js[39m[22m [1:1 - 88:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/smalltalk.js[39m[22m [1:1 - 38:2] (37 lines, 263 tokens)
   [1m[32mnode_modules/reprism/lib/languages/smalltalk.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/scss.js[39m[22m [1:1 - 82:2] (81 lines, 480 tokens)
   [1m[32mnode_modules/reprism/lib/languages/scss.js[39m[22m [1:1 - 82:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/scheme.js[39m[22m [1:1 - 39:2] (38 lines, 231 tokens)
   [1m[32mnode_modules/reprism/lib/languages/scheme.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/scala.js[39m[22m [1:1 - 25:2] (24 lines, 187 tokens)
   [1m[32mnode_modules/reprism/lib/languages/scala.js[39m[22m [1:1 - 25:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/sass.js[39m[22m [1:1 - 75:2] (74 lines, 482 tokens)
   [1m[32mnode_modules/reprism/lib/languages/sass.js[39m[22m [1:1 - 75:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/sas.js[39m[22m [1:1 - 41:2] (40 lines, 257 tokens)
   [1m[32mnode_modules/reprism/lib/languages/sas.js[39m[22m [1:1 - 41:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/rust.js[39m[22m [1:1 - 70:2] (69 lines, 371 tokens)
   [1m[32mnode_modules/reprism/lib/languages/rust.js[39m[22m [1:1 - 70:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/ruby.js[39m[22m [1:1 - 124:2] (123 lines, 722 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ruby.js[39m[22m [1:1 - 124:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/roboconf.js[39m[22m [1:1 - 37:2] (36 lines, 222 tokens)
   [1m[32mnode_modules/reprism/lib/languages/roboconf.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/rip.js[39m[22m [1:1 - 42:2] (41 lines, 260 tokens)
   [1m[32mnode_modules/reprism/lib/languages/rip.js[39m[22m [1:1 - 42:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/rest.js[39m[22m [1:1 - 203:2] (202 lines, 1189 tokens)
   [1m[32mnode_modules/reprism/lib/languages/rest.js[39m[22m [1:1 - 203:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/renpy.js[39m[22m [1:1 - 39:2] (38 lines, 219 tokens)
   [1m[32mnode_modules/reprism/lib/languages/renpy.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/reason.js[39m[22m [1:1 - 42:2] (41 lines, 259 tokens)
   [1m[32mnode_modules/reprism/lib/languages/reason.js[39m[22m [1:1 - 42:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/r.js[39m[22m [1:1 - 29:2] (28 lines, 235 tokens)
   [1m[32mnode_modules/reprism/lib/languages/r.js[39m[22m [1:1 - 29:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/qore.js[39m[22m [1:1 - 30:2] (29 lines, 189 tokens)
   [1m[32mnode_modules/reprism/lib/languages/qore.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/q.js[39m[22m [1:1 - 58:2] (57 lines, 309 tokens)
   [1m[32mnode_modules/reprism/lib/languages/q.js[39m[22m [1:1 - 58:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/python.js[39m[22m [1:1 - 39:2] (38 lines, 236 tokens)
   [1m[32mnode_modules/reprism/lib/languages/python.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/pure.js[39m[22m [1:1 - 80:2] (79 lines, 643 tokens)
   [1m[32mnode_modules/reprism/lib/languages/pure.js[39m[22m [1:1 - 80:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/puppet.js[39m[22m [1:1 - 139:2] (138 lines, 851 tokens)
   [1m[32mnode_modules/reprism/lib/languages/puppet.js[39m[22m [1:1 - 139:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/pug.js[39m[22m [1:1 - 185:2] (184 lines, 1204 tokens)
   [1m[32mnode_modules/reprism/lib/languages/pug.js[39m[22m [1:1 - 185:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/protobuf.js[39m[22m [1:1 - 18:2] (17 lines, 119 tokens)
   [1m[32mnode_modules/reprism/lib/languages/protobuf.js[39m[22m [1:1 - 18:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/properties.js[39m[22m [1:1 - 19:2] (18 lines, 116 tokens)
   [1m[32mnode_modules/reprism/lib/languages/properties.js[39m[22m [1:1 - 19:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/prolog.js[39m[22m [1:1 - 27:2] (26 lines, 176 tokens)
   [1m[32mnode_modules/reprism/lib/languages/prolog.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/processing.js[39m[22m [1:1 - 28:2] (27 lines, 189 tokens)
   [1m[32mnode_modules/reprism/lib/languages/processing.js[39m[22m [1:1 - 28:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/powershell.js[39m[22m [1:1 - 54:2] (53 lines, 592 tokens)
   [1m[32mnode_modules/reprism/lib/languages/powershell.js[39m[22m [1:1 - 54:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/plsql.js[39m[22m [1:1 - 23:2] (22 lines, 232 tokens)
   [1m[32mnode_modules/reprism/lib/languages/plsql.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/php.js[39m[22m [1:1 - 133:2] (132 lines, 808 tokens)
   [1m[32mnode_modules/reprism/lib/languages/php.js[39m[22m [1:1 - 133:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/php-extras.js[39m[22m [1:1 - 21:2] (20 lines, 130 tokens)
   [1m[32mnode_modules/reprism/lib/languages/php-extras.js[39m[22m [1:1 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/perl.js[39m[22m [1:1 - 195:2] (194 lines, 1260 tokens)
   [1m[32mnode_modules/reprism/lib/languages/perl.js[39m[22m [1:1 - 195:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/pascal.js[39m[22m [1:1 - 50:2] (49 lines, 321 tokens)
   [1m[32mnode_modules/reprism/lib/languages/pascal.js[39m[22m [1:1 - 50:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/parser.js[39m[22m [1:1 - 77:2] (76 lines, 563 tokens)
   [1m[32mnode_modules/reprism/lib/languages/parser.js[39m[22m [1:1 - 77:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/parigp.js[39m[22m [1:1 - 35:2] (34 lines, 329 tokens)
   [1m[32mnode_modules/reprism/lib/languages/parigp.js[39m[22m [1:1 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/oz.js[39m[22m [1:1 - 32:2] (31 lines, 202 tokens)
   [1m[32mnode_modules/reprism/lib/languages/oz.js[39m[22m [1:1 - 32:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/opencl.js[39m[22m [1:1 - 57:2] (56 lines, 346 tokens)
   [1m[32mnode_modules/reprism/lib/languages/opencl.js[39m[22m [1:1 - 57:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/ocaml.js[39m[22m [1:1 - 34:2] (33 lines, 207 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ocaml.js[39m[22m [1:1 - 34:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/objectivec.js[39m[22m [1:1 - 15:2] (14 lines, 149 tokens)
   [1m[32mnode_modules/reprism/lib/languages/objectivec.js[39m[22m [1:1 - 15:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/nsis.js[39m[22m [1:1 - 39:2] (38 lines, 209 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nsis.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/nix.js[39m[22m [1:1 - 47:2] (46 lines, 292 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nix.js[39m[22m [1:1 - 47:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/nim.js[39m[22m [1:1 - 43:2] (42 lines, 235 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nim.js[39m[22m [1:1 - 43:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/nginx.js[39m[22m [1:1 - 21:2] (20 lines, 139 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nginx.js[39m[22m [1:1 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/nasm.js[39m[22m [1:1 - 29:2] (28 lines, 201 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nasm.js[39m[22m [1:1 - 29:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/n4js.js[39m[22m [1:1 - 24:2] (23 lines, 155 tokens)
   [1m[32mnode_modules/reprism/lib/languages/n4js.js[39m[22m [1:1 - 24:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/monkey.js[39m[22m [1:1 - 38:2] (37 lines, 247 tokens)
   [1m[32mnode_modules/reprism/lib/languages/monkey.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/mizar.js[39m[22m [1:1 - 22:2] (21 lines, 137 tokens)
   [1m[32mnode_modules/reprism/lib/languages/mizar.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/mel.js[39m[22m [1:1 - 49:2] (48 lines, 310 tokens)
   [1m[32mnode_modules/reprism/lib/languages/mel.js[39m[22m [1:1 - 49:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/matlab.js[39m[22m [1:1 - 23:2] (22 lines, 149 tokens)
   [1m[32mnode_modules/reprism/lib/languages/matlab.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/markup.js[39m[22m [1:1 - 60:2] (59 lines, 434 tokens)
   [1m[32mnode_modules/reprism/lib/languages/markup.js[39m[22m [1:1 - 60:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/markup-templating.js[39m[22m [1:1 - 102:2] (101 lines, 1002 tokens)
   [1m[32mnode_modules/reprism/lib/languages/markup-templating.js[39m[22m [1:1 - 102:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/markdown.js[39m[22m [1:1 - 124:2] (123 lines, 760 tokens)
   [1m[32mnode_modules/reprism/lib/languages/markdown.js[39m[22m [1:1 - 124:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/makefile.js[39m[22m [1:1 - 43:2] (42 lines, 266 tokens)
   [1m[32mnode_modules/reprism/lib/languages/makefile.js[39m[22m [1:1 - 43:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/lua.js[39m[22m [1:1 - 27:2] (26 lines, 164 tokens)
   [1m[32mnode_modules/reprism/lib/languages/lua.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/lolcode.js[39m[22m [1:1 - 55:2] (54 lines, 413 tokens)
   [1m[32mnode_modules/reprism/lib/languages/lolcode.js[39m[22m [1:1 - 55:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/livescript.js[39m[22m [1:1 - 118:2] (117 lines, 809 tokens)
   [1m[32mnode_modules/reprism/lib/languages/livescript.js[39m[22m [1:1 - 118:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/lisp.js[39m[22m [1:1 - 192:2] (191 lines, 1446 tokens)
   [1m[32mnode_modules/reprism/lib/languages/lisp.js[39m[22m [1:1 - 192:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/liquid.js[39m[22m [1:1 - 22:2] (21 lines, 132 tokens)
   [1m[32mnode_modules/reprism/lib/languages/liquid.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/less.js[39m[22m [1:1 - 66:2] (65 lines, 347 tokens)
   [1m[32mnode_modules/reprism/lib/languages/less.js[39m[22m [1:1 - 66:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/latex.js[39m[22m [1:1 - 68:2] (67 lines, 347 tokens)
   [1m[32mnode_modules/reprism/lib/languages/latex.js[39m[22m [1:1 - 68:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/kotlin.js[39m[22m [1:1 - 65:2] (64 lines, 435 tokens)
   [1m[32mnode_modules/reprism/lib/languages/kotlin.js[39m[22m [1:1 - 65:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/keyman.js[39m[22m [1:1 - 23:2] (22 lines, 278 tokens)
   [1m[32mnode_modules/reprism/lib/languages/keyman.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/julia.js[39m[22m [1:1 - 22:2] (21 lines, 229 tokens)
   [1m[32mnode_modules/reprism/lib/languages/julia.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/jsx.js[39m[22m [1:1 - 121:2] (120 lines, 1272 tokens)
   [1m[32mnode_modules/reprism/lib/languages/jsx.js[39m[22m [1:1 - 121:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/json.js[39m[22m [1:1 - 24:2] (23 lines, 168 tokens)
   [1m[32mnode_modules/reprism/lib/languages/json.js[39m[22m [1:1 - 24:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/jolie.js[39m[22m [1:1 - 65:2] (64 lines, 392 tokens)
   [1m[32mnode_modules/reprism/lib/languages/jolie.js[39m[22m [1:1 - 65:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/javascript.js[39m[22m [1:1 - 65:2] (64 lines, 415 tokens)
   [1m[32mnode_modules/reprism/lib/languages/javascript.js[39m[22m [1:1 - 65:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/java.js[39m[22m [1:1 - 37:2] (36 lines, 241 tokens)
   [1m[32mnode_modules/reprism/lib/languages/java.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/j.js[39m[22m [1:1 - 35:2] (34 lines, 205 tokens)
   [1m[32mnode_modules/reprism/lib/languages/j.js[39m[22m [1:1 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/io.js[39m[22m [1:1 - 37:2] (36 lines, 395 tokens)
   [1m[32mnode_modules/reprism/lib/languages/io.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/ini.js[39m[22m [1:1 - 21:2] (20 lines, 125 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ini.js[39m[22m [1:1 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/inform7.js[39m[22m [1:1 - 71:2] (70 lines, 448 tokens)
   [1m[32mnode_modules/reprism/lib/languages/inform7.js[39m[22m [1:1 - 71:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/icon.js[39m[22m [1:1 - 30:2] (29 lines, 183 tokens)
   [1m[32mnode_modules/reprism/lib/languages/icon.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/ichigojam.js[39m[22m [1:1 - 25:2] (24 lines, 276 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ichigojam.js[39m[22m [1:1 - 25:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/http.js[39m[22m [1:1 - 58:2] (57 lines, 380 tokens)
   [1m[32mnode_modules/reprism/lib/languages/http.js[39m[22m [1:1 - 58:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/hsts.js[39m[22m [1:1 - 30:2] (29 lines, 145 tokens)
   [1m[32mnode_modules/reprism/lib/languages/hsts.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/hpkp.js[39m[22m [1:1 - 30:2] (29 lines, 145 tokens)
   [1m[32mnode_modules/reprism/lib/languages/hpkp.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/haxe.js[39m[22m [1:1 - 55:2] (54 lines, 361 tokens)
   [1m[32mnode_modules/reprism/lib/languages/haxe.js[39m[22m [1:1 - 55:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/haskell.js[39m[22m [1:1 - 46:2] (45 lines, 274 tokens)
   [1m[32mnode_modules/reprism/lib/languages/haskell.js[39m[22m [1:1 - 46:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/handlebars.js[39m[22m [1:1 - 45:2] (44 lines, 334 tokens)
   [1m[32mnode_modules/reprism/lib/languages/handlebars.js[39m[22m [1:1 - 45:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/haml.js[39m[22m [1:1 - 145:2] (144 lines, 940 tokens)
   [1m[32mnode_modules/reprism/lib/languages/haml.js[39m[22m [1:1 - 145:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/groovy.js[39m[22m [1:1 - 72:2] (71 lines, 524 tokens)
   [1m[32mnode_modules/reprism/lib/languages/groovy.js[39m[22m [1:1 - 72:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/graphql.js[39m[22m [1:1 - 31:2] (30 lines, 219 tokens)
   [1m[32mnode_modules/reprism/lib/languages/graphql.js[39m[22m [1:1 - 31:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/go.js[39m[22m [1:1 - 22:2] (21 lines, 153 tokens)
   [1m[32mnode_modules/reprism/lib/languages/go.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/glsl.js[39m[22m [1:1 - 23:2] (22 lines, 184 tokens)
   [1m[32mnode_modules/reprism/lib/languages/glsl.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/git.js[39m[22m [1:1 - 78:2] (77 lines, 172 tokens)
   [1m[32mnode_modules/reprism/lib/languages/git.js[39m[22m [1:1 - 78:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/gherkin.js[39m[22m [1:1 - 89:2] (88 lines, 511 tokens)
   [1m[32mnode_modules/reprism/lib/languages/gherkin.js[39m[22m [1:1 - 89:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/gedcom.js[39m[22m [1:1 - 38:2] (37 lines, 216 tokens)
   [1m[32mnode_modules/reprism/lib/languages/gedcom.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/fsharp.js[39m[22m [1:1 - 38:2] (37 lines, 290 tokens)
   [1m[32mnode_modules/reprism/lib/languages/fsharp.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/fortran.js[39m[22m [1:1 - 46:2] (45 lines, 485 tokens)
   [1m[32mnode_modules/reprism/lib/languages/fortran.js[39m[22m [1:1 - 46:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/flow.js[39m[22m [1:1 - 39:2] (38 lines, 306 tokens)
   [1m[32mnode_modules/reprism/lib/languages/flow.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/erlang.js[39m[22m [1:1 - 45:2] (44 lines, 310 tokens)
   [1m[32mnode_modules/reprism/lib/languages/erlang.js[39m[22m [1:1 - 45:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/erb.js[39m[22m [1:1 - 28:2] (27 lines, 236 tokens)
   [1m[32mnode_modules/reprism/lib/languages/erb.js[39m[22m [1:1 - 28:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/elixir.js[39m[22m [1:1 - 94:2] (93 lines, 538 tokens)
   [1m[32mnode_modules/reprism/lib/languages/elixir.js[39m[22m [1:1 - 94:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/eiffel.js[39m[22m [1:1 - 45:2] (44 lines, 459 tokens)
   [1m[32mnode_modules/reprism/lib/languages/eiffel.js[39m[22m [1:1 - 45:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/docker.js[39m[22m [1:1 - 21:2] (20 lines, 133 tokens)
   [1m[32mnode_modules/reprism/lib/languages/docker.js[39m[22m [1:1 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/django.js[39m[22m [1:1 - 53:2] (52 lines, 428 tokens)
   [1m[32mnode_modules/reprism/lib/languages/django.js[39m[22m [1:1 - 53:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/diff.js[39m[22m [1:1 - 29:2] (28 lines, 186 tokens)
   [1m[32mnode_modules/reprism/lib/languages/diff.js[39m[22m [1:1 - 29:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/dart.js[39m[22m [1:1 - 28:2] (27 lines, 291 tokens)
   [1m[32mnode_modules/reprism/lib/languages/dart.js[39m[22m [1:1 - 28:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/d.js[39m[22m [1:1 - 67:2] (66 lines, 491 tokens)
   [1m[32mnode_modules/reprism/lib/languages/d.js[39m[22m [1:1 - 67:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/css.js[39m[22m [1:1 - 62:2] (61 lines, 412 tokens)
   [1m[32mnode_modules/reprism/lib/languages/css.js[39m[22m [1:1 - 62:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/css-extras.js[39m[22m [1:1 - 26:2] (25 lines, 166 tokens)
   [1m[32mnode_modules/reprism/lib/languages/css-extras.js[39m[22m [1:1 - 26:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/csp.js[39m[22m [1:1 - 35:2] (34 lines, 145 tokens)
   [1m[32mnode_modules/reprism/lib/languages/csp.js[39m[22m [1:1 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/csharp.js[39m[22m [1:1 - 81:2] (80 lines, 484 tokens)
   [1m[32mnode_modules/reprism/lib/languages/csharp.js[39m[22m [1:1 - 81:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/crystal.js[39m[22m [1:1 - 54:2] (53 lines, 339 tokens)
   [1m[32mnode_modules/reprism/lib/languages/crystal.js[39m[22m [1:1 - 54:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/cpp.js[39m[22m [1:1 - 30:2] (29 lines, 196 tokens)
   [1m[32mnode_modules/reprism/lib/languages/cpp.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/coffeescript.js[39m[22m [1:1 - 91:2] (90 lines, 541 tokens)
   [1m[32mnode_modules/reprism/lib/languages/coffeescript.js[39m[22m [1:1 - 91:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/clojure.js[39m[22m [1:1 - 23:2] (22 lines, 172 tokens)
   [1m[32mnode_modules/reprism/lib/languages/clojure.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/clike.js[39m[22m [1:1 - 37:2] (36 lines, 227 tokens)
   [1m[32mnode_modules/reprism/lib/languages/clike.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/c.js[39m[22m [1:1 - 43:2] (42 lines, 263 tokens)
   [1m[32mnode_modules/reprism/lib/languages/c.js[39m[22m [1:1 - 43:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/bro.js[39m[22m [1:1 - 57:2] (56 lines, 282 tokens)
   [1m[32mnode_modules/reprism/lib/languages/bro.js[39m[22m [1:1 - 57:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/brainfuck.js[39m[22m [1:1 - 30:2] (29 lines, 178 tokens)
   [1m[32mnode_modules/reprism/lib/languages/brainfuck.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/bison.js[39m[22m [1:1 - 49:2] (48 lines, 306 tokens)
   [1m[32mnode_modules/reprism/lib/languages/bison.js[39m[22m [1:1 - 49:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/batch.js[39m[22m [1:1 - 97:2] (96 lines, 667 tokens)
   [1m[32mnode_modules/reprism/lib/languages/batch.js[39m[22m [1:1 - 97:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/basic.js[39m[22m [1:1 - 27:2] (26 lines, 408 tokens)
   [1m[32mnode_modules/reprism/lib/languages/basic.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/bash.js[39m[22m [1:1 - 88:2] (87 lines, 609 tokens)
   [1m[32mnode_modules/reprism/lib/languages/bash.js[39m[22m [1:1 - 88:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/autoit.js[39m[22m [1:1 - 41:2] (40 lines, 247 tokens)
   [1m[32mnode_modules/reprism/lib/languages/autoit.js[39m[22m [1:1 - 41:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/autohotkey.js[39m[22m [1:1 - 37:2] (36 lines, 206 tokens)
   [1m[32mnode_modules/reprism/lib/languages/autohotkey.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/aspnet.js[39m[22m [1:1 - 46:2] (45 lines, 342 tokens)
   [1m[32mnode_modules/reprism/lib/languages/aspnet.js[39m[22m [1:1 - 46:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/asm6502.js[39m[22m [1:1 - 38:2] (37 lines, 224 tokens)
   [1m[32mnode_modules/reprism/lib/languages/asm6502.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/asciidoc.js[39m[22m [1:1 - 271:2] (270 lines, 1896 tokens)
   [1m[32mnode_modules/reprism/lib/languages/asciidoc.js[39m[22m [1:1 - 271:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/arff.js[39m[22m [1:1 - 20:2] (19 lines, 123 tokens)
   [1m[32mnode_modules/reprism/lib/languages/arff.js[39m[22m [1:1 - 20:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/arduino.js[39m[22m [1:1 - 15:2] (14 lines, 103 tokens)
   [1m[32mnode_modules/reprism/lib/languages/arduino.js[39m[22m [1:1 - 15:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/applescript.js[39m[22m [1:1 - 24:2] (23 lines, 365 tokens)
   [1m[32mnode_modules/reprism/lib/languages/applescript.js[39m[22m [1:1 - 24:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/apl.js[39m[22m [1:1 - 42:2] (41 lines, 252 tokens)
   [1m[32mnode_modules/reprism/lib/languages/apl.js[39m[22m [1:1 - 42:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/apacheconf.js[39m[22m [1:1 - 57:2] (56 lines, 327 tokens)
   [1m[32mnode_modules/reprism/lib/languages/apacheconf.js[39m[22m [1:1 - 57:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/ada.js[39m[22m [1:1 - 26:2] (25 lines, 260 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ada.js[39m[22m [1:1 - 26:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/actionscript.js[39m[22m [1:1 - 27:2] (26 lines, 192 tokens)
   [1m[32mnode_modules/reprism/lib/languages/actionscript.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/languages/abap.js[39m[22m [1:1 - 58:2] (57 lines, 305 tokens)
   [1m[32mnode_modules/reprism/lib/languages/abap.js[39m[22m [1:1 - 58:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/yaml.js[39m[22m [1:1 - 55:2] (54 lines, 333 tokens)
   [1m[32mnode_modules/reprism/lib/languages/yaml.js[39m[22m [1:1 - 55:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/xojo.js[39m[22m [1:1 - 27:2] (26 lines, 204 tokens)
   [1m[32mnode_modules/reprism/lib/languages/xojo.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/xeora.js[39m[22m [1:1 - 123:2] (122 lines, 706 tokens)
   [1m[32mnode_modules/reprism/lib/languages/xeora.js[39m[22m [1:1 - 123:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/wiki.js[39m[22m [1:1 - 82:2] (81 lines, 539 tokens)
   [1m[32mnode_modules/reprism/lib/languages/wiki.js[39m[22m [1:1 - 82:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/wasm.js[39m[22m [1:1 - 34:2] (33 lines, 318 tokens)
   [1m[32mnode_modules/reprism/lib/languages/wasm.js[39m[22m [1:1 - 34:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/visual-basic.js[39m[22m [1:1 - 41:2] (40 lines, 255 tokens)
   [1m[32mnode_modules/reprism/lib/languages/visual-basic.js[39m[22m [1:1 - 41:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/vim.js[39m[22m [1:1 - 20:2] (19 lines, 2419 tokens)
   [1m[32mnode_modules/reprism/lib/languages/vim.js[39m[22m [1:1 - 20:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/vhdl.js[39m[22m [1:1 - 33:2] (32 lines, 246 tokens)
   [1m[32mnode_modules/reprism/lib/languages/vhdl.js[39m[22m [1:1 - 33:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/verilog.js[39m[22m [1:1 - 30:2] (29 lines, 173 tokens)
   [1m[32mnode_modules/reprism/lib/languages/verilog.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/velocity.js[39m[22m [1:1 - 78:2] (77 lines, 516 tokens)
   [1m[32mnode_modules/reprism/lib/languages/velocity.js[39m[22m [1:1 - 78:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/vbnet.js[39m[22m [1:1 - 22:2] (21 lines, 142 tokens)
   [1m[32mnode_modules/reprism/lib/languages/vbnet.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/typescript.js[39m[22m [1:1 - 17:2] (16 lines, 116 tokens)
   [1m[32mnode_modules/reprism/lib/languages/typescript.js[39m[22m [1:1 - 17:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/twig.js[39m[22m [1:1 - 53:2] (52 lines, 414 tokens)
   [1m[32mnode_modules/reprism/lib/languages/twig.js[39m[22m [1:1 - 53:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/tsx.js[39m[22m [1:1 - 12:2] (11 lines, 101 tokens)
   [1m[32mnode_modules/reprism/lib/languages/tsx.js[39m[22m [1:1 - 12:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/textile.js[39m[22m [1:1 - 263:2] (262 lines, 1857 tokens)
   [1m[32mnode_modules/reprism/lib/languages/textile.js[39m[22m [1:1 - 263:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/tcl.js[39m[22m [1:1 - 49:2] (48 lines, 310 tokens)
   [1m[32mnode_modules/reprism/lib/languages/tcl.js[39m[22m [1:1 - 49:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/swift.js[39m[22m [1:1 - 35:2] (34 lines, 229 tokens)
   [1m[32mnode_modules/reprism/lib/languages/swift.js[39m[22m [1:1 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/stylus.js[39m[22m [1:1 - 118:2] (117 lines, 746 tokens)
   [1m[32mnode_modules/reprism/lib/languages/stylus.js[39m[22m [1:1 - 118:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/soy.js[39m[22m [1:1 - 95:2] (94 lines, 680 tokens)
   [1m[32mnode_modules/reprism/lib/languages/soy.js[39m[22m [1:1 - 95:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/smarty.js[39m[22m [1:1 - 88:2] (87 lines, 644 tokens)
   [1m[32mnode_modules/reprism/lib/languages/smarty.js[39m[22m [1:1 - 88:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/smalltalk.js[39m[22m [1:1 - 38:2] (37 lines, 263 tokens)
   [1m[32mnode_modules/reprism/lib/languages/smalltalk.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/scss.js[39m[22m [1:1 - 82:2] (81 lines, 480 tokens)
   [1m[32mnode_modules/reprism/lib/languages/scss.js[39m[22m [1:1 - 82:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/scheme.js[39m[22m [1:1 - 39:2] (38 lines, 231 tokens)
   [1m[32mnode_modules/reprism/lib/languages/scheme.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/scala.js[39m[22m [1:1 - 25:2] (24 lines, 187 tokens)
   [1m[32mnode_modules/reprism/lib/languages/scala.js[39m[22m [1:1 - 25:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/sass.js[39m[22m [1:1 - 75:2] (74 lines, 482 tokens)
   [1m[32mnode_modules/reprism/lib/languages/sass.js[39m[22m [1:1 - 75:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/sas.js[39m[22m [1:1 - 41:2] (40 lines, 257 tokens)
   [1m[32mnode_modules/reprism/lib/languages/sas.js[39m[22m [1:1 - 41:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/rust.js[39m[22m [1:1 - 70:2] (69 lines, 371 tokens)
   [1m[32mnode_modules/reprism/lib/languages/rust.js[39m[22m [1:1 - 70:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/ruby.js[39m[22m [1:1 - 124:2] (123 lines, 722 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ruby.js[39m[22m [1:1 - 124:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/roboconf.js[39m[22m [1:1 - 37:2] (36 lines, 222 tokens)
   [1m[32mnode_modules/reprism/lib/languages/roboconf.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/rip.js[39m[22m [1:1 - 42:2] (41 lines, 260 tokens)
   [1m[32mnode_modules/reprism/lib/languages/rip.js[39m[22m [1:1 - 42:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/rest.js[39m[22m [1:1 - 203:2] (202 lines, 1189 tokens)
   [1m[32mnode_modules/reprism/lib/languages/rest.js[39m[22m [1:1 - 203:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/renpy.js[39m[22m [1:1 - 39:2] (38 lines, 219 tokens)
   [1m[32mnode_modules/reprism/lib/languages/renpy.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/reason.js[39m[22m [1:1 - 42:2] (41 lines, 259 tokens)
   [1m[32mnode_modules/reprism/lib/languages/reason.js[39m[22m [1:1 - 42:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/r.js[39m[22m [1:1 - 29:2] (28 lines, 235 tokens)
   [1m[32mnode_modules/reprism/lib/languages/r.js[39m[22m [1:1 - 29:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/qore.js[39m[22m [1:1 - 30:2] (29 lines, 189 tokens)
   [1m[32mnode_modules/reprism/lib/languages/qore.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/q.js[39m[22m [1:1 - 58:2] (57 lines, 309 tokens)
   [1m[32mnode_modules/reprism/lib/languages/q.js[39m[22m [1:1 - 58:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/python.js[39m[22m [1:1 - 39:2] (38 lines, 236 tokens)
   [1m[32mnode_modules/reprism/lib/languages/python.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/pure.js[39m[22m [1:1 - 80:2] (79 lines, 643 tokens)
   [1m[32mnode_modules/reprism/lib/languages/pure.js[39m[22m [1:1 - 80:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/puppet.js[39m[22m [1:1 - 139:2] (138 lines, 851 tokens)
   [1m[32mnode_modules/reprism/lib/languages/puppet.js[39m[22m [1:1 - 139:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/pug.js[39m[22m [1:1 - 185:2] (184 lines, 1204 tokens)
   [1m[32mnode_modules/reprism/lib/languages/pug.js[39m[22m [1:1 - 185:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/protobuf.js[39m[22m [1:1 - 18:2] (17 lines, 119 tokens)
   [1m[32mnode_modules/reprism/lib/languages/protobuf.js[39m[22m [1:1 - 18:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/properties.js[39m[22m [1:1 - 19:2] (18 lines, 116 tokens)
   [1m[32mnode_modules/reprism/lib/languages/properties.js[39m[22m [1:1 - 19:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/prolog.js[39m[22m [1:1 - 27:2] (26 lines, 176 tokens)
   [1m[32mnode_modules/reprism/lib/languages/prolog.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/processing.js[39m[22m [1:1 - 28:2] (27 lines, 189 tokens)
   [1m[32mnode_modules/reprism/lib/languages/processing.js[39m[22m [1:1 - 28:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/powershell.js[39m[22m [1:1 - 54:2] (53 lines, 592 tokens)
   [1m[32mnode_modules/reprism/lib/languages/powershell.js[39m[22m [1:1 - 54:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/plsql.js[39m[22m [1:1 - 23:2] (22 lines, 232 tokens)
   [1m[32mnode_modules/reprism/lib/languages/plsql.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/php.js[39m[22m [1:1 - 133:2] (132 lines, 808 tokens)
   [1m[32mnode_modules/reprism/lib/languages/php.js[39m[22m [1:1 - 133:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/php-extras.js[39m[22m [1:1 - 21:2] (20 lines, 130 tokens)
   [1m[32mnode_modules/reprism/lib/languages/php-extras.js[39m[22m [1:1 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/perl.js[39m[22m [1:1 - 195:2] (194 lines, 1260 tokens)
   [1m[32mnode_modules/reprism/lib/languages/perl.js[39m[22m [1:1 - 195:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/pascal.js[39m[22m [1:1 - 50:2] (49 lines, 321 tokens)
   [1m[32mnode_modules/reprism/lib/languages/pascal.js[39m[22m [1:1 - 50:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/parser.js[39m[22m [1:1 - 77:2] (76 lines, 563 tokens)
   [1m[32mnode_modules/reprism/lib/languages/parser.js[39m[22m [1:1 - 77:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/parigp.js[39m[22m [1:1 - 35:2] (34 lines, 329 tokens)
   [1m[32mnode_modules/reprism/lib/languages/parigp.js[39m[22m [1:1 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/oz.js[39m[22m [1:1 - 32:2] (31 lines, 202 tokens)
   [1m[32mnode_modules/reprism/lib/languages/oz.js[39m[22m [1:1 - 32:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/opencl.js[39m[22m [1:1 - 57:2] (56 lines, 346 tokens)
   [1m[32mnode_modules/reprism/lib/languages/opencl.js[39m[22m [1:1 - 57:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/ocaml.js[39m[22m [1:1 - 34:2] (33 lines, 207 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ocaml.js[39m[22m [1:1 - 34:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/objectivec.js[39m[22m [1:1 - 15:2] (14 lines, 149 tokens)
   [1m[32mnode_modules/reprism/lib/languages/objectivec.js[39m[22m [1:1 - 15:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/nsis.js[39m[22m [1:1 - 39:2] (38 lines, 209 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nsis.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/nix.js[39m[22m [1:1 - 47:2] (46 lines, 292 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nix.js[39m[22m [1:1 - 47:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/nim.js[39m[22m [1:1 - 43:2] (42 lines, 235 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nim.js[39m[22m [1:1 - 43:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/nginx.js[39m[22m [1:1 - 21:2] (20 lines, 139 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nginx.js[39m[22m [1:1 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/nasm.js[39m[22m [1:1 - 29:2] (28 lines, 201 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nasm.js[39m[22m [1:1 - 29:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/n4js.js[39m[22m [1:1 - 24:2] (23 lines, 155 tokens)
   [1m[32mnode_modules/reprism/lib/languages/n4js.js[39m[22m [1:1 - 24:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/monkey.js[39m[22m [1:1 - 38:2] (37 lines, 247 tokens)
   [1m[32mnode_modules/reprism/lib/languages/monkey.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/mizar.js[39m[22m [1:1 - 22:2] (21 lines, 137 tokens)
   [1m[32mnode_modules/reprism/lib/languages/mizar.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/mel.js[39m[22m [1:1 - 49:2] (48 lines, 310 tokens)
   [1m[32mnode_modules/reprism/lib/languages/mel.js[39m[22m [1:1 - 49:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/matlab.js[39m[22m [1:1 - 23:2] (22 lines, 149 tokens)
   [1m[32mnode_modules/reprism/lib/languages/matlab.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/markup.js[39m[22m [1:1 - 60:2] (59 lines, 434 tokens)
   [1m[32mnode_modules/reprism/lib/languages/markup.js[39m[22m [1:1 - 60:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/markup-templating.js[39m[22m [1:1 - 102:2] (101 lines, 1002 tokens)
   [1m[32mnode_modules/reprism/lib/languages/markup-templating.js[39m[22m [1:1 - 102:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/markdown.js[39m[22m [1:1 - 124:2] (123 lines, 760 tokens)
   [1m[32mnode_modules/reprism/lib/languages/markdown.js[39m[22m [1:1 - 124:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/makefile.js[39m[22m [1:1 - 43:2] (42 lines, 266 tokens)
   [1m[32mnode_modules/reprism/lib/languages/makefile.js[39m[22m [1:1 - 43:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/lua.js[39m[22m [1:1 - 27:2] (26 lines, 164 tokens)
   [1m[32mnode_modules/reprism/lib/languages/lua.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/lolcode.js[39m[22m [1:1 - 55:2] (54 lines, 413 tokens)
   [1m[32mnode_modules/reprism/lib/languages/lolcode.js[39m[22m [1:1 - 55:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/livescript.js[39m[22m [1:1 - 118:2] (117 lines, 809 tokens)
   [1m[32mnode_modules/reprism/lib/languages/livescript.js[39m[22m [1:1 - 118:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/lisp.js[39m[22m [1:1 - 192:2] (191 lines, 1446 tokens)
   [1m[32mnode_modules/reprism/lib/languages/lisp.js[39m[22m [1:1 - 192:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/liquid.js[39m[22m [1:1 - 22:2] (21 lines, 132 tokens)
   [1m[32mnode_modules/reprism/lib/languages/liquid.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/less.js[39m[22m [1:1 - 66:2] (65 lines, 347 tokens)
   [1m[32mnode_modules/reprism/lib/languages/less.js[39m[22m [1:1 - 66:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/latex.js[39m[22m [1:1 - 68:2] (67 lines, 347 tokens)
   [1m[32mnode_modules/reprism/lib/languages/latex.js[39m[22m [1:1 - 68:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/kotlin.js[39m[22m [1:1 - 65:2] (64 lines, 435 tokens)
   [1m[32mnode_modules/reprism/lib/languages/kotlin.js[39m[22m [1:1 - 65:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/keyman.js[39m[22m [1:1 - 23:2] (22 lines, 278 tokens)
   [1m[32mnode_modules/reprism/lib/languages/keyman.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/julia.js[39m[22m [1:1 - 22:2] (21 lines, 229 tokens)
   [1m[32mnode_modules/reprism/lib/languages/julia.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/jsx.js[39m[22m [1:1 - 121:2] (120 lines, 1272 tokens)
   [1m[32mnode_modules/reprism/lib/languages/jsx.js[39m[22m [1:1 - 121:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/json.js[39m[22m [1:1 - 24:2] (23 lines, 168 tokens)
   [1m[32mnode_modules/reprism/lib/languages/json.js[39m[22m [1:1 - 24:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/jolie.js[39m[22m [1:1 - 65:2] (64 lines, 392 tokens)
   [1m[32mnode_modules/reprism/lib/languages/jolie.js[39m[22m [1:1 - 65:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/javascript.js[39m[22m [1:1 - 65:2] (64 lines, 415 tokens)
   [1m[32mnode_modules/reprism/lib/languages/javascript.js[39m[22m [1:1 - 65:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/java.js[39m[22m [1:1 - 37:2] (36 lines, 241 tokens)
   [1m[32mnode_modules/reprism/lib/languages/java.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/j.js[39m[22m [1:1 - 35:2] (34 lines, 205 tokens)
   [1m[32mnode_modules/reprism/lib/languages/j.js[39m[22m [1:1 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/io.js[39m[22m [1:1 - 37:2] (36 lines, 395 tokens)
   [1m[32mnode_modules/reprism/lib/languages/io.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/ini.js[39m[22m [1:1 - 21:2] (20 lines, 125 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ini.js[39m[22m [1:1 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/inform7.js[39m[22m [1:1 - 71:2] (70 lines, 448 tokens)
   [1m[32mnode_modules/reprism/lib/languages/inform7.js[39m[22m [1:1 - 71:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/icon.js[39m[22m [1:1 - 30:2] (29 lines, 183 tokens)
   [1m[32mnode_modules/reprism/lib/languages/icon.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/ichigojam.js[39m[22m [1:1 - 25:2] (24 lines, 276 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ichigojam.js[39m[22m [1:1 - 25:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/http.js[39m[22m [1:1 - 58:2] (57 lines, 380 tokens)
   [1m[32mnode_modules/reprism/lib/languages/http.js[39m[22m [1:1 - 58:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/hsts.js[39m[22m [1:1 - 30:2] (29 lines, 145 tokens)
   [1m[32mnode_modules/reprism/lib/languages/hsts.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/hpkp.js[39m[22m [1:1 - 30:2] (29 lines, 145 tokens)
   [1m[32mnode_modules/reprism/lib/languages/hpkp.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/haxe.js[39m[22m [1:1 - 55:2] (54 lines, 361 tokens)
   [1m[32mnode_modules/reprism/lib/languages/haxe.js[39m[22m [1:1 - 55:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/haskell.js[39m[22m [1:1 - 46:2] (45 lines, 274 tokens)
   [1m[32mnode_modules/reprism/lib/languages/haskell.js[39m[22m [1:1 - 46:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/handlebars.js[39m[22m [1:1 - 45:2] (44 lines, 334 tokens)
   [1m[32mnode_modules/reprism/lib/languages/handlebars.js[39m[22m [1:1 - 45:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/haml.js[39m[22m [1:1 - 145:2] (144 lines, 940 tokens)
   [1m[32mnode_modules/reprism/lib/languages/haml.js[39m[22m [1:1 - 145:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/groovy.js[39m[22m [1:1 - 72:2] (71 lines, 524 tokens)
   [1m[32mnode_modules/reprism/lib/languages/groovy.js[39m[22m [1:1 - 72:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/graphql.js[39m[22m [1:1 - 31:2] (30 lines, 219 tokens)
   [1m[32mnode_modules/reprism/lib/languages/graphql.js[39m[22m [1:1 - 31:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/go.js[39m[22m [1:1 - 22:2] (21 lines, 153 tokens)
   [1m[32mnode_modules/reprism/lib/languages/go.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/glsl.js[39m[22m [1:1 - 23:2] (22 lines, 184 tokens)
   [1m[32mnode_modules/reprism/lib/languages/glsl.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/git.js[39m[22m [1:1 - 78:2] (77 lines, 172 tokens)
   [1m[32mnode_modules/reprism/lib/languages/git.js[39m[22m [1:1 - 78:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/gherkin.js[39m[22m [1:1 - 89:2] (88 lines, 511 tokens)
   [1m[32mnode_modules/reprism/lib/languages/gherkin.js[39m[22m [1:1 - 89:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/gedcom.js[39m[22m [1:1 - 38:2] (37 lines, 216 tokens)
   [1m[32mnode_modules/reprism/lib/languages/gedcom.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/fsharp.js[39m[22m [1:1 - 38:2] (37 lines, 290 tokens)
   [1m[32mnode_modules/reprism/lib/languages/fsharp.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/fortran.js[39m[22m [1:1 - 46:2] (45 lines, 485 tokens)
   [1m[32mnode_modules/reprism/lib/languages/fortran.js[39m[22m [1:1 - 46:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/flow.js[39m[22m [1:1 - 39:2] (38 lines, 306 tokens)
   [1m[32mnode_modules/reprism/lib/languages/flow.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/erlang.js[39m[22m [1:1 - 45:2] (44 lines, 310 tokens)
   [1m[32mnode_modules/reprism/lib/languages/erlang.js[39m[22m [1:1 - 45:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/erb.js[39m[22m [1:1 - 28:2] (27 lines, 236 tokens)
   [1m[32mnode_modules/reprism/lib/languages/erb.js[39m[22m [1:1 - 28:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/elixir.js[39m[22m [1:1 - 94:2] (93 lines, 538 tokens)
   [1m[32mnode_modules/reprism/lib/languages/elixir.js[39m[22m [1:1 - 94:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/eiffel.js[39m[22m [1:1 - 45:2] (44 lines, 459 tokens)
   [1m[32mnode_modules/reprism/lib/languages/eiffel.js[39m[22m [1:1 - 45:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/docker.js[39m[22m [1:1 - 21:2] (20 lines, 133 tokens)
   [1m[32mnode_modules/reprism/lib/languages/docker.js[39m[22m [1:1 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/django.js[39m[22m [1:1 - 53:2] (52 lines, 428 tokens)
   [1m[32mnode_modules/reprism/lib/languages/django.js[39m[22m [1:1 - 53:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/diff.js[39m[22m [1:1 - 29:2] (28 lines, 186 tokens)
   [1m[32mnode_modules/reprism/lib/languages/diff.js[39m[22m [1:1 - 29:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/dart.js[39m[22m [1:1 - 28:2] (27 lines, 291 tokens)
   [1m[32mnode_modules/reprism/lib/languages/dart.js[39m[22m [1:1 - 28:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/d.js[39m[22m [1:1 - 67:2] (66 lines, 491 tokens)
   [1m[32mnode_modules/reprism/lib/languages/d.js[39m[22m [1:1 - 67:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/css.js[39m[22m [1:1 - 62:2] (61 lines, 412 tokens)
   [1m[32mnode_modules/reprism/lib/languages/css.js[39m[22m [1:1 - 62:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/css-extras.js[39m[22m [1:1 - 26:2] (25 lines, 166 tokens)
   [1m[32mnode_modules/reprism/lib/languages/css-extras.js[39m[22m [1:1 - 26:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/csp.js[39m[22m [1:1 - 35:2] (34 lines, 145 tokens)
   [1m[32mnode_modules/reprism/lib/languages/csp.js[39m[22m [1:1 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/csharp.js[39m[22m [1:1 - 81:2] (80 lines, 484 tokens)
   [1m[32mnode_modules/reprism/lib/languages/csharp.js[39m[22m [1:1 - 81:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/crystal.js[39m[22m [1:1 - 54:2] (53 lines, 339 tokens)
   [1m[32mnode_modules/reprism/lib/languages/crystal.js[39m[22m [1:1 - 54:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/cpp.js[39m[22m [1:1 - 30:2] (29 lines, 196 tokens)
   [1m[32mnode_modules/reprism/lib/languages/cpp.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/coffeescript.js[39m[22m [1:1 - 91:2] (90 lines, 541 tokens)
   [1m[32mnode_modules/reprism/lib/languages/coffeescript.js[39m[22m [1:1 - 91:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/clojure.js[39m[22m [1:1 - 23:2] (22 lines, 172 tokens)
   [1m[32mnode_modules/reprism/lib/languages/clojure.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/clike.js[39m[22m [1:1 - 37:2] (36 lines, 227 tokens)
   [1m[32mnode_modules/reprism/lib/languages/clike.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/c.js[39m[22m [1:1 - 43:2] (42 lines, 263 tokens)
   [1m[32mnode_modules/reprism/lib/languages/c.js[39m[22m [1:1 - 43:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/bro.js[39m[22m [1:1 - 57:2] (56 lines, 282 tokens)
   [1m[32mnode_modules/reprism/lib/languages/bro.js[39m[22m [1:1 - 57:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/brainfuck.js[39m[22m [1:1 - 30:2] (29 lines, 178 tokens)
   [1m[32mnode_modules/reprism/lib/languages/brainfuck.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/bison.js[39m[22m [1:1 - 49:2] (48 lines, 306 tokens)
   [1m[32mnode_modules/reprism/lib/languages/bison.js[39m[22m [1:1 - 49:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/batch.js[39m[22m [1:1 - 97:2] (96 lines, 667 tokens)
   [1m[32mnode_modules/reprism/lib/languages/batch.js[39m[22m [1:1 - 97:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/basic.js[39m[22m [1:1 - 27:2] (26 lines, 408 tokens)
   [1m[32mnode_modules/reprism/lib/languages/basic.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/bash.js[39m[22m [1:1 - 88:2] (87 lines, 609 tokens)
   [1m[32mnode_modules/reprism/lib/languages/bash.js[39m[22m [1:1 - 88:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/autoit.js[39m[22m [1:1 - 41:2] (40 lines, 247 tokens)
   [1m[32mnode_modules/reprism/lib/languages/autoit.js[39m[22m [1:1 - 41:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/autohotkey.js[39m[22m [1:1 - 37:2] (36 lines, 206 tokens)
   [1m[32mnode_modules/reprism/lib/languages/autohotkey.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/aspnet.js[39m[22m [1:1 - 46:2] (45 lines, 342 tokens)
   [1m[32mnode_modules/reprism/lib/languages/aspnet.js[39m[22m [1:1 - 46:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/asm6502.js[39m[22m [1:1 - 38:2] (37 lines, 224 tokens)
   [1m[32mnode_modules/reprism/lib/languages/asm6502.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/asciidoc.js[39m[22m [1:1 - 271:2] (270 lines, 1896 tokens)
   [1m[32mnode_modules/reprism/lib/languages/asciidoc.js[39m[22m [1:1 - 271:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/arff.js[39m[22m [1:1 - 20:2] (19 lines, 123 tokens)
   [1m[32mnode_modules/reprism/lib/languages/arff.js[39m[22m [1:1 - 20:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/arduino.js[39m[22m [1:1 - 15:2] (14 lines, 103 tokens)
   [1m[32mnode_modules/reprism/lib/languages/arduino.js[39m[22m [1:1 - 15:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/applescript.js[39m[22m [1:1 - 24:2] (23 lines, 365 tokens)
   [1m[32mnode_modules/reprism/lib/languages/applescript.js[39m[22m [1:1 - 24:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/apl.js[39m[22m [1:1 - 42:2] (41 lines, 252 tokens)
   [1m[32mnode_modules/reprism/lib/languages/apl.js[39m[22m [1:1 - 42:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/apacheconf.js[39m[22m [1:1 - 57:2] (56 lines, 327 tokens)
   [1m[32mnode_modules/reprism/lib/languages/apacheconf.js[39m[22m [1:1 - 57:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/ada.js[39m[22m [1:1 - 26:2] (25 lines, 260 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ada.js[39m[22m [1:1 - 26:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/actionscript.js[39m[22m [1:1 - 27:2] (26 lines, 192 tokens)
   [1m[32mnode_modules/reprism/lib/languages/actionscript.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/languages/abap.js[39m[22m [1:1 - 58:2] (57 lines, 305 tokens)
   [1m[32mnode_modules/reprism/lib/languages/abap.js[39m[22m [1:1 - 58:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/__tests__/index.test.js[39m[22m [1:1 - 79:2] (78 lines, 751 tokens)
   [1m[32mnode_modules/reprism/lib/__tests__/index.test.js[39m[22m [1:1 - 79:2]

Clone found (javascript):
 - [1m[32mnode_modules/jscpd/dist/print/index.js[39m[22m [1:1 - 6:10] (5 lines, 77 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/validators/index.js[39m[22m [1:1 - 6:25]

Clone found (javascript):
 - [1m[32mnode_modules/jscpd/dist/init/index.js[39m[22m [1:1 - 6:8] (5 lines, 77 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/validators/index.js[39m[22m [1:1 - 6:25]

Clone found (javascript):
 - [1m[32mnode_modules/has-tostringtag/test/shams/core-js.js[39m[22m [8:12 - 19:20] (11 lines, 75 tokens)
   [1m[32mnode_modules/has-tostringtag/test/shams/get-own-property-symbols.js[39m[22m [8:2 - 20:27]

Clone found (javascript):
 - [1m[32mnode_modules/has-symbols/test/shams/get-own-property-symbols.js[39m[22m [1:1 - 14:11] (13 lines, 109 tokens)
   [1m[32mnode_modules/has-tostringtag/test/shams/get-own-property-symbols.js[39m[22m [1:1 - 14:21]

Clone found (javascript):
 - [1m[32mnode_modules/has-symbols/test/shams/core-js.js[39m[22m [1:1 - 19:20] (18 lines, 156 tokens)
   [1m[32mnode_modules/has-tostringtag/test/shams/get-own-property-symbols.js[39m[22m [1:1 - 20:27]

Clone found (javascript):
 - [1m[32mnode_modules/fs-extra/lib/mkdirs/make-dir.js[39m[22m [109:10 - 124:5] (15 lines, 115 tokens)
   [1m[32mnode_modules/fs-extra/lib/mkdirs/make-dir.js[39m[22m [59:6 - 74:6]

Clone found (javascript):
 - [1m[32mnode_modules/fs-extra/lib/ensure/symlink-paths.js[39m[22m [51:2 - 59:5] (8 lines, 80 tokens)
   [1m[32mnode_modules/fs-extra/lib/ensure/symlink-paths.js[39m[22m [30:2 - 38:8]

Clone found (javascript):
 - [1m[32mnode_modules/fs-extra/lib/copy/copy.js[39m[22m [18:2 - 30:5] (12 lines, 109 tokens)
   [1m[32mnode_modules/fs-extra/lib/copy-sync/copy-sync.js[39m[22m [12:3 - 24:6]

Clone found (javascript):
 - [1m[32mnode_modules/fast-glob/out/utils/fs.js[39m[22m [1:1 - 19:2] (18 lines, 221 tokens)
   [1m[32mnode_modules/@nodelib/fs.scandir/out/utils/fs.js[39m[22m [1:1 - 19:2]

Clone found (javascript):
 - [1m[32mnode_modules/fast-glob/out/providers/stream.js[39m[22m [22:12 - 31:15] (9 lines, 78 tokens)
   [1m[32mnode_modules/fast-glob/out/providers/sync.js[39m[22m [14:2 - 23:13]

Clone found (javascript):
 - [1m[32mnode_modules/fast-glob/out/providers/async.js[39m[22m [14:2 - 23:14] (9 lines, 79 tokens)
   [1m[32mnode_modules/fast-glob/out/providers/sync.js[39m[22m [14:10 - 23:13]

Clone found (javascript):
 - [1m[32mnode_modules/colors/lib/system/supports-colors.js[39m[22m [1:1 - 151:2] (150 lines, 980 tokens)
   [1m[32mnode_modules/@colors/colors/lib/system/supports-colors.js[39m[22m [1:1 - 151:2]

Clone found (javascript):
 - [1m[32mnode_modules/colors/lib/system/has-flag.js[39m[22m [1:1 - 35:2] (34 lines, 131 tokens)
   [1m[32mnode_modules/@colors/colors/lib/system/has-flag.js[39m[22m [1:1 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/colors/lib/maps/random.js[39m[22m [1:1 - 11:2] (10 lines, 150 tokens)
   [1m[32mnode_modules/@colors/colors/lib/maps/random.js[39m[22m [1:1 - 11:2]

Clone found (javascript):
 - [1m[32mnode_modules/colors/lib/maps/rainbow.js[39m[22m [1:1 - 11:2] (10 lines, 113 tokens)
   [1m[32mnode_modules/@colors/colors/lib/maps/rainbow.js[39m[22m [1:1 - 11:2]

Clone found (javascript):
 - [1m[32mnode_modules/colors/lib/maps/america.js[39m[22m [1:1 - 10:2] (9 lines, 113 tokens)
   [1m[32mnode_modules/@colors/colors/lib/maps/america.js[39m[22m [1:1 - 10:2]

Clone found (javascript):
 - [1m[32mnode_modules/colors/lib/custom/zalgo.js[39m[22m [1:1 - 109:2] (108 lines, 1170 tokens)
   [1m[32mnode_modules/@colors/colors/lib/custom/zalgo.js[39m[22m [1:1 - 109:2]

Clone found (javascript):
 - [1m[32mnode_modules/colors/lib/custom/trap.js[39m[22m [1:1 - 46:2] (45 lines, 649 tokens)
   [1m[32mnode_modules/@colors/colors/lib/custom/trap.js[39m[22m [1:1 - 46:2]

Clone found (typescript):
 - [1m[32mnode_modules/blamer/build/main/blame-result.interface.d.ts[39m[22m [1:1 - 11:2] (10 lines, 73 tokens)
   [1m[32mnode_modules/blamer/build/module/blame-result.interface.d.ts[39m[22m [1:1 - 11:2]

Clone found (javascript):
 - [1m[32mnode_modules/@nodelib/fs.scandir/out/index.js[39m[22m [8:8 - 15:8] (7 lines, 73 tokens)
   [1m[32mnode_modules/@nodelib/fs.stat/out/index.js[39m[22m [8:5 - 15:5]

Clone found (javascript):
 - [1m[32mnode_modules/@jscpd/tokenizer/dist/index.js[39m[22m [1:1 - 6:6] (5 lines, 73 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/validators/index.js[39m[22m [1:1 - 6:9]

Clone found (javascript):
 - [1m[32mnode_modules/@jscpd/finder/dist/index.js[39m[22m [1:1 - 6:22] (5 lines, 77 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/validators/index.js[39m[22m [1:1 - 6:25]

Clone found (javascript):
 - [1m[32mnode_modules/@jscpd/core/dist/rabin-karp.js[39m[22m [1:1 - 12:13] (11 lines, 311 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/hooks/blamer.js[39m[22m [1:1 - 12:9]

Clone found (javascript):
 - [1m[32mnode_modules/@jscpd/core/dist/index.js[39m[22m [1:1 - 6:13] (5 lines, 77 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/validators/index.js[39m[22m [1:1 - 6:25]

Clone found (javascript):
 - [1m[32mnode_modules/@jscpd/core/dist/detector.js[39m[22m [1:1 - 12:13] (11 lines, 311 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/hooks/blamer.js[39m[22m [1:1 - 12:9]

Clone found (javascript):
 - [1m[32mnode_modules/@colors/colors/examples/normal-usage.js[39m[22m [42:2 - 53:2] (11 lines, 73 tokens)
   [1m[32mnode_modules/@colors/colors/themes/generic-logging.js[39m[22m [1:2 - 12:2]

Clone found (javascript):
 - [1m[32mnode_modules/@colors/colors/examples/normal-usage.js[39m[22m [44:7 - 56:19] (12 lines, 69 tokens)
   [1m[32mnode_modules/@colors/colors/examples/safe-string.js[39m[22m [43:7 - 55:7]

Clone found (javascript):
 - [1m[32mnode_modules/@babel/helper-validator-identifier/lib/identifier.js[39m[22m [39:6 - 44:19] (5 lines, 78 tokens)
   [1m[32mnode_modules/@babel/helper-validator-identifier/lib/identifier.js[39m[22m [27:3 - 32:24]

Clone found (typescript):
 - [1m[32mdocs/duplication-tests/ts-with-results/src/file1.ts[39m[22m [1:2 - 24:2] (23 lines, 93 tokens)
   [1m[32mdocs/duplication-tests/ts-with-results/src/file2.ts[39m[22m [1:2 - 23:2]

Clone found (typescript):
 - [1m[32mnode_modules/with/src/globals.ts[39m[22m [115:8 - 122:2] (7 lines, 80 tokens)
   [1m[32mnode_modules/with/src/globals.ts[39m[22m [80:1 - 113:2]

Clone found (javascript):
 - [1m[32mnode_modules/with/lib/reference.js[39m[22m [4:2 - 9:19] (5 lines, 64 tokens)
   [1m[32mnode_modules/blamer/build/main/index.js[39m[22m [8:5 - 13:13]

Clone found (javascript):
 - [1m[32mnode_modules/with/lib/index.js[39m[22m [1:1 - 21:4] (20 lines, 383 tokens)
   [1m[32mnode_modules/blamer/build/main/index.js[39m[22m [1:1 - 21:7]

Clone found (javascript):
 - [1m[32mnode_modules/with/lib/index.js[39m[22m [20:2 - 25:6] (5 lines, 81 tokens)
   [1m[32mnode_modules/blamer/build/main/vcs/git.js[39m[22m [1:13 - 6:8]

Clone found (javascript):
 - [1m[32mnode_modules/with/lib/globals.js[39m[22m [1:1 - 25:15] (24 lines, 464 tokens)
   [1m[32mnode_modules/blamer/build/main/index.js[39m[22m [1:1 - 25:9]

Clone found (javascript):
 - [1m[32mnode_modules/with/lib/globals.js[39m[22m [116:17 - 123:2] (7 lines, 88 tokens)
   [1m[32mnode_modules/with/lib/globals.js[39m[22m [84:23 - 114:2]

Clone found (javascript):
 - [1m[32mnode_modules/reusify/benchmarks/createNoCodeFunction.js[39m[22m [24:21 - 30:2] (6 lines, 58 tokens)
   [1m[32mnode_modules/reusify/benchmarks/reuseNoCodeFunction.js[39m[22m [32:20 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/shadowed_core.js[39m[22m [42:2 - 48:78] (6 lines, 55 tokens)
   [1m[32mnode_modules/resolve/test/shadowed_core.js[39m[22m [25:2 - 31:64]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver_sync.js[39m[22m [342:9 - 348:2] (6 lines, 68 tokens)
   [1m[32mnode_modules/resolve/test/resolver_sync.js[39m[22m [335:5 - 341:3]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver_sync.js[39m[22m [357:14 - 364:14] (7 lines, 76 tokens)
   [1m[32mnode_modules/resolve/test/resolver_sync.js[39m[22m [336:17 - 343:17]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver_sync.js[39m[22m [363:9 - 369:2] (6 lines, 68 tokens)
   [1m[32mnode_modules/resolve/test/resolver_sync.js[39m[22m [356:5 - 362:3]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver_sync.js[39m[22m [364:14 - 374:14] (10 lines, 76 tokens)
   [1m[32mnode_modules/resolve/test/resolver_sync.js[39m[22m [343:17 - 353:12]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver_sync.js[39m[22m [581:23 - 600:32] (19 lines, 173 tokens)
   [1m[32mnode_modules/resolve/test/resolver_sync.js[39m[22m [567:19 - 586:42]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [21:11 - 27:8] (6 lines, 88 tokens)
   [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [15:8 - 21:11]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [63:2 - 71:2] (8 lines, 107 tokens)
   [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [57:11 - 65:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [88:2 - 93:2] (5 lines, 71 tokens)
   [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [82:2 - 88:8]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [117:2 - 123:6] (6 lines, 75 tokens)
   [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [111:2 - 117:11]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [135:2 - 141:10] (6 lines, 85 tokens)
   [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [123:2 - 129:8]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [147:2 - 153:7] (6 lines, 73 tokens)
   [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [99:2 - 105:9]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [159:2 - 165:9] (6 lines, 75 tokens)
   [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [111:2 - 117:11]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [165:2 - 170:2] (5 lines, 73 tokens)
   [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [117:2 - 117:8]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [203:2 - 208:8] (5 lines, 58 tokens)
   [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [198:2 - 203:15]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [268:5 - 274:8] (6 lines, 64 tokens)
   [1m[32mnode_modules/resolve/test/resolver_sync.js[39m[22m [279:5 - 285:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [378:17 - 383:8] (5 lines, 61 tokens)
   [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [367:13 - 371:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [383:4 - 389:67] (6 lines, 81 tokens)
   [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [378:5 - 373:115]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [465:19 - 482:32] (17 lines, 166 tokens)
   [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [452:19 - 469:42]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/resolver.js[39m[22m [486:8 - 497:2] (11 lines, 78 tokens)
   [1m[32mnode_modules/resolve/test/resolver_sync.js[39m[22m [602:5 - 611:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/node_path.js[39m[22m [34:6 - 43:28] (9 lines, 89 tokens)
   [1m[32mnode_modules/resolve/test/node_path.js[39m[22m [22:6 - 31:28]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/node_path.js[39m[22m [46:6 - 55:28] (9 lines, 89 tokens)
   [1m[32mnode_modules/resolve/test/node_path.js[39m[22m [22:6 - 31:28]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/node-modules-paths.js[39m[22m [136:36 - 143:2] (7 lines, 77 tokens)
   [1m[32mnode_modules/resolve/test/node-modules-paths.js[39m[22m [125:6 - 133:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock_sync.js[39m[22m [62:20 - 83:6] (21 lines, 177 tokens)
   [1m[32mnode_modules/resolve/test/mock_sync.js[39m[22m [12:11 - 33:8]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock_sync.js[39m[22m [102:13 - 113:4] (11 lines, 125 tokens)
   [1m[32mnode_modules/resolve/test/mock_sync.js[39m[22m [16:13 - 27:7]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock_sync.js[39m[22m [156:15 - 165:15] (9 lines, 96 tokens)
   [1m[32mnode_modules/resolve/test/mock_sync.js[39m[22m [14:8 - 23:9]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [6:2 - 17:2] (11 lines, 95 tokens)
   [1m[32mnode_modules/resolve/test/mock_sync.js[39m[22m [6:2 - 17:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [38:11 - 44:6] (6 lines, 77 tokens)
   [1m[32mnode_modules/resolve/test/mock.js[39m[22m [32:8 - 38:11]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [55:20 - 68:5] (13 lines, 135 tokens)
   [1m[32mnode_modules/resolve/test/mock.js[39m[22m [5:7 - 18:5]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [75:5 - 86:3] (11 lines, 111 tokens)
   [1m[32mnode_modules/resolve/test/mock.js[39m[22m [24:2 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [86:6 - 95:6] (9 lines, 96 tokens)
   [1m[32mnode_modules/resolve/test/mock.js[39m[22m [35:10 - 89:11]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [92:6 - 106:15] (14 lines, 155 tokens)
   [1m[32mnode_modules/resolve/test/mock.js[39m[22m [41:10 - 55:20]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [107:2 - 122:2] (15 lines, 141 tokens)
   [1m[32mnode_modules/resolve/test/mock_sync.js[39m[22m [52:2 - 67:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [117:20 - 137:6] (20 lines, 197 tokens)
   [1m[32mnode_modules/resolve/test/mock.js[39m[22m [12:11 - 32:8]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [144:28 - 166:10] (22 lines, 235 tokens)
   [1m[32mnode_modules/resolve/test/mock.js[39m[22m [106:15 - 23:9]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [161:2 - 168:5] (7 lines, 84 tokens)
   [1m[32mnode_modules/resolve/test/mock.js[39m[22m [68:5 - 75:5]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [166:2 - 183:12] (17 lines, 166 tokens)
   [1m[32mnode_modules/resolve/test/mock.js[39m[22m [22:13 - 144:28]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [184:2 - 198:2] (14 lines, 134 tokens)
   [1m[32mnode_modules/resolve/test/mock_sync.js[39m[22m [89:2 - 103:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [197:13 - 208:4] (11 lines, 149 tokens)
   [1m[32mnode_modules/resolve/test/mock.js[39m[22m [16:13 - 27:3]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [224:13 - 230:28] (6 lines, 65 tokens)
   [1m[32mnode_modules/resolve/test/mock.js[39m[22m [28:13 - 34:18]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [230:28 - 236:28] (6 lines, 77 tokens)
   [1m[32mnode_modules/resolve/test/mock.js[39m[22m [34:18 - 40:18]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [234:11 - 239:2] (5 lines, 73 tokens)
   [1m[32mnode_modules/resolve/test/mock.js[39m[22m [228:8 - 234:8]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [241:14 - 255:2] (14 lines, 144 tokens)
   [1m[32mnode_modules/resolve/test/mock_sync.js[39m[22m [142:18 - 156:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/mock.js[39m[22m [249:7 - 274:2] (25 lines, 247 tokens)
   [1m[32mnode_modules/resolve/test/mock_sync.js[39m[22m [58:2 - 32:8]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/home_paths.js[39m[22m [1:1 - 19:11] (18 lines, 169 tokens)
   [1m[32mnode_modules/resolve/test/home_paths_sync.js[39m[22m [1:1 - 19:10]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/home_paths.js[39m[22m [19:11 - 68:7] (49 lines, 451 tokens)
   [1m[32mnode_modules/resolve/test/home_paths_sync.js[39m[22m [19:10 - 68:11]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/home_paths.js[39m[22m [69:2 - 86:4] (17 lines, 207 tokens)
   [1m[32mnode_modules/resolve/test/home_paths_sync.js[39m[22m [66:2 - 83:8]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/home_paths.js[39m[22m [86:2 - 96:2] (10 lines, 111 tokens)
   [1m[32mnode_modules/resolve/test/home_paths_sync.js[39m[22m [82:2 - 92:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/test/core.js[39m[22m [77:17 - 83:2] (6 lines, 64 tokens)
   [1m[32mnode_modules/resolve/test/core.js[39m[22m [52:13 - 58:3]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/lib/sync.js[39m[22m [31:4 - 36:5] (5 lines, 76 tokens)
   [1m[32mnode_modules/resolve/lib/sync.js[39m[22m [21:5 - 26:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/lib/async.js[39m[22m [9:9 - 19:2] (10 lines, 74 tokens)
   [1m[32mnode_modules/resolve/lib/sync.js[39m[22m [9:13 - 19:2]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/lib/async.js[39m[22m [30:5 - 39:4] (9 lines, 99 tokens)
   [1m[32mnode_modules/resolve/test/node_path.js[39m[22m [13:9 - 22:8]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/lib/async.js[39m[22m [66:1 - 76:8] (10 lines, 115 tokens)
   [1m[32mnode_modules/resolve/lib/sync.js[39m[22m [63:1 - 73:12]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/lib/async.js[39m[22m [101:2 - 113:5] (12 lines, 122 tokens)
   [1m[32mnode_modules/resolve/lib/sync.js[39m[22m [85:63 - 97:18]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/lib/async.js[39m[22m [163:6 - 174:11] (11 lines, 84 tokens)
   [1m[32mnode_modules/resolve/lib/async.js[39m[22m [142:6 - 153:7]

Clone found (javascript):
 - [1m[32mnode_modules/resolve/lib/async.js[39m[22m [266:21 - 272:7] (6 lines, 71 tokens)
   [1m[32mnode_modules/resolve/lib/sync.js[39m[22m [171:13 - 177:6]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/umd/reprism.js[39m[22m [117:2 - 171:2] (54 lines, 402 tokens)
   [1m[32mnode_modules/reprism/lib/languages/markup.js[39m[22m [6:2 - 60:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/umd/reprism.js[39m[22m [178:2 - 234:2] (56 lines, 380 tokens)
   [1m[32mnode_modules/reprism/lib/languages/css.js[39m[22m [6:2 - 62:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/umd/reprism.js[39m[22m [241:2 - 272:2] (31 lines, 195 tokens)
   [1m[32mnode_modules/reprism/lib/languages/clike.js[39m[22m [6:2 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/umd/reprism.js[39m[22m [279:2 - 338:2] (59 lines, 383 tokens)
   [1m[32mnode_modules/reprism/lib/languages/javascript.js[39m[22m [6:2 - 65:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/src/core.js[39m[22m [33:2 - 39:2] (6 lines, 66 tokens)
   [1m[32mnode_modules/reprism/umd/reprism.js[39m[22m [399:2 - 405:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/core.js[39m[22m [36:2 - 45:2] (9 lines, 102 tokens)
   [1m[32mnode_modules/reprism/umd/reprism.js[39m[22m [379:2 - 388:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/core.js[39m[22m [47:6 - 80:2] (33 lines, 417 tokens)
   [1m[32mnode_modules/reprism/umd/reprism.js[39m[22m [388:7 - 421:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/core.js[39m[22m [80:2 - 98:8] (18 lines, 100 tokens)
   [1m[32mnode_modules/reprism/umd/reprism.js[39m[22m [421:2 - 440:29]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/lib/core.js[39m[22m [98:6 - 439:2] (341 lines, 3273 tokens)
   [1m[32mnode_modules/reprism/umd/reprism.js[39m[22m [440:2 - 782:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/yaml.js[39m[22m [1:1 - 55:2] (54 lines, 333 tokens)
   [1m[32mnode_modules/reprism/lib/languages/yaml.js[39m[22m [1:1 - 55:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/xojo.js[39m[22m [1:1 - 27:2] (26 lines, 204 tokens)
   [1m[32mnode_modules/reprism/lib/languages/xojo.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/xeora.js[39m[22m [1:1 - 123:2] (122 lines, 706 tokens)
   [1m[32mnode_modules/reprism/lib/languages/xeora.js[39m[22m [1:1 - 123:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/wiki.js[39m[22m [1:1 - 82:2] (81 lines, 539 tokens)
   [1m[32mnode_modules/reprism/lib/languages/wiki.js[39m[22m [1:1 - 82:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/wasm.js[39m[22m [1:1 - 34:2] (33 lines, 318 tokens)
   [1m[32mnode_modules/reprism/lib/languages/wasm.js[39m[22m [1:1 - 34:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/visual-basic.js[39m[22m [1:1 - 41:2] (40 lines, 255 tokens)
   [1m[32mnode_modules/reprism/lib/languages/visual-basic.js[39m[22m [1:1 - 41:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/vim.js[39m[22m [1:1 - 20:2] (19 lines, 2419 tokens)
   [1m[32mnode_modules/reprism/lib/languages/vim.js[39m[22m [1:1 - 20:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/vhdl.js[39m[22m [1:1 - 33:2] (32 lines, 246 tokens)
   [1m[32mnode_modules/reprism/lib/languages/vhdl.js[39m[22m [1:1 - 33:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/verilog.js[39m[22m [1:1 - 30:2] (29 lines, 173 tokens)
   [1m[32mnode_modules/reprism/lib/languages/verilog.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/velocity.js[39m[22m [1:1 - 78:2] (77 lines, 516 tokens)
   [1m[32mnode_modules/reprism/lib/languages/velocity.js[39m[22m [1:1 - 78:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/vbnet.js[39m[22m [1:1 - 22:2] (21 lines, 142 tokens)
   [1m[32mnode_modules/reprism/lib/languages/vbnet.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/typescript.js[39m[22m [1:1 - 17:2] (16 lines, 116 tokens)
   [1m[32mnode_modules/reprism/lib/languages/typescript.js[39m[22m [1:1 - 17:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/twig.js[39m[22m [1:1 - 53:2] (52 lines, 414 tokens)
   [1m[32mnode_modules/reprism/lib/languages/twig.js[39m[22m [1:1 - 53:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/tsx.js[39m[22m [1:1 - 12:2] (11 lines, 101 tokens)
   [1m[32mnode_modules/reprism/lib/languages/tsx.js[39m[22m [1:1 - 12:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/textile.js[39m[22m [1:1 - 263:2] (262 lines, 1857 tokens)
   [1m[32mnode_modules/reprism/lib/languages/textile.js[39m[22m [1:1 - 263:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/tcl.js[39m[22m [1:1 - 49:2] (48 lines, 310 tokens)
   [1m[32mnode_modules/reprism/lib/languages/tcl.js[39m[22m [1:1 - 49:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/swift.js[39m[22m [1:1 - 35:2] (34 lines, 229 tokens)
   [1m[32mnode_modules/reprism/lib/languages/swift.js[39m[22m [1:1 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/stylus.js[39m[22m [1:1 - 118:2] (117 lines, 746 tokens)
   [1m[32mnode_modules/reprism/lib/languages/stylus.js[39m[22m [1:1 - 118:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/soy.js[39m[22m [1:1 - 95:2] (94 lines, 680 tokens)
   [1m[32mnode_modules/reprism/lib/languages/soy.js[39m[22m [1:1 - 95:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/smarty.js[39m[22m [1:1 - 88:2] (87 lines, 644 tokens)
   [1m[32mnode_modules/reprism/lib/languages/smarty.js[39m[22m [1:1 - 88:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/smalltalk.js[39m[22m [1:1 - 38:2] (37 lines, 263 tokens)
   [1m[32mnode_modules/reprism/lib/languages/smalltalk.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/scss.js[39m[22m [1:1 - 82:2] (81 lines, 480 tokens)
   [1m[32mnode_modules/reprism/lib/languages/scss.js[39m[22m [1:1 - 82:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/scheme.js[39m[22m [1:1 - 39:2] (38 lines, 231 tokens)
   [1m[32mnode_modules/reprism/lib/languages/scheme.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/scala.js[39m[22m [1:1 - 25:2] (24 lines, 187 tokens)
   [1m[32mnode_modules/reprism/lib/languages/scala.js[39m[22m [1:1 - 25:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/sass.js[39m[22m [1:1 - 75:2] (74 lines, 482 tokens)
   [1m[32mnode_modules/reprism/lib/languages/sass.js[39m[22m [1:1 - 75:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/sas.js[39m[22m [1:1 - 41:2] (40 lines, 257 tokens)
   [1m[32mnode_modules/reprism/lib/languages/sas.js[39m[22m [1:1 - 41:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/rust.js[39m[22m [1:1 - 70:2] (69 lines, 371 tokens)
   [1m[32mnode_modules/reprism/lib/languages/rust.js[39m[22m [1:1 - 70:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/ruby.js[39m[22m [1:1 - 124:2] (123 lines, 722 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ruby.js[39m[22m [1:1 - 124:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/roboconf.js[39m[22m [1:1 - 37:2] (36 lines, 222 tokens)
   [1m[32mnode_modules/reprism/lib/languages/roboconf.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/rip.js[39m[22m [1:1 - 42:2] (41 lines, 260 tokens)
   [1m[32mnode_modules/reprism/lib/languages/rip.js[39m[22m [1:1 - 42:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/rest.js[39m[22m [1:1 - 203:2] (202 lines, 1189 tokens)
   [1m[32mnode_modules/reprism/lib/languages/rest.js[39m[22m [1:1 - 203:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/renpy.js[39m[22m [1:1 - 39:2] (38 lines, 219 tokens)
   [1m[32mnode_modules/reprism/lib/languages/renpy.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/reason.js[39m[22m [1:1 - 42:2] (41 lines, 259 tokens)
   [1m[32mnode_modules/reprism/lib/languages/reason.js[39m[22m [1:1 - 42:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/r.js[39m[22m [1:1 - 29:2] (28 lines, 235 tokens)
   [1m[32mnode_modules/reprism/lib/languages/r.js[39m[22m [1:1 - 29:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/qore.js[39m[22m [1:1 - 30:2] (29 lines, 189 tokens)
   [1m[32mnode_modules/reprism/lib/languages/qore.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/q.js[39m[22m [1:1 - 58:2] (57 lines, 309 tokens)
   [1m[32mnode_modules/reprism/lib/languages/q.js[39m[22m [1:1 - 58:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/python.js[39m[22m [1:1 - 39:2] (38 lines, 236 tokens)
   [1m[32mnode_modules/reprism/lib/languages/python.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/pure.js[39m[22m [1:1 - 80:2] (79 lines, 643 tokens)
   [1m[32mnode_modules/reprism/lib/languages/pure.js[39m[22m [1:1 - 80:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/puppet.js[39m[22m [1:1 - 139:2] (138 lines, 851 tokens)
   [1m[32mnode_modules/reprism/lib/languages/puppet.js[39m[22m [1:1 - 139:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/pug.js[39m[22m [1:1 - 185:2] (184 lines, 1204 tokens)
   [1m[32mnode_modules/reprism/lib/languages/pug.js[39m[22m [1:1 - 185:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/protobuf.js[39m[22m [1:1 - 18:2] (17 lines, 119 tokens)
   [1m[32mnode_modules/reprism/lib/languages/protobuf.js[39m[22m [1:1 - 18:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/properties.js[39m[22m [1:1 - 19:2] (18 lines, 116 tokens)
   [1m[32mnode_modules/reprism/lib/languages/properties.js[39m[22m [1:1 - 19:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/prolog.js[39m[22m [1:1 - 27:2] (26 lines, 176 tokens)
   [1m[32mnode_modules/reprism/lib/languages/prolog.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/processing.js[39m[22m [1:1 - 28:2] (27 lines, 189 tokens)
   [1m[32mnode_modules/reprism/lib/languages/processing.js[39m[22m [1:1 - 28:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/powershell.js[39m[22m [1:1 - 54:2] (53 lines, 592 tokens)
   [1m[32mnode_modules/reprism/lib/languages/powershell.js[39m[22m [1:1 - 54:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/plsql.js[39m[22m [1:1 - 23:2] (22 lines, 232 tokens)
   [1m[32mnode_modules/reprism/lib/languages/plsql.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/php.js[39m[22m [1:1 - 133:2] (132 lines, 808 tokens)
   [1m[32mnode_modules/reprism/lib/languages/php.js[39m[22m [1:1 - 133:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/php-extras.js[39m[22m [1:1 - 21:2] (20 lines, 130 tokens)
   [1m[32mnode_modules/reprism/lib/languages/php-extras.js[39m[22m [1:1 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/perl.js[39m[22m [1:1 - 195:2] (194 lines, 1260 tokens)
   [1m[32mnode_modules/reprism/lib/languages/perl.js[39m[22m [1:1 - 195:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/pascal.js[39m[22m [1:1 - 50:2] (49 lines, 321 tokens)
   [1m[32mnode_modules/reprism/lib/languages/pascal.js[39m[22m [1:1 - 50:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/parser.js[39m[22m [1:1 - 77:2] (76 lines, 563 tokens)
   [1m[32mnode_modules/reprism/lib/languages/parser.js[39m[22m [1:1 - 77:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/parigp.js[39m[22m [1:1 - 35:2] (34 lines, 329 tokens)
   [1m[32mnode_modules/reprism/lib/languages/parigp.js[39m[22m [1:1 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/oz.js[39m[22m [1:1 - 32:2] (31 lines, 202 tokens)
   [1m[32mnode_modules/reprism/lib/languages/oz.js[39m[22m [1:1 - 32:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/opencl.js[39m[22m [1:1 - 57:2] (56 lines, 346 tokens)
   [1m[32mnode_modules/reprism/lib/languages/opencl.js[39m[22m [1:1 - 57:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/ocaml.js[39m[22m [1:1 - 34:2] (33 lines, 207 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ocaml.js[39m[22m [1:1 - 34:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/objectivec.js[39m[22m [1:1 - 15:2] (14 lines, 149 tokens)
   [1m[32mnode_modules/reprism/lib/languages/objectivec.js[39m[22m [1:1 - 15:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/nsis.js[39m[22m [1:1 - 39:2] (38 lines, 209 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nsis.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/nix.js[39m[22m [1:1 - 47:2] (46 lines, 292 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nix.js[39m[22m [1:1 - 47:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/nim.js[39m[22m [1:1 - 43:2] (42 lines, 235 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nim.js[39m[22m [1:1 - 43:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/nginx.js[39m[22m [1:1 - 21:2] (20 lines, 139 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nginx.js[39m[22m [1:1 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/nasm.js[39m[22m [1:1 - 29:2] (28 lines, 201 tokens)
   [1m[32mnode_modules/reprism/lib/languages/nasm.js[39m[22m [1:1 - 29:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/n4js.js[39m[22m [1:1 - 24:2] (23 lines, 155 tokens)
   [1m[32mnode_modules/reprism/lib/languages/n4js.js[39m[22m [1:1 - 24:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/monkey.js[39m[22m [1:1 - 38:2] (37 lines, 247 tokens)
   [1m[32mnode_modules/reprism/lib/languages/monkey.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/mizar.js[39m[22m [1:1 - 22:2] (21 lines, 137 tokens)
   [1m[32mnode_modules/reprism/lib/languages/mizar.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/mel.js[39m[22m [1:1 - 49:2] (48 lines, 310 tokens)
   [1m[32mnode_modules/reprism/lib/languages/mel.js[39m[22m [1:1 - 49:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/matlab.js[39m[22m [1:1 - 23:2] (22 lines, 149 tokens)
   [1m[32mnode_modules/reprism/lib/languages/matlab.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/markup.js[39m[22m [1:1 - 60:2] (59 lines, 434 tokens)
   [1m[32mnode_modules/reprism/lib/languages/markup.js[39m[22m [1:1 - 60:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/markup-templating.js[39m[22m [1:1 - 102:2] (101 lines, 1002 tokens)
   [1m[32mnode_modules/reprism/lib/languages/markup-templating.js[39m[22m [1:1 - 102:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/markdown.js[39m[22m [1:1 - 124:2] (123 lines, 760 tokens)
   [1m[32mnode_modules/reprism/lib/languages/markdown.js[39m[22m [1:1 - 124:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/makefile.js[39m[22m [1:1 - 43:2] (42 lines, 266 tokens)
   [1m[32mnode_modules/reprism/lib/languages/makefile.js[39m[22m [1:1 - 43:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/lua.js[39m[22m [1:1 - 27:2] (26 lines, 164 tokens)
   [1m[32mnode_modules/reprism/lib/languages/lua.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/lolcode.js[39m[22m [1:1 - 55:2] (54 lines, 413 tokens)
   [1m[32mnode_modules/reprism/lib/languages/lolcode.js[39m[22m [1:1 - 55:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/livescript.js[39m[22m [1:1 - 118:2] (117 lines, 809 tokens)
   [1m[32mnode_modules/reprism/lib/languages/livescript.js[39m[22m [1:1 - 118:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/lisp.js[39m[22m [1:1 - 192:2] (191 lines, 1446 tokens)
   [1m[32mnode_modules/reprism/lib/languages/lisp.js[39m[22m [1:1 - 192:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/liquid.js[39m[22m [1:1 - 22:2] (21 lines, 132 tokens)
   [1m[32mnode_modules/reprism/lib/languages/liquid.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/less.js[39m[22m [1:1 - 66:2] (65 lines, 347 tokens)
   [1m[32mnode_modules/reprism/lib/languages/less.js[39m[22m [1:1 - 66:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/latex.js[39m[22m [1:1 - 68:2] (67 lines, 347 tokens)
   [1m[32mnode_modules/reprism/lib/languages/latex.js[39m[22m [1:1 - 68:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/kotlin.js[39m[22m [1:1 - 65:2] (64 lines, 435 tokens)
   [1m[32mnode_modules/reprism/lib/languages/kotlin.js[39m[22m [1:1 - 65:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/keyman.js[39m[22m [1:1 - 23:2] (22 lines, 278 tokens)
   [1m[32mnode_modules/reprism/lib/languages/keyman.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/julia.js[39m[22m [1:1 - 22:2] (21 lines, 229 tokens)
   [1m[32mnode_modules/reprism/lib/languages/julia.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/jsx.js[39m[22m [1:1 - 121:2] (120 lines, 1272 tokens)
   [1m[32mnode_modules/reprism/lib/languages/jsx.js[39m[22m [1:1 - 121:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/json.js[39m[22m [1:1 - 24:2] (23 lines, 168 tokens)
   [1m[32mnode_modules/reprism/lib/languages/json.js[39m[22m [1:1 - 24:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/jolie.js[39m[22m [1:1 - 65:2] (64 lines, 392 tokens)
   [1m[32mnode_modules/reprism/lib/languages/jolie.js[39m[22m [1:1 - 65:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/javascript.js[39m[22m [1:1 - 65:2] (64 lines, 415 tokens)
   [1m[32mnode_modules/reprism/lib/languages/javascript.js[39m[22m [1:1 - 65:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/java.js[39m[22m [1:1 - 37:2] (36 lines, 241 tokens)
   [1m[32mnode_modules/reprism/lib/languages/java.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/j.js[39m[22m [1:1 - 35:2] (34 lines, 205 tokens)
   [1m[32mnode_modules/reprism/lib/languages/j.js[39m[22m [1:1 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/io.js[39m[22m [1:1 - 37:2] (36 lines, 395 tokens)
   [1m[32mnode_modules/reprism/lib/languages/io.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/ini.js[39m[22m [1:1 - 21:2] (20 lines, 125 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ini.js[39m[22m [1:1 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/inform7.js[39m[22m [1:1 - 71:2] (70 lines, 448 tokens)
   [1m[32mnode_modules/reprism/lib/languages/inform7.js[39m[22m [1:1 - 71:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/icon.js[39m[22m [1:1 - 30:2] (29 lines, 183 tokens)
   [1m[32mnode_modules/reprism/lib/languages/icon.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/ichigojam.js[39m[22m [1:1 - 25:2] (24 lines, 276 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ichigojam.js[39m[22m [1:1 - 25:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/http.js[39m[22m [1:1 - 58:2] (57 lines, 380 tokens)
   [1m[32mnode_modules/reprism/lib/languages/http.js[39m[22m [1:1 - 58:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/hsts.js[39m[22m [1:1 - 30:2] (29 lines, 145 tokens)
   [1m[32mnode_modules/reprism/lib/languages/hsts.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/hpkp.js[39m[22m [1:1 - 30:2] (29 lines, 145 tokens)
   [1m[32mnode_modules/reprism/lib/languages/hpkp.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/haxe.js[39m[22m [1:1 - 55:2] (54 lines, 361 tokens)
   [1m[32mnode_modules/reprism/lib/languages/haxe.js[39m[22m [1:1 - 55:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/haskell.js[39m[22m [1:1 - 46:2] (45 lines, 274 tokens)
   [1m[32mnode_modules/reprism/lib/languages/haskell.js[39m[22m [1:1 - 46:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/handlebars.js[39m[22m [1:1 - 45:2] (44 lines, 334 tokens)
   [1m[32mnode_modules/reprism/lib/languages/handlebars.js[39m[22m [1:1 - 45:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/haml.js[39m[22m [1:1 - 145:2] (144 lines, 940 tokens)
   [1m[32mnode_modules/reprism/lib/languages/haml.js[39m[22m [1:1 - 145:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/groovy.js[39m[22m [1:1 - 72:2] (71 lines, 524 tokens)
   [1m[32mnode_modules/reprism/lib/languages/groovy.js[39m[22m [1:1 - 72:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/graphql.js[39m[22m [1:1 - 31:2] (30 lines, 219 tokens)
   [1m[32mnode_modules/reprism/lib/languages/graphql.js[39m[22m [1:1 - 31:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/go.js[39m[22m [1:1 - 22:2] (21 lines, 153 tokens)
   [1m[32mnode_modules/reprism/lib/languages/go.js[39m[22m [1:1 - 22:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/glsl.js[39m[22m [1:1 - 23:2] (22 lines, 184 tokens)
   [1m[32mnode_modules/reprism/lib/languages/glsl.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/git.js[39m[22m [1:1 - 78:2] (77 lines, 172 tokens)
   [1m[32mnode_modules/reprism/lib/languages/git.js[39m[22m [1:1 - 78:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/gherkin.js[39m[22m [1:1 - 89:2] (88 lines, 511 tokens)
   [1m[32mnode_modules/reprism/lib/languages/gherkin.js[39m[22m [1:1 - 89:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/gedcom.js[39m[22m [1:1 - 38:2] (37 lines, 216 tokens)
   [1m[32mnode_modules/reprism/lib/languages/gedcom.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/fsharp.js[39m[22m [1:1 - 38:2] (37 lines, 290 tokens)
   [1m[32mnode_modules/reprism/lib/languages/fsharp.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/fortran.js[39m[22m [1:1 - 46:2] (45 lines, 485 tokens)
   [1m[32mnode_modules/reprism/lib/languages/fortran.js[39m[22m [1:1 - 46:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/flow.js[39m[22m [1:1 - 39:2] (38 lines, 306 tokens)
   [1m[32mnode_modules/reprism/lib/languages/flow.js[39m[22m [1:1 - 39:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/erlang.js[39m[22m [1:1 - 45:2] (44 lines, 310 tokens)
   [1m[32mnode_modules/reprism/lib/languages/erlang.js[39m[22m [1:1 - 45:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/erb.js[39m[22m [1:1 - 28:2] (27 lines, 236 tokens)
   [1m[32mnode_modules/reprism/lib/languages/erb.js[39m[22m [1:1 - 28:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/elixir.js[39m[22m [1:1 - 94:2] (93 lines, 538 tokens)
   [1m[32mnode_modules/reprism/lib/languages/elixir.js[39m[22m [1:1 - 94:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/eiffel.js[39m[22m [1:1 - 45:2] (44 lines, 459 tokens)
   [1m[32mnode_modules/reprism/lib/languages/eiffel.js[39m[22m [1:1 - 45:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/docker.js[39m[22m [1:1 - 21:2] (20 lines, 133 tokens)
   [1m[32mnode_modules/reprism/lib/languages/docker.js[39m[22m [1:1 - 21:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/django.js[39m[22m [1:1 - 53:2] (52 lines, 428 tokens)
   [1m[32mnode_modules/reprism/lib/languages/django.js[39m[22m [1:1 - 53:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/diff.js[39m[22m [1:1 - 29:2] (28 lines, 186 tokens)
   [1m[32mnode_modules/reprism/lib/languages/diff.js[39m[22m [1:1 - 29:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/dart.js[39m[22m [1:1 - 28:2] (27 lines, 291 tokens)
   [1m[32mnode_modules/reprism/lib/languages/dart.js[39m[22m [1:1 - 28:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/d.js[39m[22m [1:1 - 67:2] (66 lines, 491 tokens)
   [1m[32mnode_modules/reprism/lib/languages/d.js[39m[22m [1:1 - 67:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/css.js[39m[22m [1:1 - 62:2] (61 lines, 412 tokens)
   [1m[32mnode_modules/reprism/lib/languages/css.js[39m[22m [1:1 - 62:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/css-extras.js[39m[22m [1:1 - 26:2] (25 lines, 166 tokens)
   [1m[32mnode_modules/reprism/lib/languages/css-extras.js[39m[22m [1:1 - 26:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/csp.js[39m[22m [1:1 - 35:2] (34 lines, 145 tokens)
   [1m[32mnode_modules/reprism/lib/languages/csp.js[39m[22m [1:1 - 35:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/csharp.js[39m[22m [1:1 - 81:2] (80 lines, 484 tokens)
   [1m[32mnode_modules/reprism/lib/languages/csharp.js[39m[22m [1:1 - 81:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/crystal.js[39m[22m [1:1 - 54:2] (53 lines, 339 tokens)
   [1m[32mnode_modules/reprism/lib/languages/crystal.js[39m[22m [1:1 - 54:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/cpp.js[39m[22m [1:1 - 30:2] (29 lines, 196 tokens)
   [1m[32mnode_modules/reprism/lib/languages/cpp.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/coffeescript.js[39m[22m [1:1 - 91:2] (90 lines, 541 tokens)
   [1m[32mnode_modules/reprism/lib/languages/coffeescript.js[39m[22m [1:1 - 91:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/clojure.js[39m[22m [1:1 - 23:2] (22 lines, 172 tokens)
   [1m[32mnode_modules/reprism/lib/languages/clojure.js[39m[22m [1:1 - 23:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/clike.js[39m[22m [1:1 - 37:2] (36 lines, 227 tokens)
   [1m[32mnode_modules/reprism/lib/languages/clike.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/c.js[39m[22m [1:1 - 43:2] (42 lines, 263 tokens)
   [1m[32mnode_modules/reprism/lib/languages/c.js[39m[22m [1:1 - 43:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/bro.js[39m[22m [1:1 - 57:2] (56 lines, 282 tokens)
   [1m[32mnode_modules/reprism/lib/languages/bro.js[39m[22m [1:1 - 57:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/brainfuck.js[39m[22m [1:1 - 30:2] (29 lines, 178 tokens)
   [1m[32mnode_modules/reprism/lib/languages/brainfuck.js[39m[22m [1:1 - 30:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/bison.js[39m[22m [1:1 - 49:2] (48 lines, 306 tokens)
   [1m[32mnode_modules/reprism/lib/languages/bison.js[39m[22m [1:1 - 49:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/batch.js[39m[22m [1:1 - 97:2] (96 lines, 667 tokens)
   [1m[32mnode_modules/reprism/lib/languages/batch.js[39m[22m [1:1 - 97:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/basic.js[39m[22m [1:1 - 27:2] (26 lines, 408 tokens)
   [1m[32mnode_modules/reprism/lib/languages/basic.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/bash.js[39m[22m [1:1 - 88:2] (87 lines, 609 tokens)
   [1m[32mnode_modules/reprism/lib/languages/bash.js[39m[22m [1:1 - 88:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/autoit.js[39m[22m [1:1 - 41:2] (40 lines, 247 tokens)
   [1m[32mnode_modules/reprism/lib/languages/autoit.js[39m[22m [1:1 - 41:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/autohotkey.js[39m[22m [1:1 - 37:2] (36 lines, 206 tokens)
   [1m[32mnode_modules/reprism/lib/languages/autohotkey.js[39m[22m [1:1 - 37:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/aspnet.js[39m[22m [1:1 - 46:2] (45 lines, 342 tokens)
   [1m[32mnode_modules/reprism/lib/languages/aspnet.js[39m[22m [1:1 - 46:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/asm6502.js[39m[22m [1:1 - 38:2] (37 lines, 224 tokens)
   [1m[32mnode_modules/reprism/lib/languages/asm6502.js[39m[22m [1:1 - 38:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/asciidoc.js[39m[22m [1:1 - 271:2] (270 lines, 1896 tokens)
   [1m[32mnode_modules/reprism/lib/languages/asciidoc.js[39m[22m [1:1 - 271:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/arff.js[39m[22m [1:1 - 20:2] (19 lines, 123 tokens)
   [1m[32mnode_modules/reprism/lib/languages/arff.js[39m[22m [1:1 - 20:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/arduino.js[39m[22m [1:1 - 15:2] (14 lines, 103 tokens)
   [1m[32mnode_modules/reprism/lib/languages/arduino.js[39m[22m [1:1 - 15:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/applescript.js[39m[22m [1:1 - 24:2] (23 lines, 365 tokens)
   [1m[32mnode_modules/reprism/lib/languages/applescript.js[39m[22m [1:1 - 24:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/apl.js[39m[22m [1:1 - 42:2] (41 lines, 252 tokens)
   [1m[32mnode_modules/reprism/lib/languages/apl.js[39m[22m [1:1 - 42:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/apacheconf.js[39m[22m [1:1 - 57:2] (56 lines, 327 tokens)
   [1m[32mnode_modules/reprism/lib/languages/apacheconf.js[39m[22m [1:1 - 57:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/ada.js[39m[22m [1:1 - 26:2] (25 lines, 260 tokens)
   [1m[32mnode_modules/reprism/lib/languages/ada.js[39m[22m [1:1 - 26:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/actionscript.js[39m[22m [1:1 - 27:2] (26 lines, 192 tokens)
   [1m[32mnode_modules/reprism/lib/languages/actionscript.js[39m[22m [1:1 - 27:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/languages/abap.js[39m[22m [1:1 - 58:2] (57 lines, 305 tokens)
   [1m[32mnode_modules/reprism/lib/languages/abap.js[39m[22m [1:1 - 58:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/index.js[39m[22m [1:1 - 34:2] (33 lines, 274 tokens)
   [1m[32mnode_modules/reprism/lib/index.js[39m[22m [1:1 - 34:2]

Clone found (javascript):
 - [1m[32mnode_modules/reprism/es/core.js[39m[22m [1:1 - 439:2] (438 lines, 4195 tokens)
   [1m[32mnode_modules/reprism/lib/core.js[39m[22m [1:1 - 782:2]

Clone found (javascript):
 - [1m[32mnode_modules/pug/lib/index.js[39m[22m [436:5 - 444:11] (8 lines, 83 tokens)
   [1m[32mnode_modules/pug/lib/index.js[39m[22m [401:4 - 409:7]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/synchronous.js[39m[22m [1:1 - 20:4] (19 lines, 163 tokens)
   [1m[32mnode_modules/promise/src/synchronous.js[39m[22m [1:1 - 20:7]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/synchronous.js[39m[22m [51:4 - 62:2] (11 lines, 95 tokens)
   [1m[32mnode_modules/promise/src/synchronous.js[39m[22m [51:7 - 62:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/rejection-tracking.js[39m[22m [1:1 - 15:4] (14 lines, 77 tokens)
   [1m[32mnode_modules/promise/src/rejection-tracking.js[39m[22m [1:1 - 15:10]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/rejection-tracking.js[39m[22m [16:2 - 27:4] (11 lines, 93 tokens)
   [1m[32mnode_modules/promise/src/rejection-tracking.js[39m[22m [16:2 - 27:10]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/rejection-tracking.js[39m[22m [47:4 - 113:2] (66 lines, 505 tokens)
   [1m[32mnode_modules/promise/src/rejection-tracking.js[39m[22m [47:13 - 113:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/node-extensions.js[39m[22m [6:12 - 110:13] (104 lines, 858 tokens)
   [1m[32mnode_modules/promise/src/node-extensions.js[39m[22m [7:7 - 110:5]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/node-extensions.js[39m[22m [110:13 - 122:13] (12 lines, 89 tokens)
   [1m[32mnode_modules/promise/src/node-extensions.js[39m[22m [110:5 - 122:5]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/finally.js[39m[22m [1:1 - 16:2] (15 lines, 140 tokens)
   [1m[32mnode_modules/promise/src/finally.js[39m[22m [1:1 - 16:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/es6-extensions.js[39m[22m [1:1 - 19:4] (18 lines, 128 tokens)
   [1m[32mnode_modules/promise/src/es6-extensions.js[39m[22m [1:1 - 19:6]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/es6-extensions.js[39m[22m [21:2 - 58:4] (37 lines, 440 tokens)
   [1m[32mnode_modules/promise/src/es6-extensions.js[39m[22m [21:2 - 58:7]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/es6-extensions.js[39m[22m [62:4 - 107:2] (45 lines, 384 tokens)
   [1m[32mnode_modules/promise/src/es6-extensions.js[39m[22m [62:7 - 107:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/done.js[39m[22m [1:1 - 13:2] (12 lines, 121 tokens)
   [1m[32mnode_modules/promise/src/done.js[39m[22m [1:1 - 13:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/core.js[39m[22m [1:13 - 61:4] (60 lines, 315 tokens)
   [1m[32mnode_modules/promise/src/core.js[39m[22m [3:2 - 61:15]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/core.js[39m[22m [70:2 - 89:4] (19 lines, 211 tokens)
   [1m[32mnode_modules/promise/src/core.js[39m[22m [70:2 - 89:7]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/core.js[39m[22m [123:4 - 151:4] (28 lines, 218 tokens)
   [1m[32mnode_modules/promise/src/core.js[39m[22m [123:7 - 151:7]

Clone found (javascript):
 - [1m[32mnode_modules/promise/setimmediate/core.js[39m[22m [182:2 - 213:2] (31 lines, 242 tokens)
   [1m[32mnode_modules/promise/src/core.js[39m[22m [182:2 - 213:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/lib/synchronous.js[39m[22m [1:1 - 62:2] (61 lines, 503 tokens)
   [1m[32mnode_modules/promise/src/synchronous.js[39m[22m [1:1 - 62:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/lib/rejection-tracking.js[39m[22m [1:1 - 113:2] (112 lines, 887 tokens)
   [1m[32mnode_modules/promise/src/rejection-tracking.js[39m[22m [1:1 - 113:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/lib/node-extensions.js[39m[22m [1:1 - 130:2] (129 lines, 1051 tokens)
   [1m[32mnode_modules/promise/src/node-extensions.js[39m[22m [1:1 - 130:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/lib/finally.js[39m[22m [1:1 - 16:2] (15 lines, 140 tokens)
   [1m[32mnode_modules/promise/src/finally.js[39m[22m [1:1 - 16:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/lib/es6-extensions.js[39m[22m [1:1 - 107:2] (106 lines, 1037 tokens)
   [1m[32mnode_modules/promise/src/es6-extensions.js[39m[22m [1:1 - 107:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/lib/done.js[39m[22m [1:1 - 13:2] (12 lines, 121 tokens)
   [1m[32mnode_modules/promise/src/done.js[39m[22m [1:1 - 13:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/lib/core.js[39m[22m [1:1 - 113:5] (112 lines, 818 tokens)
   [1m[32mnode_modules/promise/src/core.js[39m[22m [1:1 - 113:13]

Clone found (javascript):
 - [1m[32mnode_modules/promise/lib/core.js[39m[22m [113:5 - 213:2] (100 lines, 869 tokens)
   [1m[32mnode_modules/promise/setimmediate/core.js[39m[22m [113:13 - 213:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/domains/synchronous.js[39m[22m [1:1 - 62:2] (61 lines, 503 tokens)
   [1m[32mnode_modules/promise/src/synchronous.js[39m[22m [1:1 - 62:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/domains/rejection-tracking.js[39m[22m [1:1 - 113:2] (112 lines, 887 tokens)
   [1m[32mnode_modules/promise/src/rejection-tracking.js[39m[22m [1:1 - 113:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/domains/node-extensions.js[39m[22m [1:1 - 130:2] (129 lines, 1051 tokens)
   [1m[32mnode_modules/promise/src/node-extensions.js[39m[22m [1:1 - 130:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/domains/finally.js[39m[22m [1:1 - 16:2] (15 lines, 140 tokens)
   [1m[32mnode_modules/promise/src/finally.js[39m[22m [1:1 - 16:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/domains/es6-extensions.js[39m[22m [1:1 - 107:2] (106 lines, 1037 tokens)
   [1m[32mnode_modules/promise/src/es6-extensions.js[39m[22m [1:1 - 107:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/domains/done.js[39m[22m [1:1 - 13:2] (12 lines, 121 tokens)
   [1m[32mnode_modules/promise/src/done.js[39m[22m [1:1 - 13:2]

Clone found (javascript):
 - [1m[32mnode_modules/promise/domains/core.js[39m[22m [3:7 - 213:2] (210 lines, 1675 tokens)
   [1m[32mnode_modules/promise/src/core.js[39m[22m [3:11 - 213:2]

Clone found (javascript):
 - [1m[32mnode_modules/jscpd/dist/index.js[39m[22m [1:1 - 12:7] (11 lines, 311 tokens)
   [1m[32mnode_modules/@jscpd/finder/dist/hooks/blamer.js[39m[22m [1:1 - 12:9]

Clone found (javascript):
 - [1m[32mnode_modules/is-core-module/test/index.js[39m[22m [93:6 - 113:2] (20 lines, 197 tokens)
   [1m[32mnode_modules/is-core-module/test/index.js[39m[22m [51:5 - 71:3]

Clone found (javascript):
 - [1m[32mnode_modules/function-bind/test/index.js[39m[22m [39:53 - 45:2] (6 lines, 70 tokens)
   [1m[32mnode_modules/function-bind/test/index.js[39m[22m [25:17 - 31:2]

Clone found (javascript):
 - [1m[32mnode_modules/function-bind/test/index.js[39m[22m [67:40 - 73:2] (6 lines, 68 tokens)
   [1m[32mnode_modules/function-bind/test/index.js[39m[22m [53:19 - 59:2]

Clone found (javascript):
 - [1m[32mnode_modules/function-bind/test/index.js[39m[22m [134:23 - 141:2] (7 lines, 84 tokens)
   [1m[32mnode_modules/function-bind/test/index.js[39m[22m [119:26 - 126:2]

Clone found (javascript):
 - [1m[32mnode_modules/function-bind/test/index.js[39m[22m [160:42 - 166:13] (6 lines, 59 tokens)
   [1m[32mnode_modules/function-bind/test/index.js[39m[22m [62:41 - 68:5]

Clone found (javascript):
 - [1m[32mnode_modules/function-bind/test/index.js[39m[22m [165:40 - 172:2] (7 lines, 79 tokens)
   [1m[32mnode_modules/function-bind/test/index.js[39m[22m [149:19 - 156:2]

Clone found (javascript):
 - [1m[32mnode_modules/function-bind/test/index.js[39m[22m [219:2 - 225:59] (6 lines, 58 tokens)
   [1m[32mnode_modules/function-bind/test/index.js[39m[22m [212:2 - 218:37]

Clone found (javascript):
 - [1m[32mnode_modules/function-bind/test/index.js[39m[22m [233:2 - 239:63] (6 lines, 57 tokens)
   [1m[32mnode_modules/function-bind/test/index.js[39m[22m [226:10 - 232:56]

Clone found (javascript):
 - [1m[32mnode_modules/function-bind/test/index.js[39m[22m [247:2 - 252:2] (5 lines, 56 tokens)
   [1m[32mnode_modules/function-bind/test/index.js[39m[22m [240:10 - 246:2]

Clone found (javascript):
 - [1m[32mnode_modules/fastq/test/test.js[39m[22m [329:18 - 342:10] (13 lines, 78 tokens)
   [1m[32mnode_modules/fastq/test/test.js[39m[22m [302:20 - 315:11]

Clone found (javascript):
 - [1m[32mnode_modules/fastq/test/test.js[39m[22m [393:16 - 405:5] (12 lines, 84 tokens)
   [1m[32mnode_modules/fastq/test/test.js[39m[22m [365:19 - 377:8]

Clone found (javascript):
 - [1m[32mnode_modules/fastq/test/test.js[39m[22m [405:5 - 421:7] (16 lines, 98 tokens)
   [1m[32mnode_modules/fastq/test/test.js[39m[22m [377:8 - 393:16]

Clone found (javascript):
 - [1m[32mnode_modules/fastq/test/test.js[39m[22m [445:2 - 456:15] (11 lines, 70 tokens)
   [1m[32mnode_modules/fastq/test/test.js[39m[22m [354:11 - 365:19]

Clone found (javascript):
 - [1m[32mnode_modules/fastq/test/test.js[39m[22m [472:13 - 491:16] (19 lines, 163 tokens)
   [1m[32mnode_modules/fastq/test/test.js[39m[22m [437:5 - 365:19]

Clone found (javascript):
 - [1m[32mnode_modules/fastq/test/test.js[39m[22m [498:17 - 509:2] (11 lines, 85 tokens)
   [1m[32mnode_modules/fastq/test/test.js[39m[22m [145:26 - 157:6]

Clone found (javascript):
 - [1m[32mnode_modules/fastq/test/promise.js[39m[22m [7:13 - 14:6] (7 lines, 64 tokens)
   [1m[32mnode_modules/fastq/test/test.js[39m[22m [6:6 - 13:9]

Clone found (javascript):
 - [1m[32mnode_modules/fastq/test/promise.js[39m[22m [192:13 - 199:4] (7 lines, 75 tokens)
   [1m[32mnode_modules/fastq/test/test.js[39m[22m [555:5 - 562:2]

Clone found (javascript):
 - [1m[32mnode_modules/fastq/test/promise.js[39m[22m [235:34 - 244:8] (9 lines, 87 tokens)
   [1m[32mnode_modules/fastq/test/promise.js[39m[22m [220:31 - 229:5]

Clone found (javascript):
 - [1m[32mnode_modules/colors/themes/generic-logging.js[39m[22m [1:1 - 12:2] (11 lines, 80 tokens)
   [1m[32mnode_modules/@colors/colors/themes/generic-logging.js[39m[22m [1:1 - 12:2]

Clone found (javascript):
 - [1m[32mnode_modules/colors/lib/styles.js[39m[22m [1:1 - 95:2] (94 lines, 737 tokens)
   [1m[32mnode_modules/@colors/colors/lib/styles.js[39m[22m [1:1 - 95:2]

Clone found (javascript):
 - [1m[32mnode_modules/colors/lib/extendStringPrototype.js[39m[22m [1:1 - 110:2] (109 lines, 900 tokens)
   [1m[32mnode_modules/@colors/colors/lib/extendStringPrototype.js[39m[22m [1:1 - 110:2]

Clone found (javascript):
 - [1m[32mnode_modules/colors/lib/colors.js[39m[22m [1:1 - 211:2] (210 lines, 1550 tokens)
   [1m[32mnode_modules/@colors/colors/lib/colors.js[39m[22m [1:1 - 211:2]

Clone found (javascript):
 - [1m[32mnode_modules/colors/examples/safe-string.js[39m[22m [1:1 - 31:8] (30 lines, 257 tokens)
   [1m[32mnode_modules/@colors/colors/examples/safe-string.js[39m[22m [1:1 - 31:36]

Clone found (javascript):
 - [1m[32mnode_modules/colors/examples/safe-string.js[39m[22m [31:1 - 77:49] (46 lines, 259 tokens)
   [1m[32mnode_modules/@colors/colors/examples/safe-string.js[39m[22m [32:1 - 78:49]

Clone found (javascript):
 - [1m[32mnode_modules/colors/examples/normal-usage.js[39m[22m [1:1 - 32:8] (31 lines, 212 tokens)
   [1m[32mnode_modules/@colors/colors/examples/normal-usage.js[39m[22m [1:1 - 32:36]

Clone found (javascript):
 - [1m[32mnode_modules/colors/examples/normal-usage.js[39m[22m [32:1 - 81:37] (49 lines, 278 tokens)
   [1m[32mnode_modules/@colors/colors/examples/normal-usage.js[39m[22m [33:1 - 82:37]

Clone found (javascript):
 - [1m[32mnode_modules/cli-table3/src/utils.js[39m[22m [120:12 - 129:2] (9 lines, 84 tokens)
   [1m[32mnode_modules/cli-table3/src/utils.js[39m[22m [97:12 - 106:3]

Clone found (javascript):
 - [1m[32mnode_modules/cli-table3/src/cell.js[39m[22m [292:10 - 303:6] (11 lines, 165 tokens)
   [1m[32mnode_modules/cli-table3/src/cell.js[39m[22m [242:22 - 253:12]

Clone found (javascript):
 - [1m[32mnode_modules/babel-walk/lib/test.js[39m[22m [1:1 - 23:6] (22 lines, 419 tokens)
   [1m[32mnode_modules/blamer/build/main/index.js[39m[22m [1:1 - 23:9]

Clone found (javascript):
 - [1m[32mnode_modules/babel-walk/lib/index.js[39m[22m [1:1 - 25:10] (24 lines, 464 tokens)
   [1m[32mnode_modules/blamer/build/main/index.js[39m[22m [1:1 - 6:4]

Clone found (javascript):
 - [1m[32mnode_modules/babel-walk/lib/index.js[39m[22m [82:10 - 98:2] (16 lines, 166 tokens)
   [1m[32mnode_modules/babel-walk/lib/index.js[39m[22m [46:6 - 62:2]

Clone found (javascript):
 - [1m[32mnode_modules/babel-walk/lib/index.js[39m[22m [107:10 - 116:2] (9 lines, 132 tokens)
   [1m[32mnode_modules/babel-walk/lib/index.js[39m[22m [37:7 - 46:2]

Clone found (javascript):
 - [1m[32mnode_modules/babel-walk/lib/index.js[39m[22m [120:17 - 131:2] (11 lines, 98 tokens)
   [1m[32mnode_modules/babel-walk/lib/index.js[39m[22m [49:13 - 60:3]

Clone found (javascript):
 - [1m[32mnode_modules/babel-walk/lib/explode.js[39m[22m [1:1 - 23:3] (22 lines, 419 tokens)
   [1m[32mnode_modules/blamer/build/main/index.js[39m[22m [1:1 - 23:9]

Clone found (javascript):
 - [1m[32mnode_modules/babel-walk/lib/explode.js[39m[22m [98:4 - 106:7] (8 lines, 79 tokens)
   [1m[32mnode_modules/babel-walk/lib/explode.js[39m[22m [70:12 - 78:5]

Clone found (json):
 - [1m[32mnode_modules/@nodelib/fs.stat/package.json[39m[22m [21:3 - 33:18] (12 lines, 76 tokens)
   [1m[32mnode_modules/@nodelib/fs.walk/package.json[39m[22m [24:3 - 36:15]

Clone found (markdown):
 - [1m[32mnode_modules/@nodelib/fs.stat/README.md[39m[22m [46:1 - 70:18] (24 lines, 201 tokens)
   [1m[32mnode_modules/@nodelib/fs.walk/README.md[39m[22m [58:1 - 82:18]

Clone found (json):
 - [1m[32mnode_modules/@nodelib/fs.scandir/package.json[39m[22m [15:3 - 36:19] (21 lines, 119 tokens)
   [1m[32mnode_modules/@nodelib/fs.stat/package.json[39m[22m [13:3 - 37:22]

Clone found (markdown):
 - [1m[32mnode_modules/@nodelib/fs.scandir/README.md[39m[22m [47:1 - 62:20] (15 lines, 98 tokens)
   [1m[32mnode_modules/@nodelib/fs.walk/README.md[39m[22m [58:1 - 73:13]

Clone found (markdown):
 - [1m[32mnode_modules/@nodelib/fs.scandir/README.md[39m[22m [62:2 - 71:21] (9 lines, 101 tokens)
   [1m[32mnode_modules/@nodelib/fs.walk/README.md[39m[22m [73:2 - 82:18]

Clone found (markdown):
 - [1m[32mnode_modules/@nodelib/fs.scandir/README.md[39m[22m [116:2 - 127:2] (11 lines, 105 tokens)
   [1m[32mnode_modules/@nodelib/fs.walk/README.md[39m[22m [178:2 - 189:20]

Clone found (markdown):
 - [1m[32mnode_modules/@nodelib/fs.scandir/README.md[39m[22m [125:1 - 138:30] (13 lines, 89 tokens)
   [1m[32mnode_modules/@nodelib/fs.stat/README.md[39m[22m [100:1 - 113:2]

Clone found (json):
 - [1m[32mnode_modules/@jscpd/finder/package.json[39m[22m [17:3 - 33:15] (16 lines, 94 tokens)
   [1m[32mnode_modules/@jscpd/tokenizer/package.json[39m[22m [16:3 - 32:18]

Clone found (markdown):
 - [1m[32mnode_modules/@jscpd/finder/CHANGELOG.md[39m[22m [8:1 - 29:2] (21 lines, 212 tokens)
   [1m[32mnode_modules/@jscpd/tokenizer/CHANGELOG.md[39m[22m [8:1 - 29:2]

Clone found (json):
 - [1m[32mnode_modules/@jscpd/core/package.json[39m[22m [11:7 - 32:7] (21 lines, 116 tokens)
   [1m[32mnode_modules/@jscpd/tokenizer/package.json[39m[22m [11:6 - 32:18]

Clone found (markdown):
 - [1m[32mnode_modules/@jscpd/core/CHANGELOG.md[39m[22m [10:62 - 23:10] (13 lines, 137 tokens)
   [1m[32mnode_modules/@jscpd/tokenizer/CHANGELOG.md[39m[22m [9:62 - 22:6]

Clone found (javascript):
 - [1m[32mnode_modules/which/which.js[39m[22m [94:5 - 101:4] (7 lines, 102 tokens)
   [1m[32mnode_modules/which/which.js[39m[22m [59:5 - 66:8]

Clone found (json):
 - [1m[32mnode_modules/string-width/package.json[39m[22m [6:28 - 23:9] (17 lines, 88 tokens)
   [1m[32mnode_modules/strip-ansi/package.json[39m[22m [6:19 - 23:8]

Clone found (javascript):
 - [1m[32mnode_modules/spark-md5/spark-md5.js[39m[22m [253:2 - 263:13] (10 lines, 83 tokens)
   [1m[32mnode_modules/spark-md5/spark-md5.js[39m[22m [213:2 - 223:7]

Clone found (javascript):
 - [1m[32mnode_modules/spark-md5/spark-md5.js[39m[22m [275:2 - 300:5] (25 lines, 239 tokens)
   [1m[32mnode_modules/spark-md5/spark-md5.js[39m[22m [229:2 - 252:11]

Clone found (javascript):
 - [1m[32mnode_modules/spark-md5/spark-md5.js[39m[22m [584:2 - 591:5] (7 lines, 87 tokens)
   [1m[32mnode_modules/spark-md5/spark-md5.js[39m[22m [240:2 - 248:6]

Clone found (javascript):
 - [1m[32mnode_modules/spark-md5/spark-md5.js[39m[22m [675:2 - 694:8] (19 lines, 92 tokens)
   [1m[32mnode_modules/spark-md5/spark-md5.js[39m[22m [496:2 - 515:8]

Clone found (json):
 - [1m[32mnode_modules/shebang-regex/package.json[39m[22m [6:29 - 23:8] (17 lines, 88 tokens)
   [1m[32mnode_modules/strip-ansi/package.json[39m[22m [6:19 - 23:8]

Clone found (markdown):
 - [1m[32mnode_modules/resolve/readme.markdown[39m[22m [198:1 - 233:35] (35 lines, 373 tokens)
   [1m[32mnode_modules/resolve/readme.markdown[39m[22m [90:1 - 125:27]

Clone found (javascript):
 - [1m[32mnode_modules/pump/test-browser.js[39m[22m [17:1 - 34:25] (17 lines, 145 tokens)
   [1m[32mnode_modules/pump/test-node.js[39m[22m [6:1 - 23:22]

Clone found (javascript):
 - [1m[32mnode_modules/pump/test-browser.js[39m[22m [44:6 - 59:5] (15 lines, 114 tokens)
   [1m[32mnode_modules/pump/test-node.js[39m[22m [33:8 - 48:8]

Clone found (markdown):
 - [1m[32mnode_modules/pug-parser/README.md[39m[22m [82:2 - 90:4] (8 lines, 119 tokens)
   [1m[32mnode_modules/pug-parser/README.md[39m[22m [24:2 - 30:6]

Clone found (typescript):
 - [1m[32mnode_modules/promise/index.d.ts[39m[22m [14:12 - 21:12] (7 lines, 93 tokens)
   [1m[32mnode_modules/promise/index.d.ts[39m[22m [1:9 - 8:9]

Clone found (markdown):
 - [1m[32mnode_modules/picomatch/README.md[39m[22m [671:1 - 679:4] (8 lines, 87 tokens)
   [1m[32mnode_modules/to-regex-range/README.md[39m[22m [240:1 - 248:2]

Clone found (markdown):
 - [1m[32mnode_modules/picomatch/README.md[39m[22m [679:1 - 692:4] (13 lines, 67 tokens)
   [1m[32mnode_modules/to-regex-range/README.md[39m[22m [248:2 - 261:2]

Clone found (javascript):
 - [1m[32mnode_modules/path-parse/index.js[39m[22m [54:15 - 61:2] (7 lines, 72 tokens)
   [1m[32mnode_modules/path-parse/index.js[39m[22m [21:15 - 27:4]

Clone found (json):
 - [1m[32mnode_modules/path-key/package.json[39m[22m [6:24 - 23:7] (17 lines, 88 tokens)
   [1m[32mnode_modules/strip-ansi/package.json[39m[22m [6:19 - 23:8]

Clone found (json):
 - [1m[32mnode_modules/npm-run-path/package.json[39m[22m [6:28 - 23:6] (17 lines, 88 tokens)
   [1m[32mnode_modules/strip-ansi/package.json[39m[22m [6:19 - 23:8]

Clone found (javascript):
 - [1m[32mnode_modules/micromatch/index.js[39m[22m [295:2 - 300:2] (5 lines, 77 tokens)
   [1m[32mnode_modules/micromatch/index.js[39m[22m [259:2 - 264:6]

Clone found (javascript):
 - [1m[32mnode_modules/jstransformer/index.js[39m[22m [54:9 - 67:15] (13 lines, 100 tokens)
   [1m[32mnode_modules/jstransformer/index.js[39m[22m [27:11 - 40:17]

Clone found (javascript):
 - [1m[32mnode_modules/jsonfile/index.js[39m[22m [40:2 - 49:4] (9 lines, 88 tokens)
   [1m[32mnode_modules/jsonfile/index.js[39m[22m [10:2 - 19:4]

Clone found (markdown):
 - [1m[32mnode_modules/jsonfile/README.md[39m[22m [164:2 - 172:29] (8 lines, 101 tokens)
   [1m[32mnode_modules/jsonfile/README.md[39m[22m [76:2 - 85:25]

Clone found (json):
 - [1m[32mnode_modules/jscpd/package.json[39m[22m [15:6 - 38:16] (23 lines, 129 tokens)
   [1m[32mnode_modules/@jscpd/tokenizer/package.json[39m[22m [11:6 - 35:19]

Clone found (markdown):
 - [1m[32mnode_modules/jscpd/CHANGELOG.md[39m[22m [5:62 - 13:5] (8 lines, 144 tokens)
   [1m[32mnode_modules/@jscpd/tokenizer/CHANGELOG.md[39m[22m [8:62 - 21:12]

Clone found (markdown):
 - [1m[32mnode_modules/is-number/README.md[39m[22m [123:1 - 158:65] (35 lines, 248 tokens)
   [1m[32mnode_modules/to-regex-range/README.md[39m[22m [235:1 - 270:59]

Clone found (javascript):
 - [1m[32mnode_modules/is-glob/index.js[39m[22m [109:5 - 133:7] (24 lines, 171 tokens)
   [1m[32mnode_modules/is-glob/index.js[39m[22m [77:5 - 101:4]

Clone found (markdown):
 - [1m[32mnode_modules/is-glob/README.md[39m[22m [137:1 - 176:51] (39 lines, 253 tokens)
   [1m[32mnode_modules/is-number/README.md[39m[22m [119:1 - 270:59]

Clone found (json):
 - [1m[32mnode_modules/is-extglob/package.json[39m[22m [21:3 - 46:6] (25 lines, 110 tokens)
   [1m[32mnode_modules/is-glob/package.json[39m[22m [29:3 - 54:9]

Clone found (markdown):
 - [1m[32mnode_modules/is-extglob/README.md[39m[22m [77:1 - 102:51] (25 lines, 104 tokens)
   [1m[32mnode_modules/repeat-string/README.md[39m[22m [106:1 - 131:50]

Clone found (markdown):
 - [1m[32mnode_modules/is-expression/LICENSE.md[39m[22m [1:1 - 19:10] (18 lines, 337 tokens)
   [1m[32mnode_modules/pug-strip-comments/LICENSE.md[39m[22m [1:1 - 7:10]

Clone found (json):
 - [1m[32mnode_modules/is-core-module/core.json[39m[22m [1:1 - 158:2] (157 lines, 1448 tokens)
   [1m[32mnode_modules/resolve/lib/core.json[39m[22m [1:1 - 158:2]

Clone found (json):
 - [1m[32mnode_modules/has-symbols/package.json[39m[22m [5:11 - 24:46] (19 lines, 126 tokens)
   [1m[32mnode_modules/has-tostringtag/package.json[39m[22m [26:2 - 45:56]

Clone found (json):
 - [1m[32mnode_modules/has-symbols/package.json[39m[22m [66:2 - 95:2] (29 lines, 145 tokens)
   [1m[32mnode_modules/is-regex/package.json[39m[22m [56:2 - 86:2]

Clone found (javascript):
 - [1m[32mnode_modules/graceful-fs/polyfills.js[39m[22m [229:3 - 243:5] (14 lines, 83 tokens)
   [1m[32mnode_modules/graceful-fs/polyfills.js[39m[22m [193:5 - 208:9]

Clone found (javascript):
 - [1m[32mnode_modules/graceful-fs/legacy-streams.js[39m[22m [87:2 - 98:6] (11 lines, 107 tokens)
   [1m[32mnode_modules/graceful-fs/legacy-streams.js[39m[22m [25:5 - 36:9]

Clone found (javascript):
 - [1m[32mnode_modules/graceful-fs/graceful-fs.js[39m[22m [140:5 - 149:14] (9 lines, 77 tokens)
   [1m[32mnode_modules/graceful-fs/graceful-fs.js[39m[22m [120:5 - 129:13]

Clone found (javascript):
 - [1m[32mnode_modules/graceful-fs/graceful-fs.js[39m[22m [161:14 - 170:12] (9 lines, 84 tokens)
   [1m[32mnode_modules/graceful-fs/graceful-fs.js[39m[22m [140:13 - 129:13]

Clone found (javascript):
 - [1m[32mnode_modules/graceful-fs/graceful-fs.js[39m[22m [183:6 - 192:11] (9 lines, 74 tokens)
   [1m[32mnode_modules/graceful-fs/graceful-fs.js[39m[22m [120:8 - 129:13]

Clone found (javascript):
 - [1m[32mnode_modules/graceful-fs/graceful-fs.js[39m[22m [359:5 - 368:7] (9 lines, 72 tokens)
   [1m[32mnode_modules/graceful-fs/graceful-fs.js[39m[22m [120:8 - 129:4]

Clone found (json):
 - [1m[32mnode_modules/get-stream/package.json[39m[22m [6:26 - 21:2] (15 lines, 83 tokens)
   [1m[32mnode_modules/is-stream/package.json[39m[22m [6:25 - 22:2]

Clone found (markdown):
 - [1m[32mnode_modules/fill-range/README.md[39m[22m [170:1 - 207:2] (37 lines, 234 tokens)
   [1m[32mnode_modules/is-number/README.md[39m[22m [119:1 - 268:4]

Clone found (markdown):
 - [1m[32mnode_modules/fill-range/README.md[39m[22m [214:2 - 237:29] (23 lines, 99 tokens)
   [1m[32mnode_modules/to-regex-range/README.md[39m[22m [282:2 - 305:29]

Clone found (javascript):
 - [1m[32mnode_modules/fastq/queue.js[39m[22m [251:10 - 268:8] (17 lines, 81 tokens)
   [1m[32mnode_modules/fastq/queue.js[39m[22m [232:7 - 249:8]

Clone found (javascript):
 - [1m[32mnode_modules/eventemitter3/index.js[39m[22m [1:1 - 336:2] (335 lines, 2351 tokens)
   [1m[32mnode_modules/eventemitter3/umd/eventemitter3.js[39m[22m [2:1 - 337:2]

Clone found (markdown):
 - [1m[32mnode_modules/emoji-regex/LICENSE-MIT.txt[39m[22m [3:1 - 20:10] (17 lines, 324 tokens)
   [1m[32mnode_modules/pug-strip-comments/LICENSE.md[39m[22m [3:1 - 7:10]

Clone found (markdown):
 - [1m[32mnode_modules/constantinople/README.md[39m[22m [40:1 - 46:4] (6 lines, 113 tokens)
   [1m[32mnode_modules/constantinople/README.md[39m[22m [32:1 - 38:8]

Clone found (typescript):
 - [1m[32mnode_modules/colors/safe.d.ts[39m[22m [1:1 - 48:2] (47 lines, 606 tokens)
   [1m[32mnode_modules/@colors/colors/safe.d.ts[39m[22m [1:1 - 48:2]

Clone found (json):
 - [1m[32mnode_modules/colors/package.json[39m[22m [27:5 - 45:2] (18 lines, 85 tokens)
   [1m[32mnode_modules/@colors/colors/package.json[39m[22m [27:5 - 45:2]

Clone found (typescript):
 - [1m[32mnode_modules/colors/index.d.ts[39m[22m [6:1 - 136:2] (130 lines, 924 tokens)
   [1m[32mnode_modules/@colors/colors/index.d.ts[39m[22m [6:1 - 136:2]

Clone found (markdown):
 - [1m[32mnode_modules/colors/README.md[39m[22m [21:3 - 87:9] (66 lines, 259 tokens)
   [1m[32mnode_modules/@colors/colors/README.md[39m[22m [19:3 - 85:17]

Clone found (markdown):
 - [1m[32mnode_modules/colors/README.md[39m[22m [108:2 - 137:19] (29 lines, 279 tokens)
   [1m[32mnode_modules/@colors/colors/README.md[39m[22m [106:2 - 135:27]

Clone found (markdown):
 - [1m[32mnode_modules/colors/README.md[39m[22m [158:1 - 181:24] (23 lines, 101 tokens)
   [1m[32mnode_modules/@colors/colors/README.md[39m[22m [156:1 - 179:32]

Clone found (markdown):
 - [1m[32mnode_modules/colors/README.md[39m[22m [183:1 - 212:19] (29 lines, 131 tokens)
   [1m[32mnode_modules/@colors/colors/README.md[39m[22m [181:1 - 210:27]

Clone found (markdown):
 - [1m[32mnode_modules/cli-table3/README.md[39m[22m [220:2 - 229:4] (9 lines, 138 tokens)
   [1m[32mnode_modules/pug-strip-comments/LICENSE.md[39m[22m [3:2 - 7:4]

Clone found (markdown):
 - [1m[32mnode_modules/cli-table3/README.md[39m[22m [229:2 - 235:10] (6 lines, 138 tokens)
   [1m[32mnode_modules/pug-strip-comments/LICENSE.md[39m[22m [7:2 - 7:10]

Clone found (javascript):
 - [1m[32mnode_modules/character-parser/index.js[39m[22m [116:2 - 124:15] (8 lines, 83 tokens)
   [1m[32mnode_modules/character-parser/index.js[39m[22m [107:2 - 115:13]

Clone found (javascript):
 - [1m[32mnode_modules/character-parser/index.js[39m[22m [141:2 - 149:8] (8 lines, 79 tokens)
   [1m[32mnode_modules/character-parser/index.js[39m[22m [107:2 - 115:5]

Clone found (markdown):
 - [1m[32mnode_modules/braces/README.md[39m[22m [532:1 - 571:4] (39 lines, 262 tokens)
   [1m[32mnode_modules/is-number/README.md[39m[22m [119:1 - 209:4]

Clone found (markdown):
 - [1m[32mnode_modules/braces/CHANGELOG.md[39m[22m [5:1 - 37:5] (32 lines, 291 tokens)
   [1m[32mnode_modules/picomatch/CHANGELOG.md[39m[22m [5:1 - 39:2]

Clone found (markdown):
 - [1m[32mnode_modules/babel-walk/LICENSE.md[39m[22m [1:2 - 7:10] (6 lines, 327 tokens)
   [1m[32mnode_modules/pug-strip-comments/LICENSE.md[39m[22m [1:2 - 7:10]

Clone found (javascript):
 - [1m[32mnode_modules/asap/browser-raw.js[39m[22m [37:1 - 73:79] (36 lines, 233 tokens)
   [1m[32mnode_modules/asap/raw.js[39m[22m [35:1 - 71:8]

Clone found (javascript):
 - [1m[32mnode_modules/asap/asap.js[39m[22m [16:1 - 25:8] (9 lines, 80 tokens)
   [1m[32mnode_modules/asap/browser-asap.js[39m[22m [26:1 - 35:8]

Clone found (markdown):
 - [1m[32mnode_modules/asap/LICENSE.md[39m[22m [4:1 - 20:10] (16 lines, 324 tokens)
   [1m[32mnode_modules/pug-strip-comments/LICENSE.md[39m[22m [3:1 - 7:10]

Clone found (markdown):
 - [1m[32mnode_modules/asap/CHANGES.md[39m[22m [56:1 - 67:146] (11 lines, 127 tokens)
   [1m[32mnode_modules/asap/README.md[39m[22m [115:1 - 128:146]

Clone found (yaml):
 - [1m[32m.github/workflows/create_issue.yml[39m[22m [20:9 - 28:27] (8 lines, 73 tokens)
   [1m[32m.github/workflows/create_issue_on_label.yml[39m[22m [20:9 - 28:24]

Clone found (yaml):
 - [1m[32m.github/workflows/create_issue.yml[39m[22m [29:9 - 43:27] (14 lines, 81 tokens)
   [1m[32m.github/workflows/create_issue_on_label.yml[39m[22m [29:9 - 43:24]

Clone found (tsx):
 - [1m[32mtest.tsx[39m[22m [16:3 - 62:18] (46 lines, 488 tokens)
   [1m[32mtest.tsx[39m[22m [7:3 - 17:14]

Clone found (jsx):
 - [1m[32mtest.jsx[39m[22m [16:3 - 26:18] (10 lines, 100 tokens)
   [1m[32mtest.jsx[39m[22m [7:3 - 17:14]

Clone found (javascript):
 - [1m[32mjsx.js[39m[22m [144:21 - 150:2] (6 lines, 79 tokens)
   [1m[32mjsx.js[39m[22m [37:20 - 42:2]

[32mJSON report saved to /tmp/16816061444815531866/jscpd-report.json[39m
[3m[90mDetection time:[39m[23m: 20.031s
{"cloneLines":"console.log(a, ': require.resolve, preserveSymlinks ' + (process.execArgv.indexOf('preserve-symlinks') > -1 ? 'true' : 'false'));\n    console.log(b, ': preserveSymlinks true');\n    console.log(c, ': preserveSymlinks false');\n\n    if (a !== b && a !== c) {\n        throw 'async: no match'","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/resolve/test/resolver/nested_symlinks/mylib/async.js","startLine":6,"endLine":11},{"filePath":"node_modules/resolve/test/resolver/nested_symlinks/mylib/sync.js","startLine":5,"endLine":10}]}
{"cloneLines":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeTypeDuplicates;\nvar _generated = require(\"../../validators/generated\");\nfunction getQualifiedName(node) {\n  return (0, _generated.isIdentifier)(node) ? node.name : `${node.id","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","startLine":1,"endLine":9},{"filePath":"node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js","startLine":1,"endLine":9}]}
{"cloneLines":")}`;\n}\nfunction removeTypeDuplicates(nodesIn) {\n  const nodes = Array.from(nodesIn);\n  const generics = new Map();\n  const bases = new Map();\n  const typeGroups = new Set();\n  const types = [];\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n    if ((0, _generated.isAnyTypeAnnotation","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","startLine":9,"endLine":23},{"filePath":"node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js","startLine":9,"endLine":23}]}
{"cloneLines":")(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes.push(...node.types);\n        typeGroups.add(node.types);\n      }\n      continue;\n    }\n    if ((0, _generated.isGenericTypeAnnotation","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","startLine":30,"endLine":37},{"filePath":"node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js","startLine":30,"endLine":37}]}
{"cloneLines":");\n      if (generics.has(name)) {\n        let existing = generics.get(name);\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params.push(...node.typeParameters.params);\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params);\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n      continue;\n    }\n    types.push(node);\n  }\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n  return types;\n}\n\n//# sourceMappingURL=removeTypeDuplicates.js.map","nrTokens":0,"nrLines":28,"files":[{"filePath":"node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","startLine":38,"endLine":65},{"filePath":"node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js","startLine":38,"endLine":65}]}
{"cloneLines":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _scope = require(\"../../util/scope\");\nvar _scopeflags = require(\"../../util/scopeflags\");\nclass","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/@babel/parser/lib/plugins/flow/scope.js","startLine":1,"endLine":9},{"filePath":"node_modules/@babel/parser/lib/plugins/typescript/scope.js","startLine":1,"endLine":9}]}
{"cloneLines":";\nconst convertStringToObject = (sourceLine) => {\n    const matches = sourceLine.match(/(.+)\\s+\\((.+)\\s+(\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2} (\\+|\\-)\\d{4})\\s+(\\d+)\\)(.*)/);\n    const [, rev, author, date, , line] = matches\n        ? [...matches]\n        : [null, '', '', '', '', ''];\n    return {\n        author,\n        date,\n        line,\n        rev\n    };\n};\nasync","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/blamer/build/main/vcs/git.js","startLine":8,"endLine":21},{"filePath":"node_modules/blamer/build/module/vcs/git.js","startLine":2,"endLine":15}]}
{"cloneLines":".sync(pathToGit, ['blame', '-w', path]);\n    result.stdout.split('\\n').forEach(line => {\n        if (line !== '') {\n            const blamedLine = convertStringToObject(line);\n            if (blamedLine.line) {\n                blamedLines[blamedLine.line] = blamedLine;\n            }\n        }\n    });\n    return {\n        [path]: blamedLines\n    };\n}\nexports","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/blamer/build/main/vcs/git.js","startLine":24,"endLine":37},{"filePath":"node_modules/blamer/build/module/vcs/git.js","startLine":18,"endLine":31}]}
{"cloneLines":"const fullpath = entry.path;\n        if (base !== undefined) {\n            entry.path = common.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);\n        }\n        if (common.isAppliedFilter(this._settings.entryFilter, entry)) {\n            this._emitEntry","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@nodelib/fs.walk/out/readers/async.js","startLine":82,"endLine":87},{"filePath":"node_modules/@nodelib/fs.walk/out/readers/sync.js","startLine":44,"endLine":49}]}
{"cloneLines":"(entry);\n        }\n        if (entry.dirent.isDirectory() && common.isAppliedFilter(this._settings.deepFilter, entry)) {\n            this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);\n        }\n    }\n    _emitEntry","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/@nodelib/fs.walk/out/readers/async.js","startLine":87,"endLine":93},{"filePath":"node_modules/@nodelib/fs.walk/out/readers/sync.js","startLine":49,"endLine":55}]}
{"cloneLines":"{\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._reader = new async_1.default(this._root, this._settings);\n        this._storage","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@nodelib/fs.walk/out/providers/async.js","startLine":4,"endLine":9},{"filePath":"node_modules/@nodelib/fs.walk/out/providers/stream.js","startLine":5,"endLine":10}]}
{"cloneLines":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFileSystemAdapter = exports.FILE_SYSTEM_ADAPTER = void 0;\nconst fs = require(\"fs\");\nexports.FILE_SYSTEM_ADAPTER = {\n    lstat: fs.lstat,\n    stat: fs.stat,\n    lstatSync: fs.lstatSync,\n    statSync: fs.statSync,","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/@nodelib/fs.scandir/out/adapters/fs.js","startLine":1,"endLine":9},{"filePath":"node_modules/@nodelib/fs.stat/out/adapters/fs.js","startLine":1,"endLine":10}]}
{"cloneLines":"};\nfunction createFileSystemAdapter(fsMethods) {\n    if (fsMethods === undefined) {\n        return exports.FILE_SYSTEM_ADAPTER;\n    }\n    return Object.assign(Object.assign({}, exports.FILE_SYSTEM_ADAPTER), fsMethods);\n}\nexports.createFileSystemAdapter = createFileSystemAdapter;","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/@nodelib/fs.scandir/out/adapters/fs.js","startLine":12,"endLine":19},{"filePath":"node_modules/@nodelib/fs.stat/out/adapters/fs.js","startLine":10,"endLine":17}]}
{"cloneLines":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./progress\"","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@jscpd/finder/dist/subscribers/index.js","startLine":1,"endLine":6},{"filePath":"node_modules/@jscpd/finder/dist/validators/index.js","startLine":1,"endLine":6}]}
{"cloneLines":");\nconst fs_extra_1 = require(\"fs-extra\");\nconst core_1 = require(\"@jscpd/core\");\nconst reports_1 = require(\"../utils/reports\");\nconst safe_1 = require(\"colors/safe\");\nconst path_1 = require(\"path\");\nclass JsonReporter","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/@jscpd/finder/dist/reporters/json.js","startLine":2,"endLine":8},{"filePath":"node_modules/@jscpd/finder/dist/reporters/xml.js","startLine":3,"endLine":9}]}
{"cloneLines":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./console\"","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@jscpd/finder/dist/reporters/index.js","startLine":1,"endLine":6},{"filePath":"node_modules/@jscpd/finder/dist/validators/index.js","startLine":1,"endLine":6}]}
{"cloneLines":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"@jscpd/core\");\nconst fs_extra_1 = require(\"fs-extra\");\nconst safe_1 = require(\"colors/safe\");\nconst path_1 = require(\"path\");\nconst reports_1 = require(\"../utils/reports\");\nclass","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/@jscpd/finder/dist/reporters/csv.js","startLine":1,"endLine":8},{"filePath":"node_modules/@jscpd/finder/dist/reporters/markdown.js","startLine":1,"endLine":8}]}
{"cloneLines":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./blamer\"","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@jscpd/finder/dist/hooks/index.js","startLine":1,"endLine":6},{"filePath":"node_modules/@jscpd/finder/dist/validators/index.js","startLine":1,"endLine":6}]}
{"cloneLines":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./lines-length-clone.validator\"","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@jscpd/core/dist/validators/index.js","startLine":1,"endLine":6},{"filePath":"node_modules/@jscpd/finder/dist/validators/index.js","startLine":1,"endLine":6}]}
{"cloneLines":"(0, _is.default)(type, val)) {\n        (0, _validate.validateChild)(node, key, val);\n        return;\n      }\n    }\n    throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} but instead got ${JSON.stringify(val == null ? void 0 : val.type)}`);\n  }\n  validate.oneOfNodeOrValueTypes","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/@babel/types/lib/definitions/utils.js","startLine":120,"endLine":127},{"filePath":"node_modules/@babel/types/lib/definitions/utils.js","startLine":107,"endLine":114}]}
{"cloneLines":"],\n  fields: {\n    declare: (0, _utils.validateOptional)(bool),\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterDeclaration\"),\n    typeAnnotation","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@babel/types/lib/definitions/typescript.js","startLine":318,"endLine":323},{"filePath":"node_modules/@babel/types/lib/definitions/typescript.js","startLine":301,"endLine":306}]}
{"cloneLines":"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    supertype","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":90,"endLine":95},{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":81,"endLine":86}]}
{"cloneLines":"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    supertype: (0, _utils.validateOptionalType)(\"FlowType\"),\n    impltype: (0, _utils.validateType","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":290,"endLine":296},{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":81,"endLine":96}]}
{"cloneLines":", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"TypeofTypeAnnotation\"","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":322,"endLine":329},{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":180,"endLine":187}]}
{"cloneLines":", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    right: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"TypeAnnotation\"","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":336,"endLine":345},{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":80,"endLine":89}]}
{"cloneLines":", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"Variance\"","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":380,"endLine":387},{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":180,"endLine":187}]}
{"cloneLines":", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)(\"EnumNumberMember\"","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":413,"endLine":418},{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":404,"endLine":409}]}
{"cloneLines":", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)([","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":422,"endLine":427},{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":404,"endLine":409}]}
{"cloneLines":", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"StringLiteral\"","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":455,"endLine":460},{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":447,"endLine":452}]}
{"cloneLines":", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: (0, _utils.validateType)(\"FlowType\"),\n    indexType: (0, _utils.validateType)(\"FlowType\"),","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":478,"endLine":483},{"filePath":"node_modules/@babel/types/lib/definitions/flow.js","startLine":470,"endLine":476}]}
{"cloneLines":"() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & _scopeflags.ScopeFlag.VAR","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@babel/parser/lib/util/scope.js","startLine":138,"endLine":143},{"filePath":"node_modules/@babel/parser/lib/util/scope.js","startLine":46,"endLine":51}]}
{"cloneLines":"const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/@babel/parser/lib/parser/node.js","startLine":73,"endLine":79},{"filePath":"node_modules/@babel/parser/lib/parser/node.js","startLine":48,"endLine":54}]}
{"cloneLines":"{\n          const {\n            key,\n            value\n          } = node;\n          if (this.isPrivateName(key)) {\n            this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n          }\n          this.toAssignable(value, isLHS);\n          break","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/@babel/parser/lib/parser/lval.js","startLine":66,"endLine":75},{"filePath":"node_modules/@babel/parser/lib/plugins/estree.js","startLine":225,"endLine":234}]}
{"cloneLines":"jobs:\n  test:\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        node-version: [10.x, 12.x, 14.x]\n\n    steps:\n      - uses: actions/checkout@v2\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v1\n        with:\n          node-version: ${{ matrix.node-version }}\n      - run: yarn install --frozen-lockfile\n      - run: yarn prettier:check\n      - run: yarn test","nrTokens":0,"nrLines":17,"files":[{"filePath":"node_modules/with/.github/workflows/rollingversions.yml","startLine":6,"endLine":22},{"filePath":"node_modules/with/.github/workflows/test.yml","startLine":8,"endLine":24}]}
{"cloneLines":":\n    branches:\n      - master\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        node-version: [10.x, 12.x, 14.x]\n\n    steps:\n      - uses: actions/checkout@v2\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v1\n        with:\n          node-version: ${{ matrix.node-version }}\n      - run: yarn install --frozen-lockfile\n      - run: yarn prettier:check\n      - run: yarn test\n\n  publish-canary","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/with/.github/workflows/rollingversions-canary.yml","startLine":4,"endLine":26},{"filePath":"node_modules/with/.github/workflows/test.yml","startLine":4,"endLine":24}]}
{"cloneLines":":\n    runs-on: ubuntu-latest\n    needs: test\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-node@v1\n        with:\n          node-version: 12.x\n          registry-url: 'https://registry.npmjs.org'\n      - run: yarn install --frozen-lockfile\n      - run: yarn build\n      - run: npx rollingversions publish -","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/with/.github/workflows/rollingversions-canary.yml","startLine":26,"endLine":37},{"filePath":"node_modules/with/.github/workflows/rollingversions.yml","startLine":24,"endLine":36}]}
{"cloneLines":",\n      ]\n      const all_filters = {}\n      for (let i = 0, l = filters.length; i < l; i++) {\n        let filter = filters[i]\n        filter =\n          typeof filter === 'string'\n            ? { filter, language: filter }\n            : filter\n        if (Prism.languages[filter.language]) {\n          all_filters[`filter-${filter.filter}`] = {\n            pattern: RegExp(\n              filter_pattern.replace('{{filter_name}}', filter.filter)\n            )","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/reprism/src/languages/haml.js","startLine":134,"endLine":147},{"filePath":"node_modules/reprism/src/languages/pug.js","startLine":177,"endLine":189}]}
{"cloneLines":"),\n            lookbehind: true,\n            inside: {\n              'filter-name': {\n                pattern: /^:[\\w-]+/,\n                alias: 'variable',\n              },\n              rest: Prism.languages[filter.language],\n            },\n          }\n        }\n      }\n\n      Prism.languages.insertBefore('haml'","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/reprism/src/languages/haml.js","startLine":147,"endLine":160},{"filePath":"node_modules/reprism/src/languages/pug.js","startLine":191,"endLine":204}]}
{"cloneLines":",\n        'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\n        attributes: Prism.languages.asciidoc.attributes,\n        hr: Prism.languages.asciidoc.hr,\n        'page-break': Prism.languages.asciidoc['page-break'],\n        admonition: Prism.languages.asciidoc.admonition,\n        'list-label': Prism.languages.asciidoc['list-label'],\n        macro","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/reprism/src/languages/asciidoc.js","startLine":245,"endLine":252},{"filePath":"node_modules/reprism/src/languages/asciidoc.js","startLine":226,"endLine":233}]}
{"cloneLines":",\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity,\n        'line-continuation': Prism.languages.asciidoc['line-continuation'],\n      }\n\n      Prism.languages.asciidoc.","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/reprism/src/languages/asciidoc.js","startLine":251,"endLine":259},{"filePath":"node_modules/reprism/src/languages/asciidoc.js","startLine":233,"endLine":241}]}
{"cloneLines":".inside.rest = {\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity,\n      }\n\n      // Plugin to make entity title show the real entity, idea by Roman Komarov","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/reprism/src/languages/asciidoc.js","startLine":259,"endLine":266},{"filePath":"node_modules/reprism/src/languages/asciidoc.js","startLine":203,"endLine":210}]}
{"cloneLines":"// Plugin to make entity title show the real entity, idea by Roman Komarov\n      Prism.hooks.add('wrap', env => {\n        if (env.type === 'entity') {\n          env.attributes.title = env.content.replace(/&amp;/, '&')\n        }\n      })\n    }","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/reprism/src/languages/asciidoc.js","startLine":266,"endLine":272},{"filePath":"node_modules/reprism/src/languages/markup.js","startLine":46,"endLine":53}]}
{"cloneLines":"},\n      number: [/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n      symbol: /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,\n      keyword: /\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,\n      operator: /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,\n      punctuation: /[.,;:()]/\n    }","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/reprism/lib/languages/xojo.js","startLine":19,"endLine":25},{"filePath":"node_modules/reprism/src/languages/xojo.js","startLine":14,"endLine":19}]}
{"cloneLines":"],\n      symbol: [/^#redirect/im, /~{3,5}/],\n      // Handle table attrs:\n      // {|\n      // ! style=\"text-align:left;\"| Item\n      // |}\n      'table-tag': {\n        pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n        lookbehind: true,\n        inside: {\n          'table-bar': {\n            pattern: /\\|$/,\n            alias: 'punctuation'\n          }","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/reprism/lib/languages/wiki.js","startLine":49,"endLine":62},{"filePath":"node_modules/reprism/src/languages/wiki.js","startLine":50,"endLine":62}]}
{"cloneLines":"Prism.languages.insertBefore('wiki', 'tag', {\n      // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n      nowiki: {\n        pattern: /<(nowiki|pre|source)\\b[\\s\\S]*?>[\\s\\S]*?<\\/\\1>/i,\n        inside: {\n          tag: {\n            pattern: /<(?:nowiki|pre|source)\\b[\\s\\S]*?>|<\\/(?:nowiki|pre|source)>/i,\n            inside: Prism.languages.markup.tag.inside\n          }","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/reprism/lib/languages/wiki.js","startLine":69,"endLine":77},{"filePath":"node_modules/reprism/src/languages/wiki.js","startLine":70,"endLine":77}]}
{"cloneLines":"{\n    Prism.languages.vim = {\n      string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n      comment: /\".*/,\n      function: /\\w+(?=\\()/,\n      keyword: /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n      builtin: /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n      number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n      operator: /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n      punctuation: /[{}[\\](),;:]/\n    }","nrTokens":0,"nrLines":11,"files":[{"filePath":"node_modules/reprism/lib/languages/vim.js","startLine":8,"endLine":18},{"filePath":"node_modules/reprism/src/languages/vim.js","startLine":3,"endLine":12}]}
{"cloneLines":"},\n      string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      constant: /\\b(?:use|library)\\b/i,\n      // support for predefined attributes included\n      keyword: /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n      boolean: /\\b(?:true|false)\\b/i,\n      function: /\\w+(?=\\()/,\n      // decimal, based, physical, and exponential numbers supported\n      number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n      operator: /[<>]=?|:=|[-+*/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,\n      punctuation: /[{}[\\];(),.:]/\n    }","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/reprism/lib/languages/vhdl.js","startLine":20,"endLine":31},{"filePath":"node_modules/reprism/src/languages/vhdl.js","startLine":15,"endLine":25}]}
{"cloneLines":"},\n          keyword: /\\b(?:even|if|odd)\\b/,\n          boolean: /\\b(?:true|false|null)\\b/,\n          number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n          operator: [{\n            pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n            lookbehind: true\n          }","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/reprism/lib/languages/twig.js","startLine":32,"endLine":39},{"filePath":"node_modules/reprism/src/languages/twig.js","startLine":27,"endLine":34}]}
{"cloneLines":"nestedPatterns = {\n        inline: Prism.languages.textile.phrase.inside.inline,\n        link: Prism.languages.textile.phrase.inside.link,\n        image: Prism.languages.textile.phrase.inside.image,\n        footnote: Prism.languages.textile.phrase.inside.footnote,\n        acronym: Prism.languages.textile.phrase.inside.acronym,\n        mark: Prism.languages.textile.phrase.inside.mark\n\n        // Only allow alpha-numeric HTML tags, not XML tags","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/reprism/lib/languages/textile.js","startLine":236,"endLine":244},{"filePath":"node_modules/reprism/src/languages/textile.js","startLine":268,"endLine":274}]}
{"cloneLines":"{\n    // issues: nested multiline comments\n    Prism.languages.swift = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n            inside: {\n              delimiter: {\n                pattern: /^\\\\\\(|\\)$/,\n                alias: 'variable'\n              }","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/reprism/lib/languages/swift.js","startLine":8,"endLine":21},{"filePath":"node_modules/reprism/src/languages/swift.js","startLine":3,"endLine":15}]}
{"cloneLines":"= true;\n            }\n\n            return true;\n          }\n          return false;\n        });\n      });\n\n      // Re-insert the tokens after tokenizing\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty'","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/reprism/lib/languages/smarty.js","startLine":73,"endLine":84},{"filePath":"node_modules/reprism/lib/languages/soy.js","startLine":80,"endLine":91}]}
{"cloneLines":"{\n    Prism.languages.smalltalk = {\n      comment: /\"(?:\"\"|[^\"])+\"/,\n      string: /'(?:''|[^'])+'/,\n      symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n      'block-arguments': {\n        pattern: /(\\[\\s*):[^\\[|]*\\|/,\n        lookbehind: true,\n        inside: {\n          variable: /:[\\da-z]+/i,\n          punctuation: /\\|/\n        }","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/reprism/lib/languages/smalltalk.js","startLine":8,"endLine":19},{"filePath":"node_modules/reprism/src/languages/smalltalk.js","startLine":3,"endLine":13}]}
{"cloneLines":"{\n    Prism.languages.rip = {\n      comment: /#.*/,\n\n      keyword: /(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,\n\n      builtin: /@|\\bSystem\\b/,\n\n      boolean: /\\b(?:true|false)\\b/,\n\n      date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n      time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n      datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n\n      character: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n\n      regex: {\n        pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/(?=\\s*($|[\\r\\n,.;})]))/,\n        lookbehind: true,\n        greedy: true\n      }","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/lib/languages/rip.js","startLine":8,"endLine":28},{"filePath":"node_modules/reprism/src/languages/rip.js","startLine":3,"endLine":22}]}
{"cloneLines":"},\n\n      symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/reprism/lib/languages/rip.js","startLine":28,"endLine":34},{"filePath":"node_modules/reprism/src/languages/rip.js","startLine":23,"endLine":28}]}
{"cloneLines":"},\n\n      title: [\n      // Overlined and underlined\n      {\n        pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/reprism/lib/languages/rest.js","startLine":74,"endLine":83},{"filePath":"node_modules/reprism/src/languages/rest.js","startLine":75,"endLine":83}]}
{"cloneLines":"],\n\n      link: [{\n        pattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/reprism/lib/languages/rest.js","startLine":177,"endLine":184},{"filePath":"node_modules/reprism/src/languages/rest.js","startLine":181,"endLine":188}]}
{"cloneLines":"},\n\n      function: /[a-z_]\\w*(?=\\()/i,\n\n      property: /\\b(?:insensitive|idle|hover|selected_idle|selected_hover|background|position|alt|xpos|ypos|pos|xanchor|yanchor|anchor|xalign|yalign|align|xcenter|ycenter|xofsset|yoffset|ymaximum|maximum|xmaximum|xminimum|yminimum|minimum|xsize|ysizexysize|xfill|yfill|area|antialias|black_color|bold|caret|color|first_indent|font|size|italic|justify|kerning|language|layout|line_leading|line_overlap_split|line_spacing|min_width|newline_indent|outlines|rest_indent|ruby_style|slow_cps|slow_cps_multiplier|strikethrough|text_align|underline|hyperlink_functions|vertical|hinting|foreground|left_margin|xmargin|top_margin|bottom_margin|ymargin|left_padding|right_padding|xpadding|top_padding|bottom_padding|ypadding|size_group|child|hover_sound|activate_sound|mouse|focus_mask|keyboard_focus|bar_vertical|bar_invert|bar_resizing|left_gutter|right_gutter|top_gutter|bottom_gutter|left_bar|right_bar|top_bar|bottom_bar|thumb|thumb_shadow|thumb_offset|unscrollable|spacing|first_spacing|box_reverse|box_wrap|order_reverse|fit_first|ysize|thumbnail_width|thumbnail_height|help|text_ypos|text_xpos|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|alpha|insensitive_background|hover_background|zorder|value|width|xadjustment|xanchoraround|xaround|xinitial|xoffset|xzoom|yadjustment|yanchoraround|yaround|yinitial|yzoom|zoom|ground|height|text_style|text_y_fudge|selected_insensitive|has_sound|has_music|has_voice|focus|hovered|image_style|length|minwidth|mousewheel|offset|prefix|radius|range|right_margin|rotate|rotate_pad|developer|screen_width|screen_height|window_title|name|version|windows_icon|default_fullscreen|default_text_cps|default_afm_time|main_menu_music|sample_sound|enter_sound|exit_sound|save_directory|enter_transition|exit_transition|intra_transition|main_game_transition|game_main_transition|end_splash_transition|end_game_transition|after_load_transition|window_show_transition|window_hide_transition|adv_nvl_transition|nvl_adv_transition|enter_yesno_transition|exit_yesno_transition|enter_replay_transition|exit_replay_transition|say_attribute_transition|directory_name|executable_name|include_update|window_icon|modal|google_play_key|google_play_salt|drag_name|drag_handle|draggable|dragged|droppable|dropped|narrator_menu|action|default_afm_enable|version_name|version_tuple|inside|fadeout|fadein|layers|layer_clipping|linear|scrollbars|side_xpos|side_ypos|side_spacing|edgescroll|drag_joined|drag_raise|drop_shadow|drop_shadow_color|subpixel|easein|easeout|time|crop|auto|update|get_installed_packages|can_update|UpdateVersion|Update|overlay_functions|translations|window_left_padding|show_side_image|show_two_window)\\b/,\n\n      tag: /\\b(?:label|image|menu|[hv]box|frame|text|imagemap|imagebutton|bar|vbar|screen|textbutton|buttoscreenn|fixed|grid|input|key|mousearea|side|timer|viewport|window|hotspot|hotbar|self|button|drag|draggroup|tag|mm_menu_frame|nvl|block|parallel)\\b|\\$/,\n\n      keyword: /\\b(?:as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|yield|adjustment|alignaround|allow|angle|around|box_layout|cache|changed|child_size|clicked|clipping|corner1|corner2|default|delay|exclude|scope|slow|slow_abortable|slow_done|sound|style_group|substitute|suffix|transform_anchor|transpose|unhovered|config|theme|mm_root|gm_root|rounded_window|build|disabled_text|disabled|widget_selected|widget_text|widget_hover|widget|updater|behind|call|expression|hide|init|jump|onlayer|python|renpy|scene|set|show|transform|play|queue|stop|pause|define|window|repeat|contains|choice|on|function|event|animation|clockwise|counterclockwise|circles|knot|null|None|random|has|add|use|fade|dissolve|style|store|id|voice|center|left|right|less_rounded|music|movie|clear|persistent|ui)\\b/,\n\n      boolean: /\\b(?:[Tt]rue|[Ff]alse)\\b/,\n\n      number: /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at)\\b/,\n\n      punctuation: /[{}[\\];(),.:]/\n    }","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/reprism/lib/languages/renpy.js","startLine":20,"endLine":37},{"filePath":"node_modules/reprism/src/languages/renpy.js","startLine":15,"endLine":31}]}
{"cloneLines":"{\n    Prism.languages.prolog = {\n      // Syntax depends on the implementation\n      comment: [/%.+/, /\\/\\*[\\s\\S]*?\\*\\//],\n      // Depending on the implementation, strings may allow escaped newlines and quote-escape\n      string: {\n        pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/reprism/lib/languages/prolog.js","startLine":8,"endLine":16},{"filePath":"node_modules/reprism/src/languages/prolog.js","startLine":3,"endLine":10}]}
{"cloneLines":"});\n\n    if (Prism.util.type(Prism.languages.plsql.keyword) !== 'Array') {\n      Prism.languages.plsql.keyword = [Prism.languages.plsql.keyword];\n    }\n    Prism.languages.plsql.keyword.unshift(/\\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\\b/i);\n\n    if (Prism.util.type(Prism.languages.plsql.operator) !== 'Array') {\n      Prism.languages.plsql.operator = [Prism.languages.plsql.operator];\n    }\n    Prism.languages.plsql.operator.unshift(/:=/);\n  }\n}","nrTokens":0,"nrLines":13,"files":[{"filePath":"node_modules/reprism/lib/languages/plsql.js","startLine":11,"endLine":23},{"filePath":"node_modules/@jscpd/tokenizer/dist/languages/plsql.js","startLine":8,"endLine":17}]}
{"cloneLines":"{\n    /**\n     * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n     * Modified by Miles Johnson: http://milesj.me\n     *\n     * Supports the following:\n     * \t\t- Extends clike syntax\n     * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n     * \t\t- Smarter constant and function matching\n     *\n     * Adds the following new token classes:\n     * \t\tconstant, delimiter, variable, function, package\n     */\n    (function (Prism) {\n      Prism.languages.php = Prism.languages.extend('clike', {\n        keyword: /\\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n        constant: /\\b[A-Z0-9_]{2,}\\b/,\n        comment: {\n          pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n          lookbehind: true\n        }","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/lib/languages/php.js","startLine":8,"endLine":28},{"filePath":"node_modules/reprism/src/languages/php.js","startLine":3,"endLine":22}]}
{"cloneLines":"Prism.languages.insertBefore('php', 'string', {\n        'nowdoc-string': {\n          pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            delimiter: {\n              pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n              alias: 'symbol',\n              inside: {\n                punctuation: /^<<<'?|[';]$/\n              }","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/reprism/lib/languages/php.js","startLine":62,"endLine":73},{"filePath":"node_modules/reprism/src/languages/php.js","startLine":57,"endLine":67}]}
{"cloneLines":"},\n\n      // The lookbehinds prevent -s from breaking\n      // FIXME We don't handle change of separator like s(...)[...]\n      // s/.../.../\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      }","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/reprism/lib/languages/perl.js","startLine":103,"endLine":112},{"filePath":"node_modules/reprism/src/languages/perl.js","startLine":102,"endLine":110}]}
{"cloneLines":"},\n\n      // /.../\n      // The look-ahead tries to prevent two divisions on\n      // the same line from being highlighted as regex.\n      // This does not support multi-line regex.\n      {\n        pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n        greedy: true\n      }","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/reprism/lib/languages/perl.js","startLine":147,"endLine":156},{"filePath":"node_modules/reprism/src/languages/perl.js","startLine":146,"endLine":154}]}
{"cloneLines":"],\n\n      // FIXME Not sure about the handling of ::, ', and #\n      variable: [\n      // ${^POSTMATCH}\n      /[&*$@%]\\{\\^[A-Z]+\\}/,\n      // $^V\n      /[&*$@%]\\^[A-Z_]/,\n      // ${...}\n      /[&*$@%]#?(?=\\{)/,\n      // $foo\n      /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i,\n      // $1\n      /[&*$@%]\\d+/,\n      // $_, @_, %!\n      // The negative lookahead prevents from breaking the %= operator\n      /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/","nrTokens":0,"nrLines":17,"files":[{"filePath":"node_modules/reprism/lib/languages/perl.js","startLine":156,"endLine":172},{"filePath":"node_modules/reprism/src/languages/perl.js","startLine":156,"endLine":172}]}
{"cloneLines":"],\n      number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i,\n      // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i]","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/reprism/lib/languages/pascal.js","startLine":37,"endLine":42},{"filePath":"node_modules/reprism/src/languages/pascal.js","startLine":37,"endLine":42}]}
{"cloneLines":"},\n          keyword: Prism.languages.parser.keyword,\n          variable: Prism.languages.parser.variable,\n          function: Prism.languages.parser.function,\n          boolean: /\\b(?:true|false)\\b/,\n          number: /\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,\n          escape: Prism.languages.parser.escape,\n          operator: /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n          punctuation: Prism.languages.parser.punctuation\n        }","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/reprism/lib/languages/parser.js","startLine":53,"endLine":62},{"filePath":"node_modules/reprism/src/languages/parser.js","startLine":48,"endLine":56}]}
{"cloneLines":"Prism.languages.insertBefore('inside', 'punctuation', {\n      expression: Prism.languages.parser.expression,\n      keyword: Prism.languages.parser.keyword,\n      variable: Prism.languages.parser.variable,\n      function: Prism.languages.parser.function,\n      escape: Prism.languages.parser.escape,\n      'parser-punctuation': {\n        pattern: Prism.languages.parser.punctuation,\n        alias: 'punctuation'\n      }","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/reprism/lib/languages/parser.js","startLine":65,"endLine":74},{"filePath":"node_modules/reprism/src/languages/parser.js","startLine":60,"endLine":71}]}
{"cloneLines":"{\n    Prism.languages.objectivec = Prism.languages.extend('c', {\n      keyword: /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n      string: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n    }","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/reprism/lib/languages/objectivec.js","startLine":8,"endLine":13},{"filePath":"node_modules/reprism/src/languages/objectivec.js","startLine":3,"endLine":7}]}
{"cloneLines":"{\n    Prism.languages.nix = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            // The lookbehind ensures the ${} is not preceded by \\ or ''\n            pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,\n            lookbehind: true,\n            inside: {\n              antiquotation: {\n                pattern: /^\\$(?=\\{)/,\n                alias: 'variable'\n              }","nrTokens":0,"nrLines":16,"files":[{"filePath":"node_modules/reprism/lib/languages/nix.js","startLine":8,"endLine":23},{"filePath":"node_modules/reprism/src/languages/nix.js","startLine":3,"endLine":17}]}
{"cloneLines":"{\n    Prism.languages.mel = {\n      comment: /\\/\\/.*/,\n      code: {\n        pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n        greedy: true,\n        alias: 'italic',\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          }","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/reprism/lib/languages/mel.js","startLine":8,"endLine":19},{"filePath":"node_modules/reprism/src/languages/mel.js","startLine":3,"endLine":13}]}
{"cloneLines":"{\n    Prism.languages.markup = {\n      comment: /<!--[\\s\\S]*?-->/,\n      prolog: /<\\?[\\s\\S]+?\\?>/,\n      doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n      cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n      tag: {\n        pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n        greedy: true,\n        inside: {\n          tag: {\n            pattern: /^<\\/?[^\\s>\\/]+/i,\n            inside: {\n              punctuation: /^<\\/?/,\n              namespace: /^[^\\s>\\/:]+:/\n            }","nrTokens":0,"nrLines":16,"files":[{"filePath":"node_modules/reprism/lib/languages/markup.js","startLine":8,"endLine":23},{"filePath":"node_modules/reprism/src/languages/markup.js","startLine":3,"endLine":17}]}
{"cloneLines":"},\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          }","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/reprism/lib/languages/markdown.js","startLine":64,"endLine":75},{"filePath":"node_modules/reprism/src/languages/markdown.js","startLine":65,"endLine":75}]}
{"cloneLines":"},\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example] [id]\n        pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n        inside: {\n          variable: {\n            pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          }","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/reprism/lib/languages/markdown.js","startLine":102,"endLine":111},{"filePath":"node_modules/reprism/src/languages/markdown.js","startLine":103,"endLine":111}]}
{"cloneLines":"},\n      variable: /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n\n      keyword: [\n      // Directives\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n      // Functions\n      {\n        pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n        lookbehind: true\n      }","nrTokens":0,"nrLines":11,"files":[{"filePath":"node_modules/reprism/lib/languages/makefile.js","startLine":28,"endLine":38},{"filePath":"node_modules/reprism/src/languages/makefile.js","startLine":23,"endLine":32}]}
{"cloneLines":"{\n    Prism.languages.lolcode = {\n      comment: [/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/, /\\bBTW.+/],\n      string: {\n        pattern: /\"(?::.|[^\"])*\"/,\n        inside: {\n          variable: /:\\{[^}]+\\}/,\n          symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n        }","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/reprism/lib/languages/lolcode.js","startLine":8,"endLine":16},{"filePath":"node_modules/reprism/src/languages/lolcode.js","startLine":3,"endLine":10}]}
{"cloneLines":"},\n      number: /(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,\n      symbol: {\n        pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n        lookbehind: true,\n        inside: {\n          keyword: /A(?=\\s)/\n        }","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/reprism/lib/languages/lolcode.js","startLine":18,"endLine":25},{"filePath":"node_modules/reprism/src/languages/lolcode.js","startLine":13,"endLine":19}]}
{"cloneLines":"{\n    Prism.languages.keyman = {\n      comment: /\\bc\\s.*/i,\n      function: /\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i, // virtual key\n      string: /(\"|').*?\\1/,\n      bold: [\n      // header statements, system stores and variable system stores\n      /&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i, /","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/reprism/lib/languages/keyman.js","startLine":8,"endLine":15},{"filePath":"node_modules/reprism/src/languages/keyman.js","startLine":3,"endLine":11}]}
{"cloneLines":"},\n      string: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2/,\n      keyword: /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?/i,\n      operator: /[-+*^%??&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~?????????]/,\n      punctuation: /[{}[\\];(),.:]/\n    }","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/reprism/lib/languages/julia.js","startLine":13,"endLine":20},{"filePath":"node_modules/reprism/src/languages/julia.js","startLine":8,"endLine":14}]}
{"cloneLines":"if (typeof token !== 'string') {\n          if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n            // We found a tag, now find its kind\n\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n                // Pop matching opening tag\n                openedTags.pop();","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/reprism/lib/languages/jsx.js","startLine":58,"endLine":66},{"filePath":"node_modules/reprism/src/languages/jsx.js","startLine":65,"endLine":78}]}
{"cloneLines":"}\n            } else if (token.content[token.content.length - 1].content === '/>') {\n              // Autoclosed tag, ignore\n            } else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              }","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/reprism/lib/languages/jsx.js","startLine":67,"endLine":75},{"filePath":"node_modules/reprism/src/languages/jsx.js","startLine":78,"endLine":85}]}
{"cloneLines":"{\n    Prism.languages.jolie = Prism.languages.extend('clike', {\n      keyword: /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,\n      builtin: /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n      operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,\n      symbol: /[|;@]/,\n      punctuation: /[,.]/,\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/reprism/lib/languages/jolie.js","startLine":8,"endLine":19},{"filePath":"node_modules/reprism/src/languages/jolie.js","startLine":3,"endLine":13}]}
{"cloneLines":"Prism.languages.insertBefore('javascript', 'string', {\n      'template-string': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /\\$\\{[^}]+\\}/,\n            inside: {\n              'interpolation-punctuation': {\n                pattern: /^\\$\\{|\\}$/,\n                alias: 'punctuation'\n              }","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/reprism/lib/languages/javascript.js","startLine":31,"endLine":42},{"filePath":"node_modules/reprism/src/languages/javascript.js","startLine":26,"endLine":36}]}
{"cloneLines":"if (Prism.languages.markup) {\n      Prism.languages.insertBefore('markup', 'tag', {\n        script: {\n          pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n          lookbehind: true,\n          inside: Prism.languages.javascript,\n          alias: 'language-javascript',\n          greedy: true\n        }","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/reprism/lib/languages/javascript.js","startLine":51,"endLine":59},{"filePath":"node_modules/reprism/src/languages/javascript.js","startLine":46,"endLine":53}]}
{"cloneLines":"},\n      keyword: /\\b(?:activate|activeCoroCount|asString|block|break|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getSlot|getEnvironmentVariable|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|call|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n      builtin: /\\b(?:Array|AudioDevice|AudioMixer|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Regex|SGML|SGMLElement|SGMLParser|SQLite|Server|Sequence|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink|Random|BigNum|Sequence)\\b/,\n      boolean: /\\b(?:true|false|nil)\\b/,\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?/i,\n      operator: /[=!*/%+-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|(\\b(?:return|and|or|not)\\b)|@@?|\\?\\??|\\.\\./,\n      punctuation: /[{}[\\];(),.:]/\n    }","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/reprism/lib/languages/io.js","startLine":28,"endLine":35},{"filePath":"node_modules/reprism/src/languages/io.js","startLine":27,"endLine":33}]}
{"cloneLines":"{\n    Prism.languages.inform7 = {\n      string: {\n        pattern: /\"[^\"]*\"/,\n        inside: {\n          substitution: {\n            pattern: /\\[[^\\]]+\\]/,\n            inside: {\n              delimiter: {\n                pattern: /\\[|\\]/,\n                alias: 'punctuation'\n              }","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/reprism/lib/languages/inform7.js","startLine":8,"endLine":19},{"filePath":"node_modules/reprism/src/languages/inform7.js","startLine":3,"endLine":13}]}
{"cloneLines":"},\n      number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n      keyword: /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GSB|GOTO|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|RIGHT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n      function: /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n      label: /(?:\\B@[^\\s]+)/i,\n      operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n      punctuation: /[\\[,;:()\\]]/\n    }","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/reprism/lib/languages/ichigojam.js","startLine":16,"endLine":23},{"filePath":"node_modules/reprism/src/languages/ichigojam.js","startLine":11,"endLine":17}]}
{"cloneLines":"{\n    Prism.languages.haxe = Prism.languages.extend('clike', {\n      // Strings can be multi-line\n      string: {\n        pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n            lookbehind: true,\n            inside: {\n              interpolation: {\n                pattern: /^\\$\\w*/,\n                alias: 'variable'\n              }","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/reprism/lib/languages/haxe.js","startLine":8,"endLine":22},{"filePath":"node_modules/reprism/src/languages/haxe.js","startLine":3,"endLine":16}]}
{"cloneLines":"},\n      // These are builtin variables only. Constructors are highlighted later as a constant.\n      builtin: /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n      // decimal integers and floating point numbers | octal integers | hexadecimal integers\n      number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n      // Most of this is needed because of the meaning of a single '.'.\n      // If it stands alone freely, it is the function composition.\n      // It may also be a separator between a module name and an identifier => no\n      // operator. If it comes together with other special characters it is an\n      // operator too.\n      operator: /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n      // In Haskell, nearly everything is a variable, do not highlight these.\n      hvariable: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n      constant: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n      punctuation: /[{}[\\];(),.:]/\n    }","nrTokens":0,"nrLines":16,"files":[{"filePath":"node_modules/reprism/lib/languages/haskell.js","startLine":29,"endLine":44},{"filePath":"node_modules/reprism/src/languages/haskell.js","startLine":24,"endLine":38}]}
{"cloneLines":"},\n        tag: {\n          // Allows for one nested group of braces\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n          lookbehind: true,\n          inside: {\n            attributes: [{\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,\n              lookbehind: true,\n              inside: {\n                rest: Prism.languages.ruby\n              }","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/reprism/lib/languages/haml.js","startLine":62,"endLine":75},{"filePath":"node_modules/reprism/src/languages/haml.js","startLine":60,"endLine":73}]}
{"cloneLines":"];\n      var all_filters = {};\n      for (var i = 0, l = filters.length; i < l; i++) {\n        var filter = filters[i];\n        filter = typeof filter === 'string' ? { filter: filter, language: filter } : filter;\n        if (Prism.languages[filter.language]) {\n          all_filters['filter-' + filter.filter] = {\n            pattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter))","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/reprism/lib/languages/haml.js","startLine":122,"endLine":129},{"filePath":"node_modules/reprism/lib/languages/pug.js","startLine":162,"endLine":169}]}
{"cloneLines":"),\n            lookbehind: true,\n            inside: {\n              'filter-name': {\n                pattern: /^:[\\w-]+/,\n                alias: 'variable'\n              },\n              rest: Prism.languages[filter.language]\n            }\n          };\n        }\n      }\n\n      Prism.languages.insertBefore('haml'","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/reprism/lib/languages/haml.js","startLine":129,"endLine":142},{"filePath":"node_modules/reprism/lib/languages/pug.js","startLine":169,"endLine":182}]}
{"cloneLines":"{\n    Prism.languages.go = Prism.languages.extend('clike', {\n      keyword: /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n      builtin: /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n      boolean: /\\b(?:_|iota|nil|true|false)\\b/,\n      operator: /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n      number: /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n      string: {\n        pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      }","nrTokens":0,"nrLines":11,"files":[{"filePath":"node_modules/reprism/lib/languages/go.js","startLine":8,"endLine":18},{"filePath":"node_modules/reprism/src/languages/go.js","startLine":3,"endLine":12}]}
{"cloneLines":"{\n    Prism.languages.glsl = Prism.languages.extend('clike', {\n      comment: [/\\/\\*[\\s\\S]*?\\*\\//, /\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/],\n      number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,\n      keyword: /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n    }","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/reprism/lib/languages/glsl.js","startLine":8,"endLine":13},{"filePath":"node_modules/reprism/src/languages/glsl.js","startLine":3,"endLine":7}]}
{"cloneLines":"},\n      boolean: /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n      number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n      keyword: [\n      // Types\n      /\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i,\n      // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\n      // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\n      // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i]","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/reprism/lib/languages/fortran.js","startLine":26,"endLine":37},{"filePath":"node_modules/reprism/src/languages/fortran.js","startLine":21,"endLine":32}]}
{"cloneLines":"],\n      // normal char | special char | char code\n      char: /'(?:%.|[^%'\\r\\n])+'/,\n      keyword: /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n      boolean: /\\b(?:True|False)\\b/i,\n      // Convention: class-names are always all upper-case characters\n      'class-name': {\n        pattern: /\\b[A-Z][\\dA-Z_]*\\b/,\n        alias: 'builtin'\n      }","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/reprism/lib/languages/eiffel.js","startLine":26,"endLine":35},{"filePath":"node_modules/reprism/src/languages/eiffel.js","startLine":22,"endLine":30}]}
{"cloneLines":"},\n      number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n      // Decimal\n      /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/i]","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/reprism/lib/languages/eiffel.js","startLine":35,"endLine":40},{"filePath":"node_modules/reprism/src/languages/eiffel.js","startLine":31,"endLine":36}]}
{"cloneLines":"{\n    Prism.languages.diff = {\n      coord: [\n      // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n      /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n      // Match \"@@ ... @@\" coord lines in unified diff.\n      /^@@.*@@$/m,\n      // Match coord lines in normal diff (starts with a number).\n      /^\\d+.*$/m]","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/reprism/lib/languages/diff.js","startLine":8,"endLine":16},{"filePath":"node_modules/reprism/src/languages/diff.js","startLine":3,"endLine":11}]}
{"cloneLines":"{\n    Prism.languages.d = Prism.languages.extend('clike', {\n      string: [\n      // r\"\", x\"\"\n      /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/,\n      // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n      /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/,\n      // q\"IDENT\n      // ...\n      // IDENT\"\n      /\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/,\n      // q\"//\", q\"||\", etc.\n      /\\bq\"(.)[\\s\\S]*?\\1\"/,\n      // Characters\n      /'(?:\\\\'|\\\\?[^']+)'/, /","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/reprism/lib/languages/d.js","startLine":8,"endLine":22},{"filePath":"node_modules/reprism/src/languages/d.js","startLine":3,"endLine":19}]}
{"cloneLines":"],\n\n      number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i, {\n        pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,\n        lookbehind: true\n      }","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/reprism/lib/languages/d.js","startLine":22,"endLine":30},{"filePath":"node_modules/reprism/src/languages/d.js","startLine":20,"endLine":28}]}
{"cloneLines":"if (Prism.languages.markup) {\n      Prism.languages.insertBefore('markup', 'tag', {\n        style: {\n          pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n          lookbehind: true,\n          inside: Prism.languages.css,\n          alias: 'language-css',\n          greedy: true\n        }","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/reprism/lib/languages/css.js","startLine":32,"endLine":40},{"filePath":"node_modules/reprism/src/languages/css.js","startLine":27,"endLine":34}]}
{"cloneLines":"{\n    // Copied from https://github.com/jeluard/prism-clojure\n    Prism.languages.clojure = {\n      comment: /;+.*/,\n      string: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      operator: /(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i, // used for symbols and keywords\n      keyword: {\n        pattern: /([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def\\-|defn|defn\\-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|\\-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,\n        lookbehind: true\n      }","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/reprism/lib/languages/clojure.js","startLine":8,"endLine":17},{"filePath":"node_modules/reprism/src/languages/clojure.js","startLine":3,"endLine":11}]}
{"cloneLines":"Prism.languages.insertBefore('c', 'string', {\n      macro: {\n        // allow for multiline macro definitions\n        // spaces after the # character compile fine with gcc\n        pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight the path of the include statement as a string\n          string: {\n            pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n            lookbehind: true\n          }","nrTokens":0,"nrLines":13,"files":[{"filePath":"node_modules/reprism/lib/languages/c.js","startLine":15,"endLine":27},{"filePath":"node_modules/reprism/src/languages/c.js","startLine":10,"endLine":21}]}
{"cloneLines":"Prism.languages.insertBefore('bison', 'comment', {\n      bison: {\n        // This should match all the beginning of the file\n        // including the prologue(s), the bison declarations and\n        // the grammar rules.\n        pattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,\n        inside: {\n          c: {\n            // Allow for one level of nested braces\n            pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n            inside: {\n              delimiter: {\n                pattern: /^%?\\{|%?\\}$/,\n                alias: 'punctuation'\n              }","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/reprism/lib/languages/bison.js","startLine":11,"endLine":25},{"filePath":"node_modules/reprism/src/languages/bison.js","startLine":6,"endLine":19}]}
{"cloneLines":"},\n          comment: Prism.languages.c.comment,\n          string: Prism.languages.c.string,\n          property: /\\S+(?=:)/,\n          keyword: /%\\w+/,\n          number: {\n            pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n            lookbehind: true\n          }","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/reprism/lib/languages/bison.js","startLine":35,"endLine":43},{"filePath":"node_modules/reprism/src/languages/bison.js","startLine":30,"endLine":37}]}
{"cloneLines":"},\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n      keyword: /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n      function: /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n      operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n      punctuation: /[,;:()]/\n    }","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/reprism/lib/languages/basic.js","startLine":19,"endLine":25},{"filePath":"node_modules/reprism/src/languages/basic.js","startLine":14,"endLine":19}]}
{"cloneLines":"},\n      string: /\"(?:[^\"\\n\\r]|\"\")*\"/m,\n      function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m, // function - don't use .*\\) in the end bcoz string locks it\n      tag: /^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m, // labels\n      variable: /%\\w+%/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n      operator: /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n      punctuation: /[{}[\\]():,]/,\n      boolean: /\\b(?:true|false)\\b/,\n\n      selector: /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n\n      constant: /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|programfiles|a_programfiles|a_programs|a_programscommon|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,\n\n      builtin: /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|cos|dllcall|exp|fileexist|Fileopen|floor|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,\n\n      symbol: /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n\n      important: /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InstallKeybdHook|InstallMouseHook|KeyHistory|LTrim|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|WinActivateForce)\\b/i,\n\n      keyword: /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Type|UnCheck|underline|Unicode|Unlock|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i\n    }","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/lib/languages/autohotkey.js","startLine":14,"endLine":35},{"filePath":"node_modules/reprism/src/languages/autohotkey.js","startLine":9,"endLine":29}]}
{"cloneLines":"{\n    Prism.languages.aspnet = Prism.languages.extend('markup', {\n      'page-directive tag': {\n        pattern: /<%\\s*@.*%>/i,\n        inside: {\n          'page-directive tag': /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          rest: Prism.languages.markup.tag.inside\n        }","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/reprism/lib/languages/aspnet.js","startLine":8,"endLine":15},{"filePath":"node_modules/reprism/src/languages/aspnet.js","startLine":3,"endLine":9}]}
{"cloneLines":"// script runat=\"server\" contains csharp, not javascript\n    Prism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\n      'asp script': {\n        pattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        inside: Prism.languages.csharp || {}\n      }","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/reprism/lib/languages/aspnet.js","startLine":37,"endLine":43},{"filePath":"node_modules/reprism/src/languages/aspnet.js","startLine":37,"endLine":45}]}
{"cloneLines":"attributes.inside.interpreted.inside.rest = {\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity\n      }","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/reprism/lib/languages/asciidoc.js","startLine":201,"endLine":206},{"filePath":"node_modules/reprism/src/languages/asciidoc.js","startLine":203,"endLine":207}]}
{"cloneLines":"Prism.languages.asciidoc.table.inside.rest = {\n        'comment-block': Prism.languages.asciidoc['comment-block'],\n        'passthrough-block': Prism.languages.asciidoc['passthrough-block'],\n        'literal-block': Prism.languages.asciidoc['literal-block'],\n        'other-block': Prism.languages.asciidoc['other-block'],\n        'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\n        'indented-block': Prism.languages.asciidoc['indented-block'],\n        comment: Prism.languages.asciidoc.comment,\n        title: Prism.languages.asciidoc.title,\n        'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\n        attributes: Prism.languages.asciidoc.attributes,\n        hr: Prism.languages.asciidoc.hr,\n        'page-break': Prism.languages.asciidoc['page-break'],\n        admonition: Prism.languages.asciidoc.admonition,\n        'list-label': Prism.languages.asciidoc['list-label'],\n        callout: Prism.languages.asciidoc.callout,\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity,\n        'line-continuation': Prism.languages.asciidoc['line-continuation']\n      }","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/lib/languages/asciidoc.js","startLine":216,"endLine":237},{"filePath":"node_modules/reprism/src/languages/asciidoc.js","startLine":218,"endLine":238}]}
{"cloneLines":"Prism.languages.asciidoc['other-block'].inside.rest = {\n        table: Prism.languages.asciidoc.table,\n        'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\n        'indented-block': Prism.languages.asciidoc['indented-block'],\n        comment: Prism.languages.asciidoc.comment,\n        'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\n        attributes: Prism.languages.asciidoc.attributes,\n        hr: Prism.languages.asciidoc.hr,\n        'page-break': Prism.languages.asciidoc['page-break'],\n        admonition: Prism.languages.asciidoc.admonition,\n        'list-label': Prism.languages.asciidoc['list-label'],\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity,\n        'line-continuation': Prism.languages.asciidoc['line-continuation']\n      };\n\n      Prism.languages.asciidoc.","nrTokens":0,"nrLines":19,"files":[{"filePath":"node_modules/reprism/lib/languages/asciidoc.js","startLine":239,"endLine":257},{"filePath":"node_modules/reprism/src/languages/asciidoc.js","startLine":241,"endLine":239}]}
{"cloneLines":"Prism.languages.asciidoc.title.inside.rest = {\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity\n\n        // Plugin to make entity title show the real entity, idea by Roman Komarov","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/reprism/lib/languages/asciidoc.js","startLine":257,"endLine":263},{"filePath":"node_modules/reprism/src/languages/asciidoc.js","startLine":259,"endLine":207}]}
{"cloneLines":"Prism.hooks.add('wrap', function (env) {\n        if (env.type === 'entity') {\n          env.attributes.title = env.content.replace(/&amp;/, '&');\n        }\n      });\n    }","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/reprism/lib/languages/asciidoc.js","startLine":264,"endLine":269},{"filePath":"node_modules/reprism/lib/languages/markup.js","startLine":49,"endLine":55}]}
{"cloneLines":"{\n    Prism.languages.ada = {\n      comment: /--.*/,\n      string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\n      number: [{\n        pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      }","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/reprism/lib/languages/ada.js","startLine":8,"endLine":14},{"filePath":"node_modules/reprism/src/languages/ada.js","startLine":3,"endLine":9}]}
{"cloneLines":"],\n      'attr-name': /\\b'\\w+/i,\n      keyword: /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n      boolean: /\\b(?:true|false)\\b/i,\n      operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n      punctuation: /\\.\\.?|[,;():]/,\n      char: /'.'/,\n      variable: /\\b[a-z](?:[_a-z\\d])*\\b/i\n    }","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/reprism/lib/languages/ada.js","startLine":16,"endLine":24},{"filePath":"node_modules/reprism/src/languages/ada.js","startLine":14,"endLine":21}]}
{"cloneLines":"if (Prism.languages.markup) {\n      Prism.languages.insertBefore('actionscript', 'string', {\n        xml: {\n          pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.markup\n          }","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/reprism/lib/languages/actionscript.js","startLine":15,"endLine":22},{"filePath":"node_modules/reprism/src/languages/actionscript.js","startLine":10,"endLine":16}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'yaml',\n  init: function init(Prism) {\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n        lookbehind: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n        lookbehind: true\n      },\n      tag: /![^\\s]+/,\n      important: /[&*][\\w]+/,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    };\n  }\n};","nrTokens":0,"nrLines":55,"files":[{"filePath":"node_modules/reprism/languages/languages/yaml.js","startLine":1,"endLine":55},{"filePath":"node_modules/reprism/lib/languages/yaml.js","startLine":1,"endLine":55}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'xojo',\n  init: function init(Prism) {\n    Prism.languages.xojo = {\n      comment: {\n        pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n        inside: {\n          keyword: /^Rem/i\n        }\n      },\n      string: {\n        pattern: /\"(?:\"\"|[^\"])*\"/,\n        greedy: true\n      },\n      number: [/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n      symbol: /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,\n      keyword: /\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,\n      operator: /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,\n      punctuation: /[.,;:()]/\n    };\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/languages/languages/xojo.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/xojo.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'xeora',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.xeora = Prism.languages.extend('markup', {\n        constant: {\n          pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n          inside: {\n            punctuation: {\n              pattern: /\\$/\n            }\n          }\n        },\n        variable: {\n          pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n          inside: {\n            punctuation: {\n              pattern: /[$.]/\n            },\n            operator: {\n              pattern: /#+|[-+*~=^@]/\n            }\n          }\n        },\n        'function-inline': {\n          pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n          inside: {\n            variable: {\n              pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n              inside: {\n                punctuation: {\n                  pattern: /[,.|]/\n                },\n                operator: {\n                  pattern: /#+|[-+*~=^@]/\n                }\n              }\n            },\n            punctuation: {\n              pattern: /\\$\\w:|[$:?.,|]/\n            }\n          },\n          alias: 'function'\n        },\n        'function-block': {\n          pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n          inside: {\n            punctuation: {\n              pattern: /[$:{}?.,|]/\n            }\n          },\n          alias: 'function'\n        },\n        'directive-inline': {\n          pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n          inside: {\n            punctuation: {\n              pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n              inside: {\n                tag: {\n                  pattern: /#\\d/\n                }\n              }\n            }\n          },\n          alias: 'function'\n        },\n        'directive-block-open': {\n          pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n          inside: {\n            punctuation: {\n              pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n              inside: {\n                tag: {\n                  pattern: /#\\d/\n                }\n              }\n            },\n            attribute: {\n              pattern: /![A-Z]+$/,\n              inside: {\n                punctuation: {\n                  pattern: /!/\n                }\n              },\n              alias: 'keyword'\n            }\n          },\n          alias: 'function'\n        },\n        'directive-block-separator': {\n          pattern: /}:[-\\w.]+:{/,\n          inside: {\n            punctuation: {\n              pattern: /[:{}]/\n            }\n          },\n          alias: 'function'\n        },\n        'directive-block-close': {\n          pattern: /}:[-\\w.]+\\$/,\n          inside: {\n            punctuation: {\n              pattern: /[:{}$]/\n            }\n          },\n          alias: 'function'\n        }\n      });\n\n      Prism.languages.insertBefore('inside', 'punctuation', {\n        variable: Prism.languages.xeora['function-inline'].inside.variable\n      }, Prism.languages.xeora['function-block']);\n\n      Prism.languages.xeoracube = Prism.languages.xeora;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":123,"files":[{"filePath":"node_modules/reprism/languages/languages/xeora.js","startLine":1,"endLine":123},{"filePath":"node_modules/reprism/lib/languages/xeora.js","startLine":1,"endLine":123}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'wiki',\n  init: function init(Prism) {\n    Prism.languages.wiki = Prism.languages.extend('markup', {\n      'block-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      heading: {\n        pattern: /^(=+).+?\\1/m,\n        inside: {\n          punctuation: /^=+|=+$/,\n          important: /.+/\n        }\n      },\n      emphasis: {\n        // TODO Multi-line\n        pattern: /('{2,5}).+?\\1/,\n        inside: {\n          'bold italic': {\n            pattern: /(''''').+?(?=\\1)/,\n            lookbehind: true\n          },\n          bold: {\n            pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n            lookbehind: true\n          },\n          punctuation: /^''+|''+$/\n        }\n      },\n      hr: {\n        pattern: /^-{4,}/m,\n        alias: 'punctuation'\n      },\n      url: [/ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i, /\\[\\[.+?\\]\\]|\\[.+?\\]/],\n      variable: [/__[A-Z]+__/,\n      // FIXME Nested structures should be handled\n      // {{formatnum:{{#expr:{{{3}}}}}}}\n      /\\{{3}.+?\\}{3}/, /\\{\\{.+?\\}\\}/],\n      symbol: [/^#redirect/im, /~{3,5}/],\n      // Handle table attrs:\n      // {|\n      // ! style=\"text-align:left;\"| Item\n      // |}\n      'table-tag': {\n        pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n        lookbehind: true,\n        inside: {\n          'table-bar': {\n            pattern: /\\|$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.markup.tag.inside\n        }\n      },\n      punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n    });\n\n    Prism.languages.insertBefore('wiki', 'tag', {\n      // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n      nowiki: {\n        pattern: /<(nowiki|pre|source)\\b[\\s\\S]*?>[\\s\\S]*?<\\/\\1>/i,\n        inside: {\n          tag: {\n            pattern: /<(?:nowiki|pre|source)\\b[\\s\\S]*?>|<\\/(?:nowiki|pre|source)>/i,\n            inside: Prism.languages.markup.tag.inside\n          }\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":82,"files":[{"filePath":"node_modules/reprism/languages/languages/wiki.js","startLine":1,"endLine":82},{"filePath":"node_modules/reprism/lib/languages/wiki.js","startLine":1,"endLine":82}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'wasm',\n  init: function init(Prism) {\n    Prism.languages.wasm = {\n      comment: [/\\(;[\\s\\S]*?;\\)/, {\n        pattern: /;;.*/,\n        greedy: true\n      }],\n      string: {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n        greedy: true\n      },\n      keyword: [{\n        pattern: /\\b(?:align|offset)=/,\n        inside: {\n          operator: /=/\n        }\n      }, {\n        pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n      variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n      number: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n      punctuation: /[()]/\n    };\n  }\n};","nrTokens":0,"nrLines":34,"files":[{"filePath":"node_modules/reprism/languages/languages/wasm.js","startLine":1,"endLine":34},{"filePath":"node_modules/reprism/lib/languages/wasm.js","startLine":1,"endLine":34}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'visual-basic',\n  init: function init(Prism) {\n    Prism.languages['visual-basic'] = {\n      comment: {\n        pattern: /(?:['??????]|REM\\b).*/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      directive: {\n        pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\\S\\r\\n]_[^\\S\\r\\n]*(?:\\r\\n?|\\n)|.)+/i,\n        alias: 'comment',\n        greedy: true\n      },\n      string: {\n        pattern: /[\"??????](?:[\"??????]{2}|[^\"??????])*[\"??????]C?/i,\n        greedy: true\n      },\n      date: {\n        pattern: /#[^\\S\\r\\n]*(?:\\d+([/-])\\d+\\1\\d+(?:[^\\S\\r\\n]+(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))?|(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))[^\\S\\r\\n]*#/i,\n        alias: 'builtin'\n      },\n      number: /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:U?[ILS]|[FRD])?/i,\n      boolean: /\\b(?:True|False|Nothing)\\b/i,\n      keyword: /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|TypeOf|U(?:Integer|Long|Short)|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n      operator: [/[+\\-*/\\\\^<=>&#@$%!]/, {\n        pattern: /([^\\S\\r\\n])_(?=[^\\S\\r\\n]*[\\r\\n])/,\n        lookbehind: true\n      }],\n      punctuation: /[{}().,:?]/\n    };\n\n    Prism.languages.vb = Prism.languages['visual-basic'];\n  }\n};","nrTokens":0,"nrLines":41,"files":[{"filePath":"node_modules/reprism/languages/languages/visual-basic.js","startLine":1,"endLine":41},{"filePath":"node_modules/reprism/lib/languages/visual-basic.js","startLine":1,"endLine":41}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'vim',\n  init: function init(Prism) {\n    Prism.languages.vim = {\n      string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n      comment: /\".*/,\n      function: /\\w+(?=\\()/,\n      keyword: /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n      builtin: /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n      number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n      operator: /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n      punctuation: /[{}[\\](),;:]/\n    };\n  }\n};","nrTokens":0,"nrLines":20,"files":[{"filePath":"node_modules/reprism/languages/languages/vim.js","startLine":1,"endLine":20},{"filePath":"node_modules/reprism/lib/languages/vim.js","startLine":1,"endLine":20}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'vhdl',\n  init: function init(Prism) {\n    Prism.languages.vhdl = {\n      comment: /--.+/,\n      // support for all logic vectors\n      'vhdl-vectors': {\n        pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n        alias: 'number'\n      },\n      // support for operator overloading included\n      'quoted-function': {\n        pattern: /\"\\S+?\"(?=\\()/,\n        alias: 'function'\n      },\n      string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      constant: /\\b(?:use|library)\\b/i,\n      // support for predefined attributes included\n      keyword: /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n      boolean: /\\b(?:true|false)\\b/i,\n      function: /\\w+(?=\\()/,\n      // decimal, based, physical, and exponential numbers supported\n      number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n      operator: /[<>]=?|:=|[-+*/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":33,"files":[{"filePath":"node_modules/reprism/languages/languages/vhdl.js","startLine":1,"endLine":33},{"filePath":"node_modules/reprism/lib/languages/vhdl.js","startLine":1,"endLine":33}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'verilog',\n  init: function init(Prism) {\n    Prism.languages.verilog = {\n      comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n        greedy: true\n      },\n      // support for any kernel function (ex: $display())\n      property: /\\B\\$\\w+\\b/,\n      // support for user defined constants (ex: `define)\n      constant: /\\B`\\w+\\b/,\n      function: /\\w+(?=\\()/,\n      // support for verilog and system verilog keywords\n      keyword: /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n      // bold highlighting for all verilog and system verilog logic blocks\n      important: /\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,\n      // support for time ticks, vectors, and real numbers\n      number: /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,\n      operator: /[-+{}^~%*\\/?=!<>&|]+/,\n      punctuation: /[[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/languages/verilog.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/verilog.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'velocity',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.velocity = Prism.languages.extend('markup', {});\n\n      var velocity = {\n        variable: {\n          pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n          lookbehind: true,\n          inside: {} // See below\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        number: /\\b\\d+\\b/,\n        boolean: /\\b(?:true|false)\\b/,\n        operator: /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n        punctuation: /[(){}[\\]:,.]/\n      };\n\n      velocity.variable.inside = {\n        string: velocity.string,\n        function: {\n          pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n          lookbehind: true\n        },\n        number: velocity.number,\n        boolean: velocity.boolean,\n        punctuation: velocity.punctuation\n      };\n\n      Prism.languages.insertBefore('velocity', 'comment', {\n        unparsed: {\n          pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            punctuation: /^#\\[\\[|]]#$/\n          }\n        },\n        'velocity-comment': [{\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }, {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }],\n        directive: {\n          pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n          lookbehind: true,\n          inside: {\n            keyword: {\n              pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n              inside: {\n                punctuation: /[{}]/\n              }\n            },\n            rest: velocity\n          }\n        },\n        variable: velocity.variable\n      });\n\n      Prism.languages.velocity.tag.inside['attr-value'].inside.rest = Prism.languages.velocity;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":78,"files":[{"filePath":"node_modules/reprism/languages/languages/velocity.js","startLine":1,"endLine":78},{"filePath":"node_modules/reprism/lib/languages/velocity.js","startLine":1,"endLine":78}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'vbnet',\n  init: function init(Prism) {\n    Prism.languages.vbnet = Prism.languages.extend('basic', {\n      keyword: /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDEC|CDBL|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEFAULT|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LINE INPUT|LET|LIB|LIKE|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPERATOR|OPEN|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHORT|SINGLE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SYNCLOCK|SWAP|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n      comment: [{\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      }, {\n        pattern: /(^|[^\\\\:])'.*/,\n        lookbehind: true\n      }]\n    });\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/languages/languages/vbnet.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/vbnet.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'typescript',\n  init: function init(Prism) {\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\n      // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n      keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|module|declare|constructor|namespace|abstract|require|type)\\b/,\n      builtin: /\\b(?:string|Function|any|number|boolean|Array|symbol|console)\\b/\n    });\n\n    Prism.languages.ts = Prism.languages.typescript;\n  }\n};","nrTokens":0,"nrLines":17,"files":[{"filePath":"node_modules/reprism/languages/languages/typescript.js","startLine":1,"endLine":17},{"filePath":"node_modules/reprism/lib/languages/typescript.js","startLine":1,"endLine":17}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'twig',\n  init: function init(Prism) {\n    Prism.languages.twig = {\n      comment: /\\{#[\\s\\S]*?#\\}/,\n      tag: {\n        pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n        inside: {\n          ld: {\n            pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n            inside: {\n              punctuation: /^(?:\\{\\{|\\{%)-?/,\n              keyword: /\\w+/\n            }\n          },\n          rd: {\n            pattern: /-?(?:%\\}|\\}\\})$/,\n            inside: {\n              punctuation: /.*/\n            }\n          },\n          string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            inside: {\n              punctuation: /^['\"]|['\"]$/\n            }\n          },\n          keyword: /\\b(?:even|if|odd)\\b/,\n          boolean: /\\b(?:true|false|null)\\b/,\n          number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n          operator: [{\n            pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n            lookbehind: true\n          }, /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],\n          property: /\\b[a-zA-Z_]\\w*\\b/,\n          punctuation: /[()\\[\\]{}:.,]/\n        }\n      },\n\n      // The rest can be parsed as HTML\n      other: {\n        // We want non-blank matches\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        inside: Prism.languages.markup\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":53,"files":[{"filePath":"node_modules/reprism/languages/languages/twig.js","startLine":1,"endLine":53},{"filePath":"node_modules/reprism/lib/languages/twig.js","startLine":1,"endLine":53}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'tsx',\n  init: function init(Prism) {\n    var typescript = Prism.util.clone(Prism.languages.typescript);\n    Prism.languages.tsx = Prism.languages.extend('jsx', typescript);\n  }\n};","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/reprism/languages/languages/tsx.js","startLine":1,"endLine":12},{"filePath":"node_modules/reprism/lib/languages/tsx.js","startLine":1,"endLine":12}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'textile',\n  init: function init(Prism) {\n    (function (Prism) {\n      // We don't allow for pipes inside parentheses\n      // to not break table pattern |(. foo |). bar |\n      var modifierRegex = '(?:\\\\([^|)]+\\\\)|\\\\[[^\\\\]]+\\\\]|\\\\{[^}]+\\\\})+';\n      var modifierTokens = {\n        css: {\n          pattern: /\\{[^}]+\\}/,\n          inside: {\n            rest: Prism.languages.css\n          }\n        },\n        'class-id': {\n          pattern: /(\\()[^)]+(?=\\))/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        lang: {\n          pattern: /(\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n        punctuation: /[\\\\\\/]\\d+|\\S/\n      };\n\n      Prism.languages.textile = Prism.languages.extend('markup', {\n        phrase: {\n          pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n          lookbehind: true,\n          inside: {\n            // h1. Header 1\n            'block-tag': {\n              pattern: RegExp('^[a-z]\\\\w*(?:' + modifierRegex + '|[<>=()])*\\\\.'),\n              inside: {\n                modifier: {\n                  pattern: RegExp('(^[a-z]\\\\w*)(?:' + modifierRegex + '|[<>=()])+(?=\\\\.)'),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                tag: /^[a-z]\\w*/,\n                punctuation: /\\.$/\n              }\n            },\n\n            // # List item\n            // * List item\n            list: {\n              pattern: RegExp('^[*#]+(?:' + modifierRegex + ')?\\\\s+.+', 'm'),\n              inside: {\n                modifier: {\n                  pattern: RegExp('(^[*#]+)' + modifierRegex),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                punctuation: /^[*#]+/\n              }\n            },\n\n            // | cell | cell | cell |\n            table: {\n              // Modifiers can be applied to the row: {color:red}.|1|2|3|\n              // or the cell: |{color:red}.1|2|3|\n              pattern: RegExp('^(?:(?:' + modifierRegex + '|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|', 'm'),\n              inside: {\n                modifier: {\n                  // Modifiers for rows after the first one are\n                  // preceded by a pipe and a line feed\n                  pattern: RegExp('(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)'),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                punctuation: /\\||^\\./\n              }\n            },\n\n            inline: {\n              pattern: RegExp('(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:' + modifierRegex + ')?.+?\\\\1'),\n              inside: {\n                // Note: superscripts and subscripts are not handled specifically\n\n                // *bold*, **bold**\n                bold: {\n                  pattern: RegExp('(^(\\\\*\\\\*?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n                  lookbehind: true\n                },\n\n                // _italic_, __italic__\n                italic: {\n                  pattern: RegExp('(^(__?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n                  lookbehind: true\n                },\n\n                // ??cite??\n                cite: {\n                  pattern: RegExp('(^\\\\?\\\\?(?:' + modifierRegex + ')?).+?(?=\\\\?\\\\?)'),\n                  lookbehind: true,\n                  alias: 'string'\n                },\n\n                // @code@\n                code: {\n                  pattern: RegExp('(^@(?:' + modifierRegex + ')?).+?(?=@)'),\n                  lookbehind: true,\n                  alias: 'keyword'\n                },\n\n                // +inserted+\n                inserted: {\n                  pattern: RegExp('(^\\\\+(?:' + modifierRegex + ')?).+?(?=\\\\+)'),\n                  lookbehind: true\n                },\n\n                // -deleted-\n                deleted: {\n                  pattern: RegExp('(^-(?:' + modifierRegex + ')?).+?(?=-)'),\n                  lookbehind: true\n                },\n\n                // %span%\n                span: {\n                  pattern: RegExp('(^%(?:' + modifierRegex + ')?).+?(?=%)'),\n                  lookbehind: true\n                },\n\n                modifier: {\n                  pattern: RegExp('(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])' + modifierRegex),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                punctuation: /[*_%?@+\\-^~]+/\n              }\n            },\n\n            // [alias]http://example.com\n            'link-ref': {\n              pattern: /^\\[[^\\]]+\\]\\S+$/m,\n              inside: {\n                string: {\n                  pattern: /(\\[)[^\\]]+(?=\\])/,\n                  lookbehind: true\n                },\n                url: {\n                  pattern: /(\\])\\S+$/,\n                  lookbehind: true\n                },\n                punctuation: /[\\[\\]]/\n              }\n            },\n\n            // \"text\":http://example.com\n            // \"text\":link-ref\n            link: {\n              pattern: RegExp('\"(?:' + modifierRegex + ')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'),\n              inside: {\n                text: {\n                  pattern: RegExp('(^\"(?:' + modifierRegex + ')?)[^\"]+(?=\")'),\n                  lookbehind: true\n                },\n                modifier: {\n                  pattern: RegExp('(^\")' + modifierRegex),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                url: {\n                  pattern: /(:).+/,\n                  lookbehind: true\n                },\n                punctuation: /[\":]/\n              }\n            },\n\n            // !image.jpg!\n            // !image.jpg(Title)!:http://example.com\n            image: {\n              pattern: RegExp('!(?:' + modifierRegex + '|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?'),\n              inside: {\n                source: {\n                  pattern: RegExp('(^!(?:' + modifierRegex + '|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)'),\n                  lookbehind: true,\n                  alias: 'url'\n                },\n                modifier: {\n                  pattern: RegExp('(^!)(?:' + modifierRegex + '|[<>=()])+'),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                url: {\n                  pattern: /(:).+/,\n                  lookbehind: true\n                },\n                punctuation: /[!:]/\n              }\n            },\n\n            // Footnote[1]\n            footnote: {\n              pattern: /\\b\\[\\d+\\]/,\n              alias: 'comment',\n              inside: {\n                punctuation: /\\[|\\]/\n              }\n            },\n\n            // CSS(Cascading Style Sheet)\n            acronym: {\n              pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n              inside: {\n                comment: {\n                  pattern: /(\\()[^)]+(?=\\))/,\n                  lookbehind: true\n                },\n                punctuation: /[()]/\n              }\n            },\n\n            // Prism(C)\n            mark: {\n              pattern: /\\b\\((?:TM|R|C)\\)/,\n              alias: 'comment',\n              inside: {\n                punctuation: /[()]/\n              }\n            }\n          }\n        }\n      });\n\n      var nestedPatterns = {\n        inline: Prism.languages.textile.phrase.inside.inline,\n        link: Prism.languages.textile.phrase.inside.link,\n        image: Prism.languages.textile.phrase.inside.image,\n        footnote: Prism.languages.textile.phrase.inside.footnote,\n        acronym: Prism.languages.textile.phrase.inside.acronym,\n        mark: Prism.languages.textile.phrase.inside.mark\n\n        // Only allow alpha-numeric HTML tags, not XML tags\n      };Prism.languages.textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n      // Allow some nesting\n      Prism.languages.textile.phrase.inside.inline.inside.bold.inside = nestedPatterns;\n      Prism.languages.textile.phrase.inside.inline.inside.italic.inside = nestedPatterns;\n      Prism.languages.textile.phrase.inside.inline.inside.inserted.inside = nestedPatterns;\n      Prism.languages.textile.phrase.inside.inline.inside.deleted.inside = nestedPatterns;\n      Prism.languages.textile.phrase.inside.inline.inside.span.inside = nestedPatterns;\n\n      // Allow some styles inside table cells\n      Prism.languages.textile.phrase.inside.table.inside.inline = nestedPatterns.inline;\n      Prism.languages.textile.phrase.inside.table.inside.link = nestedPatterns.link;\n      Prism.languages.textile.phrase.inside.table.inside.image = nestedPatterns.image;\n      Prism.languages.textile.phrase.inside.table.inside.footnote = nestedPatterns.footnote;\n      Prism.languages.textile.phrase.inside.table.inside.acronym = nestedPatterns.acronym;\n      Prism.languages.textile.phrase.inside.table.inside.mark = nestedPatterns.mark;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":263,"files":[{"filePath":"node_modules/reprism/languages/languages/textile.js","startLine":1,"endLine":263},{"filePath":"node_modules/reprism/lib/languages/textile.js","startLine":1,"endLine":263}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'tcl',\n  init: function init(Prism) {\n    Prism.languages.tcl = {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n        greedy: true\n      },\n      variable: [{\n        pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n        lookbehind: true\n      }, {\n        pattern: /(\\$){[^}]+}/,\n        lookbehind: true\n      }, {\n        pattern: /(^\\s*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n        lookbehind: true\n      }],\n      function: {\n        pattern: /(^\\s*proc[ \\t]+)[^\\s]+/m,\n        lookbehind: true\n      },\n      builtin: [{\n        pattern: /(^\\s*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,\n        lookbehind: true\n      }, /\\b(?:elseif|else)\\b/],\n      scope: {\n        pattern: /(^\\s*)(?:global|upvar|variable)\\b/m,\n        lookbehind: true,\n        alias: 'constant'\n      },\n      keyword: {\n        pattern: /(^\\s*|\\[)(?:after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n        lookbehind: true\n      },\n      operator: /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,\n      punctuation: /[{}()\\[\\]]/\n    };\n  }\n};","nrTokens":0,"nrLines":49,"files":[{"filePath":"node_modules/reprism/languages/languages/tcl.js","startLine":1,"endLine":49},{"filePath":"node_modules/reprism/lib/languages/tcl.js","startLine":1,"endLine":49}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'swift',\n  init: function init(Prism) {\n    // issues: nested multiline comments\n    Prism.languages.swift = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n            inside: {\n              delimiter: {\n                pattern: /^\\\\\\(|\\)$/,\n                alias: 'variable'\n              }\n              // See rest below\n            }\n          }\n        }\n      },\n      keyword: /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|Protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n      number: /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n      constant: /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n      atrule: /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n      builtin: /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n    });\n    Prism.languages.swift.string.inside.interpolation.inside.rest = Prism.languages.swift;\n  }\n};","nrTokens":0,"nrLines":35,"files":[{"filePath":"node_modules/reprism/languages/languages/swift.js","startLine":1,"endLine":35},{"filePath":"node_modules/reprism/lib/languages/swift.js","startLine":1,"endLine":35}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'stylus',\n  init: function init(Prism) {\n    (function (Prism) {\n      var inside = {\n        url: /url\\(([\"']?).*?\\1\\)/i,\n        string: {\n          pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n          greedy: true\n        },\n        interpolation: null, // See below\n        func: null, // See below\n        important: /\\B!(?:important|optional)\\b/i,\n        keyword: {\n          pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n          lookbehind: true\n        },\n        hexcode: /#[\\da-f]{3,6}/i,\n        number: /\\b\\d+(?:\\.\\d+)?%?/,\n        boolean: /\\b(?:true|false)\\b/,\n        operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n        punctuation: /[{}()\\[\\];:,]/\n      };\n\n      inside.interpolation = {\n        pattern: /\\{[^\\r\\n}:]+\\}/,\n        alias: 'variable',\n        inside: {\n          delimiter: {\n            pattern: /^{|}$/,\n            alias: 'punctuation'\n          },\n          rest: inside\n        }\n      };\n      inside.func = {\n        pattern: /[\\w-]+\\([^)]*\\).*/,\n        inside: {\n          function: /^[^(]+/,\n          rest: inside\n        }\n      };\n\n      Prism.languages.stylus = {\n        comment: {\n          pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n          lookbehind: true\n        },\n        'atrule-declaration': {\n          pattern: /(^\\s*)@.+/m,\n          lookbehind: true,\n          inside: {\n            atrule: /^@[\\w-]+/,\n            rest: inside\n          }\n        },\n        'variable-declaration': {\n          pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n          lookbehind: true,\n          inside: {\n            variable: /^\\S+/,\n            rest: inside\n          }\n        },\n\n        statement: {\n          pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\S+/,\n            rest: inside\n          }\n        },\n\n        // A property/value pair cannot end with a comma or a brace\n        // It cannot have indented content unless it ended with a semicolon\n        'property-declaration': {\n          pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n          lookbehind: true,\n          inside: {\n            property: {\n              pattern: /^[^\\s:]+/,\n              inside: {\n                interpolation: inside.interpolation\n              }\n            },\n            rest: inside\n          }\n        },\n\n        // A selector can contain parentheses only as part of a pseudo-element\n        // It can span multiple lines.\n        // It must end with a comma or an accolade or have indented content.\n        selector: {\n          pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n          lookbehind: true,\n          inside: {\n            interpolation: inside.interpolation,\n            punctuation: /[{},]/\n          }\n        },\n\n        func: inside.func,\n        string: inside.string,\n        interpolation: inside.interpolation,\n        punctuation: /[{}()\\[\\];:.]/\n      };\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":118,"files":[{"filePath":"node_modules/reprism/languages/languages/stylus.js","startLine":1,"endLine":118},{"filePath":"node_modules/reprism/lib/languages/stylus.js","startLine":1,"endLine":118}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'soy',\n  init: function init(Prism) {\n    (function (Prism) {\n      var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n      var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n\n      Prism.languages.soy = {\n        comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }],\n        'command-arg': {\n          pattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        parameter: {\n          pattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n          lookbehind: true,\n          alias: 'variable'\n        },\n        keyword: [{\n          pattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        }, /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/],\n        delimiter: {\n          pattern: /^{+\\/?|\\/?}+$/,\n          alias: 'punctuation'\n        },\n        property: /\\w+(?==)/,\n        variable: {\n          pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n          inside: {\n            string: {\n              pattern: stringPattern,\n              greedy: true\n            },\n            number: numberPattern,\n            punctuation: /[\\[\\].?]/\n          }\n        },\n        string: {\n          pattern: stringPattern,\n          greedy: true\n        },\n        function: [/\\w+(?=\\()/, {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }],\n        boolean: /\\b(?:true|false)\\b/,\n        number: numberPattern,\n        operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n        punctuation: /[{}()\\[\\]|.,:]/\n\n        // Tokenize all inline Soy expressions\n      };Prism.hooks.add('before-tokenize', function (env) {\n        var soyPattern = /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g;\n        var soyLitteralStart = '{literal}';\n        var soyLitteralEnd = '{/literal}';\n        var soyLitteralMode = false;\n\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'soy', soyPattern, function (match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false;\n          }\n\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true;\n            }\n\n            return true;\n          }\n          return false;\n        });\n      });\n\n      // Re-insert the tokens after tokenizing\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":95,"files":[{"filePath":"node_modules/reprism/languages/languages/soy.js","startLine":1,"endLine":95},{"filePath":"node_modules/reprism/lib/languages/soy.js","startLine":1,"endLine":95}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'smarty',\n  init: function init(Prism) {\n    /* TODO\n    Add support for variables inside double quoted strings\n    Add support for {php}\n    */\n\n    (function (Prism) {\n      Prism.languages.smarty = {\n        comment: /\\{\\*[\\s\\S]*?\\*\\}/,\n        delimiter: {\n          pattern: /^\\{|\\}$/i,\n          alias: 'punctuation'\n        },\n        string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        variable: [/\\$(?!\\d)\\w+/, /#(?!\\d)\\w+#/, {\n          pattern: /(\\.|->)(?!\\d)\\w+/,\n          lookbehind: true\n        }, {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }],\n        function: [{\n          pattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n          lookbehind: true\n        }, /^\\/?(?!\\d)\\w+/, /(?!\\d)\\w+(?=\\()/],\n        'attr-name': {\n          // Value is made optional because it may have already been tokenized\n          pattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n          inside: {\n            variable: {\n              pattern: /(=\\s*)(?!\\d)\\w+/,\n              lookbehind: true\n            },\n            operator: /=/\n          }\n        },\n        punctuation: [/[\\[\\]().,:`]|->/],\n        operator: [/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/, /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/, /\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/],\n        keyword: /\\b(?:false|off|on|no|true|yes)\\b/\n\n        // Comments are inserted at top so that they can\n        // surround markup\n      };Prism.languages.insertBefore('smarty', 'tag', {\n        'smarty-comment': {\n          pattern: /\\{\\*[\\s\\S]*?\\*\\}/,\n          alias: ['smarty', 'comment']\n        }\n      });\n\n      // Tokenize all inline Smarty expressions\n      Prism.hooks.add('before-tokenize', function (env) {\n        var smartyPattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g;\n        var smartyLitteralStart = '{literal}';\n        var smartyLitteralEnd = '{/literal}';\n        var smartyLitteralMode = false;\n\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'smarty', smartyPattern, function (match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLitteralEnd) {\n            smartyLitteralMode = false;\n          }\n\n          if (!smartyLitteralMode) {\n            if (match === smartyLitteralStart) {\n              smartyLitteralMode = true;\n            }\n\n            return true;\n          }\n          return false;\n        });\n      });\n\n      // Re-insert the tokens after tokenizing\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":88,"files":[{"filePath":"node_modules/reprism/languages/languages/smarty.js","startLine":1,"endLine":88},{"filePath":"node_modules/reprism/lib/languages/smarty.js","startLine":1,"endLine":88}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'smalltalk',\n  init: function init(Prism) {\n    Prism.languages.smalltalk = {\n      comment: /\"(?:\"\"|[^\"])+\"/,\n      string: /'(?:''|[^'])+'/,\n      symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n      'block-arguments': {\n        pattern: /(\\[\\s*):[^\\[|]*\\|/,\n        lookbehind: true,\n        inside: {\n          variable: /:[\\da-z]+/i,\n          punctuation: /\\|/\n        }\n      },\n      'temporary-variables': {\n        pattern: /\\|[^|]+\\|/,\n        inside: {\n          variable: /[\\da-z]+/i,\n          punctuation: /\\|/\n        }\n      },\n      keyword: /\\b(?:nil|true|false|self|super|new)\\b/,\n      character: {\n        pattern: /\\$./,\n        alias: 'string'\n      },\n      number: [/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/, /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/],\n      operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n      punctuation: /[.;:?\\[\\](){}]/\n    };\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/languages/languages/smalltalk.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/smalltalk.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'scss',\n  init: function init(Prism) {\n    Prism.languages.scss = Prism.languages.extend('css', {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      atrule: {\n        pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n        inside: {\n          rule: /@[\\w-]+/\n          // See rest below\n        }\n      },\n      // url, compassified\n      url: /(?:[-a-z]+-)*url(?=\\()/i,\n      // CSS selector regex is not appropriate for Sass\n      // since there can be lot more things (var, @ directive, nesting..)\n      // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n      // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n      // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n      // can \"pass\" as a selector- e.g: proper#{$erty})\n      // this one was hard to do, so please be careful if you edit this one :)\n      selector: {\n        // Initial look-ahead is used to prevent matching of blank selectors\n        pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n        inside: {\n          parent: {\n            pattern: /&/,\n            alias: 'important'\n          },\n          placeholder: /%[-\\w]+/,\n          variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n        }\n      }\n    });\n\n    Prism.languages.insertBefore('scss', 'atrule', {\n      keyword: [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n        pattern: /( +)(?:from|through)(?= )/,\n        lookbehind: true\n      }]\n    });\n\n    Prism.languages.scss.property = {\n      pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    };\n\n    Prism.languages.insertBefore('scss', 'important', {\n      // var and interpolated vars\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    });\n\n    Prism.languages.insertBefore('scss', 'function', {\n      placeholder: {\n        pattern: /%[-\\w]+/,\n        alias: 'selector'\n      },\n      statement: {\n        pattern: /\\B!(?:default|optional)\\b/i,\n        alias: 'keyword'\n      },\n      boolean: /\\b(?:true|false)\\b/,\n      null: /\\bnull\\b/,\n      operator: {\n        pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n        lookbehind: true\n      }\n    });\n\n    Prism.languages.scss.atrule.inside.rest = Prism.languages.scss;\n  }\n};","nrTokens":0,"nrLines":82,"files":[{"filePath":"node_modules/reprism/languages/languages/scss.js","startLine":1,"endLine":82},{"filePath":"node_modules/reprism/lib/languages/scss.js","startLine":1,"endLine":82}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'scheme',\n  init: function init(Prism) {\n    Prism.languages.scheme = {\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'[^('\\s]*/,\n        greedy: true\n      },\n      keyword: {\n        pattern: /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)/,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)/,\n        lookbehind: true\n      },\n      number: {\n        pattern: /(\\s|[()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\n        lookbehind: true\n      },\n      boolean: /#[tf]/,\n      operator: {\n        pattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(\\()[^\\s()]*(?=\\s)/,\n        lookbehind: true\n      },\n      punctuation: /[()]/\n    };\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/languages/languages/scheme.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/scheme.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'scala',\n  init: function init(Prism) {\n    Prism.languages.scala = Prism.languages.extend('java', {\n      keyword: /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n      string: [{\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      }, {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }],\n      builtin: /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n      number: /\\b0x[\\da-f]*\\.?[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n      symbol: /'[^\\d\\s\\\\]\\w*/\n    });\n    delete Prism.languages.scala['class-name'];\n    delete Prism.languages.scala.function;\n  }\n};","nrTokens":0,"nrLines":25,"files":[{"filePath":"node_modules/reprism/languages/languages/scala.js","startLine":1,"endLine":25},{"filePath":"node_modules/reprism/lib/languages/scala.js","startLine":1,"endLine":25}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'sass',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.sass = Prism.languages.extend('css', {\n        // Sass comments don't need to be closed, only indented\n        comment: {\n          pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n          lookbehind: true\n        }\n      });\n\n      Prism.languages.insertBefore('sass', 'atrule', {\n        // We want to consume the whole line\n        'atrule-line': {\n          // Includes support for = and + shortcuts\n          pattern: /^(?:[ \\t]*)[@+=].+/m,\n          inside: {\n            atrule: /(?:@[\\w-]+|[+=])/m\n          }\n        }\n      });\n      delete Prism.languages.sass.atrule;\n\n      var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n      var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n        pattern: /(\\s+)-(?=\\s)/,\n        lookbehind: true\n      }];\n\n      Prism.languages.insertBefore('sass', 'property', {\n        // We want to consume the whole line\n        'variable-line': {\n          pattern: /^[ \\t]*\\$.+/m,\n          inside: {\n            punctuation: /:/,\n            variable: variable,\n            operator: operator\n          }\n        },\n        // We want to consume the whole line\n        'property-line': {\n          pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n          inside: {\n            property: [/[^:\\s]+(?=\\s*:)/, {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }],\n            punctuation: /:/,\n            variable: variable,\n            operator: operator,\n            important: Prism.languages.sass.important\n          }\n        }\n      });\n      delete Prism.languages.sass.property;\n      delete Prism.languages.sass.important;\n\n      // Now that whole lines for other patterns are consumed,\n      // what's left should be selectors\n      delete Prism.languages.sass.selector;\n      Prism.languages.insertBefore('sass', 'punctuation', {\n        selector: {\n          pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n          lookbehind: true\n        }\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":75,"files":[{"filePath":"node_modules/reprism/languages/languages/sass.js","startLine":1,"endLine":75},{"filePath":"node_modules/reprism/lib/languages/sass.js","startLine":1,"endLine":75}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'sas',\n  init: function init(Prism) {\n    Prism.languages.sas = {\n      datalines: {\n        pattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,\n        alias: 'string',\n        inside: {\n          keyword: {\n            pattern: /^(\\s*)(?:(?:data)?lines|cards)/i,\n            lookbehind: true\n          },\n          punctuation: /;/\n        }\n      },\n      comment: [{\n        pattern: /(^\\s*|;\\s*)\\*.*;/m,\n        lookbehind: true\n      }, /\\/\\*[\\s\\S]+?\\*\\//],\n      datetime: {\n        // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n        pattern: /'[^']+'(?:dt?|t)\\b/i,\n        alias: 'number'\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n        greedy: true\n      },\n      keyword: /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then)\\b/i,\n      // Decimal (1.2e23), hexadecimal (0c1x)\n      number: /\\b(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,\n      operator: /\\*\\*?|\\|\\|?|!!?|?????|<[>=]?|>[<=]?|[-+\\/=&]|[~??^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n      punctuation: /[$%@.(){}\\[\\];,\\\\]/\n    };\n  }\n};","nrTokens":0,"nrLines":41,"files":[{"filePath":"node_modules/reprism/languages/languages/sas.js","startLine":1,"endLine":41},{"filePath":"node_modules/reprism/lib/languages/sas.js","startLine":1,"endLine":41}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'rust',\n  init: function init(Prism) {\n    /* TODO\n    Add support for Markdown notation inside doc comments\n    Add support for nested block comments...\n    Match closure params even when not followed by dash or brace\n    Add better support for macro definition\n    */\n\n    Prism.languages.rust = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true\n      }],\n      string: [{\n        pattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\n        greedy: true\n      }, {\n        pattern: /b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      }],\n      char: {\n        pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,\n        alias: 'string'\n      },\n      'lifetime-annotation': {\n        pattern: /'[^\\s>']+/,\n        alias: 'symbol'\n      },\n      keyword: /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n\n      attribute: {\n        pattern: /#!?\\[.+?\\]/,\n        greedy: true,\n        alias: 'attr-name'\n      },\n\n      function: [/\\w+(?=\\s*\\()/,\n      // Macros can use parens or brackets\n      /\\w+!(?=\\s*\\(|\\[)/],\n      'macro-rules': {\n        pattern: /\\w+!/,\n        alias: 'function'\n      },\n\n      // Hex, oct, bin, dec numbers with visual separators and type suffix\n      number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\n\n      // Closure params should not be confused with bitwise OR |\n      'closure-params': {\n        pattern: /\\|[^|]*\\|(?=\\s*[{-])/,\n        inside: {\n          punctuation: /[|:,]/,\n          operator: /[&*]/\n        }\n      },\n      punctuation: /[{}[\\];(),:]|\\.+|->/,\n      operator: /[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\n    };\n  }\n};","nrTokens":0,"nrLines":70,"files":[{"filePath":"node_modules/reprism/languages/languages/rust.js","startLine":1,"endLine":70},{"filePath":"node_modules/reprism/lib/languages/rust.js","startLine":1,"endLine":70}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ruby',\n  init: function init(Prism) {\n    /**\n     * Original by Samuel Flores\n     *\n     * Adds the following new token classes:\n     * \t\tconstant, builtin, variable, symbol, regex\n     */\n    (function (Prism) {\n      Prism.languages.ruby = Prism.languages.extend('clike', {\n        comment: [/#.*/, {\n          pattern: /^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end/m,\n          greedy: true\n        }],\n        keyword: /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n      });\n\n      var interpolation = {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'tag'\n          },\n          rest: Prism.languages.ruby\n        }\n      };\n\n      Prism.languages.insertBefore('ruby', 'keyword', {\n        regex: [{\n          pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          // Here we need to specifically allow interpolation\n          pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n          lookbehind: true,\n          greedy: true\n        }],\n        variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n        symbol: {\n          pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n          lookbehind: true\n        }\n      });\n\n      Prism.languages.insertBefore('ruby', 'number', {\n        builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n        constant: /\\b[A-Z]\\w*(?:[?!]|\\b)/\n      });\n\n      Prism.languages.ruby.string = [{\n        pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        // Here we need to specifically allow interpolation\n        pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }];\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":124,"files":[{"filePath":"node_modules/reprism/languages/languages/ruby.js","startLine":1,"endLine":124},{"filePath":"node_modules/reprism/lib/languages/ruby.js","startLine":1,"endLine":124}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'roboconf',\n  init: function init(Prism) {\n    Prism.languages.roboconf = {\n      comment: /#.*/,\n      keyword: {\n        pattern: /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,\n        lookbehind: true\n      },\n      component: {\n        pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n        alias: 'variable'\n      },\n      property: /[\\w.-]+(?=[ \\t]*:)/,\n      value: {\n        pattern: /(=[ \\t]*)[^,;]+/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      optional: {\n        pattern: /\\(optional\\)/,\n        alias: 'builtin'\n      },\n      wildcard: {\n        pattern: /(\\.)\\*/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      punctuation: /[{},.;:=]/\n    };\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/languages/languages/roboconf.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/roboconf.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'rip',\n  init: function init(Prism) {\n    Prism.languages.rip = {\n      comment: /#.*/,\n\n      keyword: /(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,\n\n      builtin: /@|\\bSystem\\b/,\n\n      boolean: /\\b(?:true|false)\\b/,\n\n      date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n      time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n      datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n\n      character: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n\n      regex: {\n        pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/(?=\\s*($|[\\r\\n,.;})]))/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      number: /[+-]?(?:(?:\\d+\\.\\d+)|(?:\\d+))/,\n\n      punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n\n      reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n    };\n  }\n};","nrTokens":0,"nrLines":42,"files":[{"filePath":"node_modules/reprism/languages/languages/rip.js","startLine":1,"endLine":42},{"filePath":"node_modules/reprism/lib/languages/rip.js","startLine":1,"endLine":42}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'rest',\n  init: function init(Prism) {\n    Prism.languages.rest = {\n      table: [{\n        pattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      }, {\n        pattern: /(\\s*)(?:=+ +)+=+(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }],\n\n      // Directive-like patterns\n\n      'substitution-def': {\n        pattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n        lookbehind: true,\n        inside: {\n          substitution: {\n            pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n            alias: 'attr-value',\n            inside: {\n              punctuation: /^\\||\\|$/\n            }\n          },\n          directive: {\n            pattern: /( +)[^:]+::/,\n            lookbehind: true,\n            alias: 'function',\n            inside: {\n              punctuation: /::$/\n            }\n          }\n        }\n      },\n      'link-target': [{\n        pattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      }, {\n        pattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }],\n      directive: {\n        pattern: /(^\\s*\\.\\. )[^:]+::/m,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          punctuation: /::$/\n        }\n      },\n      comment: {\n        // The two alternatives try to prevent highlighting of blank comments\n        pattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n        lookbehind: true\n      },\n\n      title: [\n      // Overlined and underlined\n      {\n        pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      },\n\n      // Underlined only\n      {\n        pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }],\n      hr: {\n        pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      field: {\n        pattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n        lookbehind: true,\n        alias: 'attr-name'\n      },\n      'command-line-option': {\n        pattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'literal-block': {\n        pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n        inside: {\n          'literal-block-punctuation': {\n            pattern: /^::/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      'quoted-literal-block': {\n        pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n        inside: {\n          'literal-block-punctuation': {\n            pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n            alias: 'punctuation'\n          }\n        }\n      },\n      'list-bullet': {\n        pattern: /(^\\s*)(?:[*+\\-?????????]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'doctest-block': {\n        pattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /^>>>/\n        }\n      },\n\n      inline: [{\n        pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }],\n\n      link: [{\n        pattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      }, {\n        pattern: /(?:\\b[a-z\\d](?:[_.:+]?[a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }],\n\n      // Line block start,\n      // quote attribution,\n      // explicit markup start,\n      // and anonymous hyperlink target shortcut (__)\n      punctuation: {\n        pattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|???|\\.\\.|__)(?= )|\\.\\.$)/m,\n        lookbehind: true\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":203,"files":[{"filePath":"node_modules/reprism/languages/languages/rest.js","startLine":1,"endLine":203},{"filePath":"node_modules/reprism/lib/languages/rest.js","startLine":1,"endLine":203}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'renpy',\n  init: function init(Prism) {\n    Prism.languages.renpy = {\n      // TODO Write tests.\n\n      comment: {\n        pattern: /(^|[^\\\\])#.+/,\n        lookbehind: true\n      },\n\n      string: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2|(?:^#?(?:(?:[0-9a-fA-F]{2}){3}|(?:[0-9a-fA-F]){3})$)/m,\n        greedy: true\n      },\n\n      function: /[a-z_]\\w*(?=\\()/i,\n\n      property: /\\b(?:insensitive|idle|hover|selected_idle|selected_hover|background|position|alt|xpos|ypos|pos|xanchor|yanchor|anchor|xalign|yalign|align|xcenter|ycenter|xofsset|yoffset|ymaximum|maximum|xmaximum|xminimum|yminimum|minimum|xsize|ysizexysize|xfill|yfill|area|antialias|black_color|bold|caret|color|first_indent|font|size|italic|justify|kerning|language|layout|line_leading|line_overlap_split|line_spacing|min_width|newline_indent|outlines|rest_indent|ruby_style|slow_cps|slow_cps_multiplier|strikethrough|text_align|underline|hyperlink_functions|vertical|hinting|foreground|left_margin|xmargin|top_margin|bottom_margin|ymargin|left_padding|right_padding|xpadding|top_padding|bottom_padding|ypadding|size_group|child|hover_sound|activate_sound|mouse|focus_mask|keyboard_focus|bar_vertical|bar_invert|bar_resizing|left_gutter|right_gutter|top_gutter|bottom_gutter|left_bar|right_bar|top_bar|bottom_bar|thumb|thumb_shadow|thumb_offset|unscrollable|spacing|first_spacing|box_reverse|box_wrap|order_reverse|fit_first|ysize|thumbnail_width|thumbnail_height|help|text_ypos|text_xpos|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|alpha|insensitive_background|hover_background|zorder|value|width|xadjustment|xanchoraround|xaround|xinitial|xoffset|xzoom|yadjustment|yanchoraround|yaround|yinitial|yzoom|zoom|ground|height|text_style|text_y_fudge|selected_insensitive|has_sound|has_music|has_voice|focus|hovered|image_style|length|minwidth|mousewheel|offset|prefix|radius|range|right_margin|rotate|rotate_pad|developer|screen_width|screen_height|window_title|name|version|windows_icon|default_fullscreen|default_text_cps|default_afm_time|main_menu_music|sample_sound|enter_sound|exit_sound|save_directory|enter_transition|exit_transition|intra_transition|main_game_transition|game_main_transition|end_splash_transition|end_game_transition|after_load_transition|window_show_transition|window_hide_transition|adv_nvl_transition|nvl_adv_transition|enter_yesno_transition|exit_yesno_transition|enter_replay_transition|exit_replay_transition|say_attribute_transition|directory_name|executable_name|include_update|window_icon|modal|google_play_key|google_play_salt|drag_name|drag_handle|draggable|dragged|droppable|dropped|narrator_menu|action|default_afm_enable|version_name|version_tuple|inside|fadeout|fadein|layers|layer_clipping|linear|scrollbars|side_xpos|side_ypos|side_spacing|edgescroll|drag_joined|drag_raise|drop_shadow|drop_shadow_color|subpixel|easein|easeout|time|crop|auto|update|get_installed_packages|can_update|UpdateVersion|Update|overlay_functions|translations|window_left_padding|show_side_image|show_two_window)\\b/,\n\n      tag: /\\b(?:label|image|menu|[hv]box|frame|text|imagemap|imagebutton|bar|vbar|screen|textbutton|buttoscreenn|fixed|grid|input|key|mousearea|side|timer|viewport|window|hotspot|hotbar|self|button|drag|draggroup|tag|mm_menu_frame|nvl|block|parallel)\\b|\\$/,\n\n      keyword: /\\b(?:as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|yield|adjustment|alignaround|allow|angle|around|box_layout|cache|changed|child_size|clicked|clipping|corner1|corner2|default|delay|exclude|scope|slow|slow_abortable|slow_done|sound|style_group|substitute|suffix|transform_anchor|transpose|unhovered|config|theme|mm_root|gm_root|rounded_window|build|disabled_text|disabled|widget_selected|widget_text|widget_hover|widget|updater|behind|call|expression|hide|init|jump|onlayer|python|renpy|scene|set|show|transform|play|queue|stop|pause|define|window|repeat|contains|choice|on|function|event|animation|clockwise|counterclockwise|circles|knot|null|None|random|has|add|use|fade|dissolve|style|store|id|voice|center|left|right|less_rounded|music|movie|clear|persistent|ui)\\b/,\n\n      boolean: /\\b(?:[Tt]rue|[Ff]alse)\\b/,\n\n      number: /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at)\\b/,\n\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/languages/languages/renpy.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/renpy.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'reason',\n  init: function init(Prism) {\n    Prism.languages.reason = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      // 'class-name' must be matched *after* 'constructor' defined below\n      'class-name': /\\b[A-Z]\\w*/,\n      keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n      operator: /\\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n    });\n    Prism.languages.insertBefore('reason', 'class-name', {\n      character: {\n        pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n        alias: 'string'\n      },\n      constructor: {\n        // Negative look-ahead prevents from matching things like String.capitalize\n        pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n        alias: 'variable'\n      },\n      label: {\n        pattern: /\\b[a-z]\\w*(?=::)/,\n        alias: 'symbol'\n      }\n    });\n\n    // We can't match functions property, so let's not even try.\n    delete Prism.languages.reason.function;\n  }\n};","nrTokens":0,"nrLines":42,"files":[{"filePath":"node_modules/reprism/languages/languages/reason.js","startLine":1,"endLine":42},{"filePath":"node_modules/reprism/lib/languages/reason.js","startLine":1,"endLine":42}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'r',\n  init: function init(Prism) {\n    Prism.languages.r = {\n      comment: /#.*/,\n      string: {\n        pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      'percent-operator': {\n        // Includes user-defined operators\n        // and %%, %*%, %/%, %in%, %o%, %x%\n        pattern: /%[^%\\s]*%/,\n        alias: 'operator'\n      },\n      boolean: /\\b(?:TRUE|FALSE)\\b/,\n      ellipsis: /\\.\\.(?:\\.|\\d+)/,\n      number: [/\\b(?:NaN|Inf)\\b/, /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/],\n      keyword: /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n      operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n      punctuation: /[(){}\\[\\],;]/\n    };\n  }\n};","nrTokens":0,"nrLines":29,"files":[{"filePath":"node_modules/reprism/languages/languages/r.js","startLine":1,"endLine":29},{"filePath":"node_modules/reprism/lib/languages/r.js","startLine":1,"endLine":29}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'qore',\n  init: function init(Prism) {\n    Prism.languages.qore = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      // Overridden to allow unescaped multi-line strings\n      string: {\n        pattern: /(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      variable: /\\$(?!\\d)\\w+\\b/,\n      keyword: /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n      number: /\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,\n      boolean: /\\b(?:true|false)\\b/i,\n      operator: {\n        pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n        lookbehind: true\n      },\n      function: /\\$?\\b(?!\\d)\\w+(?=\\()/\n    });\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/languages/qore.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/qore.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'q',\n  init: function init(Prism) {\n    Prism.languages.q = {\n      string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      comment: [\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n      {\n        pattern: /([\\t )\\]}])\\/.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n      {\n        pattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n      {\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n        greedy: true\n      }, {\n        pattern: /^#!.+/m,\n        greedy: true\n      }],\n      symbol: /`(?::\\S+|[\\w.]*)/,\n      datetime: {\n        pattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n        alias: 'number'\n      },\n      // The negative look-ahead prevents bad highlighting\n      // of verbs 0: and 1:\n      number: /\\b(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\\da-fA-F]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?[hjfeb]?)/,\n      keyword: /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n      adverb: {\n        pattern: /['\\/\\\\]:?|\\beach\\b/,\n        alias: 'function'\n      },\n      verb: {\n        pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?_~=|$&#@^]):?/,\n        alias: 'operator'\n      },\n      punctuation: /[(){}\\[\\];.]/\n    };\n  }\n};","nrTokens":0,"nrLines":58,"files":[{"filePath":"node_modules/reprism/languages/languages/q.js","startLine":1,"endLine":58},{"filePath":"node_modules/reprism/lib/languages/q.js","startLine":1,"endLine":58}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'python',\n  init: function init(Prism) {\n    Prism.languages.python = {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      },\n      'triple-quoted-string': {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        greedy: true,\n        alias: 'string'\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      function: {\n        pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n        lookbehind: true\n      },\n      'class-name': {\n        pattern: /(\\bclass\\s+)\\w+/i,\n        lookbehind: true\n      },\n      keyword: /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,\n      builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n      boolean: /\\b(?:True|False|None)\\b/,\n      number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/languages/languages/python.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/python.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'pure',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.pure = {\n        comment: [{\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true\n        }, {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true\n        }, /#!.+/],\n        'inline-lang': {\n          pattern: /%<[\\s\\S]+?%>/,\n          greedy: true,\n          inside: {\n            lang: {\n              pattern: /(^%< *)-\\*-.+?-\\*-/,\n              lookbehind: true,\n              alias: 'comment'\n            },\n            delimiter: {\n              pattern: /^%<.*|%>$/,\n              alias: 'punctuation'\n            }\n          }\n        },\n        string: {\n          pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n          greedy: true\n        },\n        number: {\n          // The look-behind prevents wrong highlighting of the .. operator\n          pattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,\n          lookbehind: true\n        },\n        keyword: /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n        function: /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n        special: {\n          pattern: /\\b__[a-z]+__\\b/i,\n          alias: 'builtin'\n        },\n        // Any combination of operator chars can be an operator\n        operator: /(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,\n        // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n        punctuation: /[(){}\\[\\];,|]/\n      };\n\n      var inlineLanguages = ['c', { lang: 'c++', alias: 'cpp' }, 'fortran', 'ats', 'dsp'];\n      var inlineLanguageRe = '%< *-\\\\*- *{lang}\\\\d* *-\\\\*-[\\\\s\\\\S]+?%>';\n\n      inlineLanguages.forEach(function (lang) {\n        var alias = lang;\n        if (typeof lang !== 'string') {\n          alias = lang.alias;\n          lang = lang.lang;\n        }\n        if (Prism.languages[alias]) {\n          var o = {};\n          o['inline-lang-' + alias] = {\n            pattern: RegExp(inlineLanguageRe.replace('{lang}', lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')), 'i'),\n            inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n          };\n          o['inline-lang-' + alias].inside.rest = Prism.util.clone(Prism.languages[alias]);\n          Prism.languages.insertBefore('pure', 'inline-lang', o);\n        }\n      });\n\n      // C is the default inline language\n      if (Prism.languages.c) {\n        Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(Prism.languages.c);\n      }\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":80,"files":[{"filePath":"node_modules/reprism/languages/languages/pure.js","startLine":1,"endLine":80},{"filePath":"node_modules/reprism/lib/languages/pure.js","startLine":1,"endLine":80}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'puppet',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.puppet = {\n        heredoc: [\n        // Matches the content of a quoted heredoc string (subject to interpolation)\n        {\n          pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n            // See interpolation below\n          }\n        },\n        // Matches the content of an unquoted heredoc string (no interpolation)\n        {\n          pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n          }\n        },\n        // Matches the start tag of heredoc strings\n        {\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n          alias: 'string',\n          inside: {\n            punctuation: {\n              pattern: /(\\().+?(?=\\))/,\n              lookbehind: true\n            }\n          }\n        }],\n        'multiline-comment': {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        regex: {\n          // Must be prefixed with the keyword \"node\" or a non-word char\n          pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            // Extended regexes must have the x flag. They can contain single-line comments.\n            'extended-regex': {\n              pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n              inside: {\n                comment: /#.*/\n              }\n            }\n          }\n        },\n        comment: {\n          pattern: /(^|[^\\\\])#.*/,\n          lookbehind: true,\n          greedy: true\n        },\n        string: {\n          // Allow for one nested level of double quotes inside interpolation\n          pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n          greedy: true,\n          inside: {\n            'double-quoted': {\n              pattern: /^\"[\\s\\S]*\"$/,\n              inside: {\n                // See interpolation below\n              }\n            }\n          }\n        },\n        variable: {\n          pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n          inside: {\n            punctuation: /::/\n          }\n        },\n        'attr-name': /(?:\\w+|\\*)(?=\\s*=>)/,\n        function: [{\n          pattern: /(\\.)(?!\\d)\\w+/,\n          lookbehind: true\n        }, /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],\n        number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n        boolean: /\\b(?:true|false)\\b/,\n        // Includes words reserved for future use\n        keyword: /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n        datatype: {\n          pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n          alias: 'symbol'\n        },\n        operator: /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n        punctuation: /[\\[\\]{}().,;]|:+/\n      };\n\n      var interpolation = [{\n        // Allow for one nested level of braces inside interpolation\n        pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n        lookbehind: true,\n        inside: {\n          'short-variable': {\n            // Negative look-ahead prevent wrong highlighting of functions\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n            lookbehind: true,\n            alias: 'variable',\n            inside: {\n              punctuation: /::/\n            }\n          },\n          delimiter: {\n            pattern: /^\\$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.puppet\n        }\n      }, {\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          punctuation: /::/\n        }\n      }];\n      Prism.languages.puppet.heredoc[0].inside.interpolation = interpolation;\n      Prism.languages.puppet.string.inside['double-quoted'].inside.interpolation = interpolation;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":139,"files":[{"filePath":"node_modules/reprism/languages/languages/puppet.js","startLine":1,"endLine":139},{"filePath":"node_modules/reprism/lib/languages/puppet.js","startLine":1,"endLine":139}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'pug',\n  init: function init(Prism) {\n    (function (Prism) {\n      // TODO:\n      // - Add CSS highlighting inside <style> tags\n      // - Add support for multi-line code blocks\n      // - Add support for interpolation #{} and !{}\n      // - Add support for tag interpolation #[]\n      // - Add explicit support for plain text using |\n      // - Add support for markup embedded in plain text\n\n      Prism.languages.pug = {\n        // Multiline stuff should appear before the rest\n\n        // This handles both single-line and multi-line comments\n        comment: {\n          pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\n          lookbehind: true\n        },\n\n        // All the tag-related part is in lookbehind\n        // so that it can be highlighted by the \"tag\" pattern\n        'multiline-script': {\n          pattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.javascript\n          }\n        },\n\n        // See at the end of the file for known filters\n        filter: {\n          pattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            }\n          }\n        },\n\n        'multiline-plain-text': {\n          pattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n          lookbehind: true\n        },\n        markup: {\n          pattern: /(^[\\t ]*)<.+/m,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.markup\n          }\n        },\n        doctype: {\n          pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n          lookbehind: true\n        },\n\n        // This handle all conditional and loop keywords\n        'flow-control': {\n          pattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n          lookbehind: true,\n          inside: {\n            each: {\n              pattern: /^each .+? in\\b/,\n              inside: {\n                keyword: /\\b(?:each|in)\\b/,\n                punctuation: /,/\n              }\n            },\n            branch: {\n              pattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n              alias: 'keyword'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        keyword: {\n          pattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n          lookbehind: true\n        },\n        mixin: [\n        // Declaration\n        {\n          pattern: /(^[\\t ]*)mixin .+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^mixin/,\n            function: /\\w+(?=\\s*\\(|\\s*$)/,\n            punctuation: /[(),.]/\n          }\n        },\n        // Usage\n        {\n          pattern: /(^[\\t ]*)\\+.+/m,\n          lookbehind: true,\n          inside: {\n            name: {\n              pattern: /^\\+\\w+/,\n              alias: 'function'\n            },\n            rest: Prism.languages.javascript\n          }\n        }],\n        script: {\n          pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.javascript\n          }\n        },\n\n        'plain-text': {\n          pattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\n          lookbehind: true\n        },\n        tag: {\n          pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n          lookbehind: true,\n          inside: {\n            attributes: [{\n              pattern: /&[^(]+\\([^)]+\\)/,\n              inside: {\n                rest: Prism.languages.javascript\n              }\n            }, {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                  lookbehind: true,\n                  inside: {\n                    rest: Prism.languages.javascript\n                  }\n                },\n                'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[!=(),]+/\n              }\n            }],\n            punctuation: /:/\n          }\n        },\n        code: [{\n          pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.javascript\n          }\n        }],\n        punctuation: /[.\\-!=|]+/\n      };\n\n      var filter_pattern = '(^([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r(?!\\\\n))(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\n\n      // Non exhaustive list of available filters and associated languages\n      var filters = [{ filter: 'atpl', language: 'twig' }, { filter: 'coffee', language: 'coffeescript' }, 'ejs', 'handlebars', 'hogan', 'less', 'livescript', 'markdown', 'mustache', 'plates', { filter: 'sass', language: 'scss' }, 'stylus', 'swig'];\n      var all_filters = {};\n      for (var i = 0, l = filters.length; i < l; i++) {\n        var filter = filters[i];\n        filter = typeof filter === 'string' ? { filter: filter, language: filter } : filter;\n        if (Prism.languages[filter.language]) {\n          all_filters['filter-' + filter.filter] = {\n            pattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter), 'm'),\n            lookbehind: true,\n            inside: {\n              'filter-name': {\n                pattern: /^:[\\w-]+/,\n                alias: 'variable'\n              },\n              rest: Prism.languages[filter.language]\n            }\n          };\n        }\n      }\n\n      Prism.languages.insertBefore('pug', 'filter', all_filters);\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":185,"files":[{"filePath":"node_modules/reprism/languages/languages/pug.js","startLine":1,"endLine":185},{"filePath":"node_modules/reprism/lib/languages/pug.js","startLine":1,"endLine":185}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'protobuf',\n  init: function init(Prism) {\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\n      keyword: /\\b(?:package|import|message|enum)\\b/,\n      builtin: /\\b(?:required|repeated|optional|reserved)\\b/,\n      primitive: {\n        pattern: /\\b(?:double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b/,\n        alias: 'symbol'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/reprism/languages/languages/protobuf.js","startLine":1,"endLine":18},{"filePath":"node_modules/reprism/lib/languages/protobuf.js","startLine":1,"endLine":18}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'properties',\n  init: function init(Prism) {\n    Prism.languages.properties = {\n      comment: /^[ \\t]*[#!].*$/m,\n      'attr-value': {\n        pattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n        lookbehind: true\n      },\n      'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )/m,\n      punctuation: /[=:]/\n    };\n  }\n};","nrTokens":0,"nrLines":19,"files":[{"filePath":"node_modules/reprism/languages/languages/properties.js","startLine":1,"endLine":19},{"filePath":"node_modules/reprism/lib/languages/properties.js","startLine":1,"endLine":19}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'prolog',\n  init: function init(Prism) {\n    Prism.languages.prolog = {\n      // Syntax depends on the implementation\n      comment: [/%.+/, /\\/\\*[\\s\\S]*?\\*\\//],\n      // Depending on the implementation, strings may allow escaped newlines and quote-escape\n      string: {\n        pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n      variable: /\\b[A-Z_]\\w*/,\n      // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n      function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n      number: /\\b\\d+\\.?\\d*/,\n      // Custom operators are allowed\n      operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n      punctuation: /[(){}\\[\\],]/\n    };\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/languages/languages/prolog.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/prolog.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'processing',\n  init: function init(Prism) {\n    Prism.languages.processing = Prism.languages.extend('clike', {\n      keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n      operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n    });\n    Prism.languages.insertBefore('processing', 'number', {\n      // Special case: XML is a type\n      constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n      type: {\n        pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n        alias: 'variable'\n      }\n    });\n\n    // Spaces are allowed between function name and parenthesis\n    Prism.languages.processing.function.pattern = /\\w+(?=\\s*\\()/;\n\n    // Class-names is not styled by default\n    Prism.languages.processing['class-name'].alias = 'variable';\n  }\n};","nrTokens":0,"nrLines":28,"files":[{"filePath":"node_modules/reprism/languages/languages/processing.js","startLine":1,"endLine":28},{"filePath":"node_modules/reprism/lib/languages/processing.js","startLine":1,"endLine":28}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'powershell',\n  init: function init(Prism) {\n    Prism.languages.powershell = {\n      comment: [{\n        pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^`])#.*/,\n        lookbehind: true\n      }],\n      string: [{\n        pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n        greedy: true,\n        inside: {\n          function: {\n            pattern: /(^|[^`])\\$\\(.*?\\)/,\n            lookbehind: true,\n            // Populated at end of file\n            inside: {}\n          }\n        }\n      }, {\n        pattern: /'(?:[^']|'')*'/,\n        greedy: true\n      }],\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*]|[^\\[\\]])*]|[^\\[\\]])*]/i,\n      boolean: /\\$(?:true|false)\\b/i,\n      variable: /\\$\\w+\\b/i,\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      function: [/\\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i, /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i],\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n      keyword: /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n      operator: {\n        pattern: /(\\W?)(?:!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n        lookbehind: true\n      },\n      punctuation: /[|{}[\\];(),.]/\n\n      // Variable interpolation inside strings, and nested expressions\n    };Prism.languages.powershell.string[0].inside.boolean = Prism.languages.powershell.boolean;\n    Prism.languages.powershell.string[0].inside.variable = Prism.languages.powershell.variable;\n    Prism.languages.powershell.string[0].inside.function.inside = Prism.languages.powershell;\n  }\n};","nrTokens":0,"nrLines":54,"files":[{"filePath":"node_modules/reprism/languages/languages/powershell.js","startLine":1,"endLine":54},{"filePath":"node_modules/reprism/lib/languages/powershell.js","startLine":1,"endLine":54}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'plsql',\n  init: function init(Prism) {\n    Prism.languages.plsql = Prism.languages.extend('sql', {\n      comment: [/\\/\\*[\\s\\S]*?\\*\\//, /--.*/]\n    });\n\n    if (Prism.util.type(Prism.languages.plsql.keyword) !== 'Array') {\n      Prism.languages.plsql.keyword = [Prism.languages.plsql.keyword];\n    }\n    Prism.languages.plsql.keyword.unshift(/\\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\\b/i);\n\n    if (Prism.util.type(Prism.languages.plsql.operator) !== 'Array') {\n      Prism.languages.plsql.operator = [Prism.languages.plsql.operator];\n    }\n    Prism.languages.plsql.operator.unshift(/:=/);\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/languages/languages/plsql.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/plsql.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'php',\n  init: function init(Prism) {\n    /**\n     * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n     * Modified by Miles Johnson: http://milesj.me\n     *\n     * Supports the following:\n     * \t\t- Extends clike syntax\n     * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n     * \t\t- Smarter constant and function matching\n     *\n     * Adds the following new token classes:\n     * \t\tconstant, delimiter, variable, function, package\n     */\n    (function (Prism) {\n      Prism.languages.php = Prism.languages.extend('clike', {\n        keyword: /\\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n        constant: /\\b[A-Z0-9_]{2,}\\b/,\n        comment: {\n          pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n          lookbehind: true\n        }\n      });\n\n      Prism.languages.insertBefore('php', 'string', {\n        'shell-comment': {\n          pattern: /(^|[^\\\\])#.*/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n      });\n\n      Prism.languages.insertBefore('php', 'keyword', {\n        delimiter: {\n          pattern: /\\?>|<\\?(?:php|=)?/i,\n          alias: 'important'\n        },\n        variable: /\\$+(?:\\w+\\b|(?={))/i,\n        package: {\n          pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        }\n      });\n\n      // Must be defined after the function pattern\n      Prism.languages.insertBefore('php', 'operator', {\n        property: {\n          pattern: /(->)[\\w]+/,\n          lookbehind: true\n        }\n      });\n\n      Prism.languages.insertBefore('php', 'string', {\n        'nowdoc-string': {\n          pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            delimiter: {\n              pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n              alias: 'symbol',\n              inside: {\n                punctuation: /^<<<'?|[';]$/\n              }\n            }\n          }\n        },\n        'heredoc-string': {\n          pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            delimiter: {\n              pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n              alias: 'symbol',\n              inside: {\n                punctuation: /^<<<\"?|[\";]$/\n              }\n            },\n            interpolation: null // See below\n          }\n        },\n        'single-quoted-string': {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true,\n          alias: 'string'\n        },\n        'double-quoted-string': {\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: null // See below\n          }\n        }\n      });\n      // The different types of PHP strings \"replace\" the C-like standard string\n      delete Prism.languages.php.string;\n\n      var string_interpolation = {\n        pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.php\n        }\n      };\n      Prism.languages.php['heredoc-string'].inside.interpolation = string_interpolation;\n      Prism.languages.php['double-quoted-string'].inside.interpolation = string_interpolation;\n\n      Prism.hooks.add('before-tokenize', function (env) {\n        if (!/(?:<\\?php|<\\?)/gi.test(env.code)) {\n          return;\n        }\n\n        var phpPattern = /(?:<\\?php|<\\?)[\\s\\S]*?(?:\\?>|$)/gi;\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n      });\n\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":133,"files":[{"filePath":"node_modules/reprism/languages/languages/php.js","startLine":1,"endLine":133},{"filePath":"node_modules/reprism/lib/languages/php.js","startLine":1,"endLine":133}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'php-extras',\n  init: function init(Prism) {\n    Prism.languages.insertBefore('php', 'variable', {\n      this: /\\$this\\b/,\n      global: /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n      scope: {\n        pattern: /\\b[\\w\\\\]+::/,\n        inside: {\n          keyword: /static|self|parent/,\n          punctuation: /::|\\\\/\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/languages/languages/php-extras.js","startLine":1,"endLine":21},{"filePath":"node_modules/reprism/lib/languages/php-extras.js","startLine":1,"endLine":21}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'perl',\n  init: function init(Prism) {\n    Prism.languages.perl = {\n      comment: [{\n        // POD\n        pattern: /(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\$])#.*/,\n        lookbehind: true\n      }],\n      // TODO Could be nice to handle Heredoc too.\n      string: [\n      // q/.../\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      },\n\n      // q a...a\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      },\n\n      // q(...)\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n        greedy: true\n      },\n\n      // q{...}\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\n        greedy: true\n      },\n\n      // q[...]\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n        greedy: true\n      },\n\n      // q<...>\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n        greedy: true\n      },\n\n      // \"...\", `...`\n      {\n        pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      },\n\n      // '...'\n      // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n      {\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n        greedy: true\n      }],\n      regex: [\n      // m/.../\n      {\n        pattern: /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m a...a\n      {\n        pattern: /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m(...)\n      {\n        pattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m{...}\n      {\n        pattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m[...]\n      {\n        pattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m<...>\n      {\n        pattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // The lookbehinds prevent -s from breaking\n      // FIXME We don't handle change of separator like s(...)[...]\n      // s/.../.../\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s a...a...a\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s(...)(...)\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s{...}{...}\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s[...][...]\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s<...><...>\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // /.../\n      // The look-ahead tries to prevent two divisions on\n      // the same line from being highlighted as regex.\n      // This does not support multi-line regex.\n      {\n        pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n        greedy: true\n      }],\n\n      // FIXME Not sure about the handling of ::, ', and #\n      variable: [\n      // ${^POSTMATCH}\n      /[&*$@%]\\{\\^[A-Z]+\\}/,\n      // $^V\n      /[&*$@%]\\^[A-Z_]/,\n      // ${...}\n      /[&*$@%]#?(?=\\{)/,\n      // $foo\n      /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i,\n      // $1\n      /[&*$@%]\\d+/,\n      // $_, @_, %!\n      // The negative lookahead prevents from breaking the %= operator\n      /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/],\n      filehandle: {\n        // <>, <FOO>, _\n        pattern: /<(?![<=])\\S*>|\\b_\\b/,\n        alias: 'symbol'\n      },\n      vstring: {\n        // v1.2, 1.2.3\n        pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n        alias: 'string'\n      },\n      function: {\n        pattern: /sub [a-z0-9_]+/i,\n        inside: {\n          keyword: /sub/\n        }\n      },\n      keyword: /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n      number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n      operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\n      punctuation: /[{}[\\];(),:]/\n    };\n  }\n};","nrTokens":0,"nrLines":195,"files":[{"filePath":"node_modules/reprism/languages/languages/perl.js","startLine":1,"endLine":195},{"filePath":"node_modules/reprism/lib/languages/perl.js","startLine":1,"endLine":195}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'pascal',\n  init: function init(Prism) {\n    // Based on Free Pascal\n\n    /* TODO\n    Support inline asm ?\n    */\n\n    Prism.languages.pascal = {\n      comment: [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\n      string: {\n        pattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n        greedy: true\n      },\n      keyword: [{\n        // Turbo Pascal\n        pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      }, {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      }, {\n        // Object Pascal\n        pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      }, {\n        // Modifiers\n        pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }],\n      number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i,\n      // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],\n      operator: [/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i, {\n        pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }],\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n    };\n  }\n};","nrTokens":0,"nrLines":50,"files":[{"filePath":"node_modules/reprism/languages/languages/pascal.js","startLine":1,"endLine":50},{"filePath":"node_modules/reprism/lib/languages/pascal.js","startLine":1,"endLine":50}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'parser',\n  init: function init(Prism) {\n    Prism.languages.parser = Prism.languages.extend('markup', {\n      keyword: {\n        pattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\.|:+/\n        }\n      },\n      function: {\n        pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /(^@)(?:GET_|SET_)/,\n            lookbehind: true\n          },\n          punctuation: /\\.|:+/\n        }\n      },\n      escape: {\n        pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n        alias: 'builtin'\n      },\n      punctuation: /[\\[\\](){};]/\n    });\n    Prism.languages.insertBefore('parser', 'keyword', {\n      'parser-comment': {\n        pattern: /(\\s)#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      expression: {\n        // Allow for 3 levels of depth\n        pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n        greedy: true,\n        lookbehind: true,\n        inside: {\n          string: {\n            pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n            lookbehind: true\n          },\n          keyword: Prism.languages.parser.keyword,\n          variable: Prism.languages.parser.variable,\n          function: Prism.languages.parser.function,\n          boolean: /\\b(?:true|false)\\b/,\n          number: /\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,\n          escape: Prism.languages.parser.escape,\n          operator: /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n          punctuation: Prism.languages.parser.punctuation\n        }\n      }\n    });\n    Prism.languages.insertBefore('inside', 'punctuation', {\n      expression: Prism.languages.parser.expression,\n      keyword: Prism.languages.parser.keyword,\n      variable: Prism.languages.parser.variable,\n      function: Prism.languages.parser.function,\n      escape: Prism.languages.parser.escape,\n      'parser-punctuation': {\n        pattern: Prism.languages.parser.punctuation,\n        alias: 'punctuation'\n      }\n    }, Prism.languages.parser.tag.inside['attr-value']);\n  }\n};","nrTokens":0,"nrLines":77,"files":[{"filePath":"node_modules/reprism/languages/languages/parser.js","startLine":1,"endLine":77},{"filePath":"node_modules/reprism/lib/languages/parser.js","startLine":1,"endLine":77}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'parigp',\n  init: function init(Prism) {\n    Prism.languages.parigp = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      },\n      // PARI/GP does not care about white spaces at all\n      // so let's process the keywords to build an appropriate regexp\n      // (e.g. \"b *r *e *a *k\", etc.)\n      keyword: function () {\n        var keywords = ['breakpoint', 'break', 'dbg_down', 'dbg_err', 'dbg_up', 'dbg_x', 'forcomposite', 'fordiv', 'forell', 'forpart', 'forprime', 'forstep', 'forsubgroup', 'forvec', 'for', 'iferr', 'if', 'local', 'my', 'next', 'return', 'until', 'while'];\n        keywords = keywords.map(function (keyword) {\n          return keyword.split('').join(' *');\n        }).join('|');\n        return RegExp('\\\\b(?:' + keywords + ')\\\\b');\n      }(),\n      function: /\\w[\\w ]*?(?= *\\()/,\n      number: {\n        // The lookbehind and the negative lookahead prevent from breaking the .. operator\n        pattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,\n        lookbehind: true\n      },\n      operator: /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n      punctuation: /[\\[\\]{}().,:;|]/\n    };\n  }\n};","nrTokens":0,"nrLines":35,"files":[{"filePath":"node_modules/reprism/languages/languages/parigp.js","startLine":1,"endLine":35},{"filePath":"node_modules/reprism/lib/languages/parigp.js","startLine":1,"endLine":35}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'oz',\n  init: function init(Prism) {\n    Prism.languages.oz = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n        greedy: true\n      },\n      atom: {\n        pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n        greedy: true,\n        alias: 'builtin'\n      },\n      keyword: /[$_]|\\[\\]|\\b(?:at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n      function: [/[a-z][A-Za-z\\d]*(?=\\()/, {\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*/,\n        lookbehind: true\n      }],\n      number: /\\b(?:0[bx][\\da-f]+|\\d+\\.?\\d*(?:e~?\\d+)?\\b)|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n      variable: /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\n      'attr-name': /\\w+(?=:)/,\n      operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n      punctuation: /[\\[\\](){}.:;?]/\n    };\n  }\n};","nrTokens":0,"nrLines":32,"files":[{"filePath":"node_modules/reprism/languages/languages/oz.js","startLine":1,"endLine":32},{"filePath":"node_modules/reprism/lib/languages/oz.js","startLine":1,"endLine":32}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'opencl',\n  init: function init(Prism) {\n    (function (Prism) {\n      /* OpenCL kernel language */\n      Prism.languages.opencl = Prism.languages.extend('c', {\n        // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n        keyword: /\\b(?:__attribute__|(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|auto|break|case|cl_(?:image_format|mem_fence_flags)|clk_event_t|complex|const|continue|default|do|(?:float|double)(?:16(?:x(?:1|16|2|4|8))?|1x(?:1|16|2|4|8)|2(?:x(?:1|16|2|4|8))?|3|4(?:x(?:1|16|2|4|8))?|8(?:x(?:1|16|2|4|8))?)?|else|enum|event_t|extern|for|goto|(?:u?(?:char|short|int|long)|half|quad|bool)(?:2|3|4|8|16)?|if|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|imaginary|inline|intptr_t|ndrange_t|packed|pipe|ptrdiff_t|queue_t|register|reserve_id_t|restrict|return|sampler_t|signed|size_t|sizeof|static|struct|switch|typedef|uintptr_t|uniform|union|unsigned|void|volatile|while)\\b/,\n        // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (global-vars, opencl-dev)\n        'function-opencl-kernel': {\n          pattern: /\\b(?:abs(?:_diff)?|a?(?:cos|sin)(?:h|pi)?|add_sat|aligned|all|and|any|async(?:_work_group_copy|_work_group_strided_copy)?|atan(?:2?(?:pi)?|h)?|atom_(?:add|and|cmpxchg|dec|inc|max|min|or|sub|xchg|xor)|barrier|bitselect|cbrt|ceil|clamp|clz|copies|copysign|cross|degrees|distance|dot|endian|erf|erfc|exp(?:2|10)?|expm1|fabs|fast_(?:distance|length|normalize)|fdim|floor|fma|fmax|fmin|fract|frexp|fro|from|get_(?:global_(?:id|offset|size)|group_id|image_(?:channel_data_type|channel_order|depth|dim|height|width)|local(?:_id|_size)|num_groups|work_dim)|hadd|(?:half|native)_(?:cos|divide|exp(?:2|10)?|log(?:2|10)?|powr|recip|r?sqrt|sin|tan)|hypot|ilogb|is(?:equal|finite|greater(?:equal)?|inf|less(?:equal|greater)?|nan|normal|notequal|(?:un)?ordered)|ldexp|length|lgamma|lgamma_r|log(?:b|1p|2|10)?|mad(?:24|_hi|_sat)?|max|mem(?:_fence)?|min|mix|modf|mul24|mul_hi|nan|nextafter|normalize|pow[nr]?|prefetch|radians|read_(?:image)(?:f|h|u?i)|read_mem_fence|remainder|remquo|reqd_work_group_size|rhadd|rint|rootn|rotate|round|rsqrt|select|shuffle2?|sign|signbit|sincos|smoothstep|sqrt|step|sub_sat|tan|tanh|tanpi|tgamma|to|trunc|upsample|vec_(?:step|type_hint)|v(?:load|store)(?:_half)?(?:2|3|4|8|16)?|v(?:loada_half|storea?(?:_half)?)(?:2|3|4|8|16)?(?:_(?:rte|rtn|rtp|rtz))?|wait_group_events|work_group_size_hint|write_image(?:f|h|u?i)|write_mem_fence)\\b/,\n          alias: 'function'\n        },\n        // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n        'constant-opencl-kernel': {\n          pattern: /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:LOCAL|GLOBAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT)_(?:DIG|EPSILON|MANT_DIG|(?:MIN|MAX)(?:(?:_10)?_EXP)?)|FLT_RADIX|HUGE_VALF|INFINITY|(?:INT|LONG|SCHAR|SHRT|UCHAR|UINT|ULONG)_(?:MAX|MIN)|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:10|2)E?|PI[24]?|SQRT(?:1_2|2))|NAN)\\b/,\n          alias: 'constant'\n        }\n      });\n\n      var attributes = {\n        // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n        'type-opencl-host': {\n          pattern: /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|short|int|long)|float|double)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n          alias: 'keyword'\n        },\n        'boolean-opencl-host': {\n          pattern: /\\bCL_(?:TRUE|FALSE)\\b/,\n          alias: 'boolean'\n        },\n        // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n        'constant-opencl-host': {\n          pattern: /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:16|24|8|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n          alias: 'constant'\n        },\n        // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n        'function-opencl-host': {\n          pattern: /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|Kernel|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n          alias: 'function'\n        }\n\n        /* OpenCL host API */\n      };Prism.languages.insertBefore('c', 'keyword', attributes);\n      // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n      attributes['type-opencl-host-c++'] = {\n        pattern: /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|Sampler|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|UserEvent)\\b/,\n        alias: 'keyword'\n        // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n      };Prism.languages.insertBefore('cpp', 'keyword', attributes);\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":57,"files":[{"filePath":"node_modules/reprism/languages/languages/opencl.js","startLine":1,"endLine":57},{"filePath":"node_modules/reprism/lib/languages/opencl.js","startLine":1,"endLine":57}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ocaml',\n  init: function init(Prism) {\n    Prism.languages.ocaml = {\n      comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n      string: [{\n        pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      }, {\n        pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n        greedy: true\n      }],\n      number: /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n      type: {\n        pattern: /\\B['`]\\w*/,\n        alias: 'variable'\n      },\n      directive: {\n        pattern: /\\B#\\w+/,\n        alias: 'function'\n      },\n      keyword: /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      // Custom operators are allowed\n      operator: /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n      punctuation: /[(){}\\[\\]|_.,:;]/\n    };\n  }\n};","nrTokens":0,"nrLines":34,"files":[{"filePath":"node_modules/reprism/languages/languages/ocaml.js","startLine":1,"endLine":34},{"filePath":"node_modules/reprism/lib/languages/ocaml.js","startLine":1,"endLine":34}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'objectivec',\n  init: function init(Prism) {\n    Prism.languages.objectivec = Prism.languages.extend('c', {\n      keyword: /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n      string: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n    });\n  }\n};","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/reprism/languages/languages/objectivec.js","startLine":1,"endLine":15},{"filePath":"node_modules/reprism/lib/languages/objectivec.js","startLine":1,"endLine":15}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nsis',\n  init: function init(Prism) {\n    /**\n     * Original by Jan T. Sott (http://github.com/idleberg)\n     *\n     * Includes all commands and plug-ins shipped with NSIS 3.02\n     */\n    Prism.languages.nsis = {\n      comment: {\n        pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n        lookbehind: true\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      keyword: {\n        pattern: /(^\\s*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|Banner|BG(?:Font|Gradient|Image)|BrandingText|BringToFront|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|WriteUTF16LE|Seek|Write|WriteByte|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DlgItem|DLLVersion(?:Local)?|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|Name|Nop|ns(?:Dialogs|Exec)|NSISdl|OutFile|Page(?:Callbacks)?|PE(?:DllCharacteristics|SubsysVer)|Pop|Push|Quit|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Unicode|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UninstPage|UnRegDLL|UserInfo|Var|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle)\\b/m,\n        lookbehind: true\n      },\n      property: /\\b(?:admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user|ARCHIVE|FILE_(ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK((CR|CU|LM)(32|64)?|DD|PD|U)|HKEY_(CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)\\b/,\n      constant: /\\${[\\w\\.:\\^-]+}|\\$\\([\\w\\.:\\^-]+\\)/i,\n      variable: /\\$\\w+/i,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n      operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n      punctuation: /[{}[\\];(),.:]/,\n      important: {\n        pattern: /(^\\s*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n        lookbehind: true\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/languages/languages/nsis.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/nsis.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nix',\n  init: function init(Prism) {\n    Prism.languages.nix = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            // The lookbehind ensures the ${} is not preceded by \\ or ''\n            pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,\n            lookbehind: true,\n            inside: {\n              antiquotation: {\n                pattern: /^\\$(?=\\{)/,\n                alias: 'variable'\n              }\n              // See rest below\n            }\n          }\n        }\n      },\n      url: [/\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/, {\n        pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }],\n      antiquotation: {\n        pattern: /\\$(?=\\{)/,\n        alias: 'variable'\n      },\n      number: /\\b\\d+\\b/,\n      keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n      function: /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n      punctuation: /[{}()[\\].,:;]/\n    };\n\n    Prism.languages.nix.string.inside.interpolation.inside.rest = Prism.languages.nix;\n  }\n};","nrTokens":0,"nrLines":47,"files":[{"filePath":"node_modules/reprism/languages/languages/nix.js","startLine":1,"endLine":47},{"filePath":"node_modules/reprism/lib/languages/nix.js","startLine":1,"endLine":47}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nim',\n  init: function init(Prism) {\n    Prism.languages.nim = {\n      comment: /#.*/,\n      // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n      // Character literals are handled specifically to prevent issues with numeric type suffixes\n      string: {\n        pattern: /(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,\n        greedy: true\n      },\n      // The negative look ahead prevents wrong highlighting of the .. operator\n      number: /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n      keyword: /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n      function: {\n        pattern: /(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n        inside: {\n          operator: /\\*$/\n        }\n      },\n      // We don't want to highlight operators inside backticks\n      ignore: {\n        pattern: /`[^`\\r\\n]+`/,\n        inside: {\n          punctuation: /`/\n        }\n      },\n      operator: {\n        // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n        // but allow the slice operator .. to take precedence over them\n        // One can define his own operators in Nim so all combination of operators might be an operator.\n        pattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,\n        lookbehind: true\n      },\n      punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n    };\n  }\n};","nrTokens":0,"nrLines":43,"files":[{"filePath":"node_modules/reprism/languages/languages/nim.js","startLine":1,"endLine":43},{"filePath":"node_modules/reprism/lib/languages/nim.js","startLine":1,"endLine":43}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nginx',\n  init: function init(Prism) {\n    Prism.languages.nginx = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /(^|[^\"{\\\\])#.*/,\n        lookbehind: true\n      },\n      keyword: /\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types)\\b/i\n    });\n\n    Prism.languages.insertBefore('nginx', 'keyword', {\n      variable: /\\$[a-z_]+/i\n    });\n  }\n};","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/languages/languages/nginx.js","startLine":1,"endLine":21},{"filePath":"node_modules/reprism/lib/languages/nginx.js","startLine":1,"endLine":21}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nasm',\n  init: function init(Prism) {\n    Prism.languages.nasm = {\n      comment: /;.*$/m,\n      string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      label: {\n        pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n        lookbehind: true,\n        alias: 'function'\n      },\n      keyword: [/\\[?BITS (?:16|32|64)\\]?/, {\n        pattern: /(^\\s*)section\\s*[a-zA-Z.]+:?/im,\n        lookbehind: true\n      }, /(?:extern|global)[^;\\r\\n]*/i, /(?:CPU|FLOAT|DEFAULT).*$/m],\n      register: {\n        pattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,\n        alias: 'variable'\n      },\n      number: /(?:\\b|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n      operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n    };\n  }\n};","nrTokens":0,"nrLines":29,"files":[{"filePath":"node_modules/reprism/languages/languages/nasm.js","startLine":1,"endLine":29},{"filePath":"node_modules/reprism/lib/languages/nasm.js","startLine":1,"endLine":29}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'n4js',\n  init: function init(Prism) {\n    Prism.languages.n4js = Prism.languages.extend('javascript', {\n      // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n      keyword: /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n    });\n\n    Prism.languages.insertBefore('n4js', 'constant', {\n      // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n      annotation: {\n        pattern: /@+\\w+/,\n        alias: 'operator'\n      }\n    });\n\n    Prism.languages.n4jsd = Prism.languages.n4js;\n  }\n};","nrTokens":0,"nrLines":24,"files":[{"filePath":"node_modules/reprism/languages/languages/n4js.js","startLine":1,"endLine":24},{"filePath":"node_modules/reprism/lib/languages/n4js.js","startLine":1,"endLine":24}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'monkey',\n  init: function init(Prism) {\n    Prism.languages.monkey = {\n      string: /\"[^\"\\r\\n]*\"/,\n      comment: [{\n        pattern: /^#Rem\\s+[\\s\\S]*?^#End/im,\n        greedy: true\n      }, {\n        pattern: /'.+/,\n        greedy: true\n      }],\n      preprocessor: {\n        pattern: /(^[ \\t]*)#.+/m,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      function: /\\w+(?=\\()/,\n      'type-char': {\n        pattern: /(\\w)[?%#$]/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      number: {\n        pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n        lookbehind: true\n      },\n      keyword: /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n      operator: /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n      punctuation: /[.,:;()\\[\\]]/\n    };\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/languages/languages/monkey.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/monkey.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'mizar',\n  init: function init(Prism) {\n    Prism.languages.mizar = {\n      comment: /::.+/,\n      keyword: /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,\n      parameter: {\n        pattern: /\\$(?:10|\\d)/,\n        alias: 'variable'\n      },\n      variable: /\\w+(?=:)/,\n      number: /(?:\\b|-)\\d+\\b/,\n      operator: /\\.\\.\\.|->|&|\\.?=/,\n      punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n    };\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/languages/languages/mizar.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/mizar.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'mel',\n  init: function init(Prism) {\n    Prism.languages.mel = {\n      comment: /\\/\\/.*/,\n      code: {\n        pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n        greedy: true,\n        alias: 'italic',\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          }\n          // See rest below\n        }\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      variable: /\\$\\w+/,\n      number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+/,\n      flag: {\n        pattern: /-[^\\d\\W]\\w*/,\n        alias: 'operator'\n      },\n      keyword: /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n      function: /\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n\n      operator: [/\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/, {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      }, {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }],\n      punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n    };\n    Prism.languages.mel.code.inside.rest = Prism.languages.mel;\n  }\n};","nrTokens":0,"nrLines":49,"files":[{"filePath":"node_modules/reprism/languages/languages/mel.js","startLine":1,"endLine":49},{"filePath":"node_modules/reprism/lib/languages/mel.js","startLine":1,"endLine":49}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'matlab',\n  init: function init(Prism) {\n    Prism.languages.matlab = {\n      comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n      string: {\n        pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n        greedy: true\n      },\n      // FIXME We could handle imaginary numbers as a whole\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n      keyword: /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n      function: /(?!\\d)\\w+(?=\\s*\\()/,\n      operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n      punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n    };\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/languages/languages/matlab.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/matlab.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'markup',\n  init: function init(Prism) {\n    Prism.languages.markup = {\n      comment: /<!--[\\s\\S]*?-->/,\n      prolog: /<\\?[\\s\\S]+?\\?>/,\n      doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n      cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n      tag: {\n        pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n        greedy: true,\n        inside: {\n          tag: {\n            pattern: /^<\\/?[^\\s>\\/]+/i,\n            inside: {\n              punctuation: /^<\\/?/,\n              namespace: /^[^\\s>\\/:]+:/\n            }\n          },\n          'attr-value': {\n            pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n            inside: {\n              punctuation: [/^=/, {\n                pattern: /(^|[^\\\\])[\"']/,\n                lookbehind: true\n              }]\n            }\n          },\n          punctuation: /\\/?>/,\n          'attr-name': {\n            pattern: /[^\\s>\\/]+/,\n            inside: {\n              namespace: /^[^\\s>\\/:]+:/\n            }\n          }\n        }\n      },\n      entity: /&#?[\\da-z]{1,8};/i\n    };\n\n    Prism.languages.markup.tag.inside['attr-value'].inside.entity = Prism.languages.markup.entity;\n\n    // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type === 'entity') {\n        env.attributes.title = env.content.replace(/&amp;/, '&');\n      }\n    });\n\n    Prism.languages.xml = Prism.languages.markup;\n    Prism.languages.html = Prism.languages.markup;\n    Prism.languages.mathml = Prism.languages.markup;\n    Prism.languages.svg = Prism.languages.markup;\n  }\n};","nrTokens":0,"nrLines":60,"files":[{"filePath":"node_modules/reprism/languages/languages/markup.js","startLine":1,"endLine":60},{"filePath":"node_modules/reprism/lib/languages/markup.js","startLine":1,"endLine":60}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'markup-templating',\n  init: function init(Prism) {\n    Prism.languages['markup-templating'] = {};\n\n    Object.defineProperties(Prism.languages['markup-templating'], {\n      buildPlaceholders: {\n        // Tokenize all inline templating expressions matching placeholderPattern\n        // If the replaceFilter function is provided, it will be called with every match.\n        // If it returns false, the match will not be replaced.\n        value: function value(env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return;\n          }\n\n          env.tokenStack = [];\n\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match;\n            }\n            var i = env.tokenStack.length;\n            // Check for existing strings\n            while (env.code.indexOf('___' + language.toUpperCase() + i + '___') !== -1) {\n              ++i;\n            }\n\n            // Create a sparse array\n            env.tokenStack[i] = match;\n\n            return '___' + language.toUpperCase() + i + '___';\n          });\n\n          // Switch the grammar to markup\n          env.grammar = Prism.languages.markup;\n        }\n      },\n      tokenizePlaceholders: {\n        // Replace placeholders with proper tokens after tokenizing\n        value: function value(env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return;\n          }\n\n          // Switch the grammar back\n          env.grammar = Prism.languages[language];\n\n          var j = 0;\n          var keys = Object.keys(env.tokenStack);\n          var walkTokens = function walkTokens(tokens) {\n            if (j >= keys.length) {\n              return;\n            }\n            for (var i = 0; i < tokens.length; i++) {\n              var token = tokens[i];\n              if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n                var k = keys[j];\n                var t = env.tokenStack[k];\n                var s = typeof token === 'string' ? token : token.content;\n\n                var index = s.indexOf('___' + language.toUpperCase() + k + '___');\n                if (index > -1) {\n                  ++j;\n                  var before = s.substring(0, index);\n                  var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar, language), 'language-' + language, t);\n                  var after = s.substring(index + ('___' + language.toUpperCase() + k + '___').length);\n                  var replacement;\n                  if (before || after) {\n                    replacement = [before, middle, after].filter(function (v) {\n                      return !!v;\n                    });\n                    walkTokens(replacement);\n                  } else {\n                    replacement = middle;\n                  }\n                  if (typeof token === 'string') {\n                    Array.prototype.splice.apply(tokens, [i, 1].concat(replacement));\n                  } else {\n                    token.content = replacement;\n                  }\n\n                  if (j >= keys.length) {\n                    break;\n                  }\n                }\n              } else if (token.content && typeof token.content !== 'string') {\n                walkTokens(token.content);\n              }\n            }\n          };\n\n          walkTokens(env.tokens);\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":102,"files":[{"filePath":"node_modules/reprism/languages/languages/markup-templating.js","startLine":1,"endLine":102},{"filePath":"node_modules/reprism/lib/languages/markup-templating.js","startLine":1,"endLine":102}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'markdown',\n  init: function init(Prism) {\n    Prism.languages.markdown = Prism.languages.extend('markup', {});\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      code: [{\n        // Prefixed by 4 spaces or 1 tab\n        pattern: /^(?: {4}|\\t).+/m,\n        alias: 'keyword'\n      }, {\n        // `code`\n        // ``code``\n        pattern: /``.+?``|`[^`\\n]+`/,\n        alias: 'keyword'\n      }],\n      title: [{\n        // title 1\n        // =======\n\n        // title 2\n        // -------\n        pattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n        alias: 'important',\n        inside: {\n          punctuation: /==+$|--+$/\n        }\n      }, {\n        // # title 1\n        // ###### title 6\n        pattern: /(^\\s*)#+.+/m,\n        lookbehind: true,\n        alias: 'important',\n        inside: {\n          punctuation: /^#+|#+$/\n        }\n      }],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n\n        // Allow only one line break\n        pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n        lookbehind: true,\n        inside: {\n          punctuation: /^\\*\\*|^__|\\*\\*$|__$/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n\n        // Allow only one line break\n        pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n        lookbehind: true,\n        inside: {\n          punctuation: /^[*_]|[*_]$/\n        }\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example] [id]\n        pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n        inside: {\n          variable: {\n            pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n          }\n        }\n      }\n    });\n\n    Prism.languages.markdown.bold.inside.url = Prism.languages.markdown.url;\n    Prism.languages.markdown.italic.inside.url = Prism.languages.markdown.url;\n    Prism.languages.markdown.bold.inside.italic = Prism.languages.markdown.italic;\n    Prism.languages.markdown.italic.inside.bold = Prism.languages.markdown.bold;\n  }\n};","nrTokens":0,"nrLines":124,"files":[{"filePath":"node_modules/reprism/languages/languages/markdown.js","startLine":1,"endLine":124},{"filePath":"node_modules/reprism/lib/languages/markdown.js","startLine":1,"endLine":124}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'makefile',\n  init: function init(Prism) {\n    Prism.languages.makefile = {\n      comment: {\n        pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n        lookbehind: true\n      },\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n\n      // Built-in target names\n      builtin: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n\n      // Targets\n      symbol: {\n        pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n        inside: {\n          variable: /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n        }\n      },\n      variable: /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n\n      keyword: [\n      // Directives\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n      // Functions\n      {\n        pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n        lookbehind: true\n      }],\n      operator: /(?:::|[?:+!])?=|[|@]/,\n      punctuation: /[:;(){}]/\n    };\n  }\n};","nrTokens":0,"nrLines":43,"files":[{"filePath":"node_modules/reprism/languages/languages/makefile.js","startLine":1,"endLine":43},{"filePath":"node_modules/reprism/lib/languages/makefile.js","startLine":1,"endLine":43}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'lua',\n  init: function init(Prism) {\n    Prism.languages.lua = {\n      comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n      // \\z may be used to skip the following space\n      string: {\n        pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n        greedy: true\n      },\n      number: /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n      keyword: /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n      function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n      operator: [/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/, {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }],\n      punctuation: /[\\[\\](){},;]|\\.+|:+/\n    };\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/languages/languages/lua.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/lua.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'lolcode',\n  init: function init(Prism) {\n    Prism.languages.lolcode = {\n      comment: [/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/, /\\bBTW.+/],\n      string: {\n        pattern: /\"(?::.|[^\"])*\"/,\n        inside: {\n          variable: /:\\{[^}]+\\}/,\n          symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n        },\n        greedy: true\n      },\n      number: /(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,\n      symbol: {\n        pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n        lookbehind: true,\n        inside: {\n          keyword: /A(?=\\s)/\n        }\n      },\n      label: {\n        pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n        lookbehind: true,\n        alias: 'string'\n      },\n      function: {\n        pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n        lookbehind: true\n      },\n      keyword: [{\n        pattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n        lookbehind: true\n      }, /'Z(?=\\s|,|$)/],\n      boolean: {\n        pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|\\s)IT(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      punctuation: /\\.{3}|???|,|!/\n    };\n  }\n};","nrTokens":0,"nrLines":55,"files":[{"filePath":"node_modules/reprism/languages/languages/lolcode.js","startLine":1,"endLine":55},{"filePath":"node_modules/reprism/lib/languages/lolcode.js","startLine":1,"endLine":55}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'livescript',\n  init: function init(Prism) {\n    Prism.languages.livescript = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }],\n      'interpolated-string': {\n        /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n        * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n        pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          variable: {\n            pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n            lookbehind: true\n          },\n          interpolation: {\n            pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n            lookbehind: true,\n            inside: {\n              'interpolation-punctuation': {\n                pattern: /^#\\{|\\}$/,\n                alias: 'variable'\n              }\n              // See rest below\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      },\n      string: [{\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      }, {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      }, /\\\\[^\\s,;\\])}]+/],\n      regex: [{\n        pattern: /\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      }, {\n        pattern: /\\/(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }],\n      keyword: {\n        pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n        lookbehind: true\n      },\n      'keyword-operator': {\n        pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      boolean: {\n        pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n        lookbehind: true\n      },\n      argument: {\n        // Don't match .&. nor &&\n        pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n      identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n      operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      },\n      // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],\n      punctuation: /[(){}\\[\\]|.,:;`]/\n    };\n\n    Prism.languages.livescript['interpolated-string'].inside.interpolation.inside.rest = Prism.languages.livescript;\n  }\n};","nrTokens":0,"nrLines":118,"files":[{"filePath":"node_modules/reprism/languages/languages/livescript.js","startLine":1,"endLine":118},{"filePath":"node_modules/reprism/lib/languages/livescript.js","startLine":1,"endLine":118}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'lisp',\n  init: function init(Prism) {\n    (function (Prism) {\n      // Functions to construct regular expressions\n      // simple form\n      // e.g. (interactive ... or (interactive)\n      function simple_form(name) {\n        return new RegExp('(\\\\()' + name + '(?=[\\\\s\\\\)])');\n      }\n      // booleans and numbers\n      function primitive(pattern) {\n        return new RegExp('([\\\\s([])' + pattern + '(?=[\\\\s)])');\n      }\n\n      // Patterns in regular expressions\n\n      // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n      // & and : are excluded as they are usually used for special purposes\n      var symbol = '[-+*/_~!@$%^=<>{}\\\\w]+';\n      // symbol starting with & used in function arguments\n      var marker = '&' + symbol;\n      // Open parenthesis for look-behind\n      var par = '(\\\\()';\n      var endpar = '(?=\\\\))';\n      // End the pattern with look-ahead space\n      var space = '(?=\\\\s)';\n\n      var language = {\n        // Three or four semicolons are considered a heading.\n        // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n        heading: {\n          pattern: /;;;.*/,\n          alias: ['comment', 'title']\n        },\n        comment: /;.*/,\n        string: {\n          pattern: /\"(?:[^\"\\\\]*|\\\\.)*\"/,\n          greedy: true,\n          inside: {\n            argument: /[-A-Z]+(?=[.,\\s])/,\n            symbol: new RegExp('`' + symbol + '\\'')\n          }\n        },\n        'quoted-symbol': {\n          pattern: new RegExp('#?\\'' + symbol),\n          alias: ['variable', 'symbol']\n        },\n        'lisp-property': {\n          pattern: new RegExp(':' + symbol),\n          alias: 'property'\n        },\n        splice: {\n          pattern: new RegExp(',@?' + symbol),\n          alias: ['symbol', 'variable']\n        },\n        keyword: [{\n          pattern: new RegExp(par + '(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)' + space),\n          lookbehind: true\n        }, {\n          pattern: new RegExp(par + '(?:for|do|collect|return|finally|append|concat|in|by)' + space),\n          lookbehind: true\n        }],\n        declare: {\n          pattern: simple_form('declare'),\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        interactive: {\n          pattern: simple_form('interactive'),\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        boolean: {\n          pattern: primitive('(?:t|nil)'),\n          lookbehind: true\n        },\n        number: {\n          pattern: primitive('[-+]?\\\\d+(?:\\\\.\\\\d*)?'),\n          lookbehind: true\n        },\n        defvar: {\n          pattern: new RegExp(par + 'def(?:var|const|custom|group)\\\\s+' + symbol),\n          lookbehind: true,\n          inside: {\n            keyword: /^def[a-z]+/,\n            variable: new RegExp(symbol)\n          }\n        },\n        defun: {\n          pattern: new RegExp(par + '(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+' + symbol + '\\\\s+\\\\([\\\\s\\\\S]*?\\\\)'),\n          lookbehind: true,\n          inside: {\n            keyword: /^(?:cl-)?def\\S+/,\n            // See below, this property needs to be defined later so that it can\n            // reference the language object.\n            arguments: null,\n            function: {\n              pattern: new RegExp('(^\\\\s)' + symbol),\n              lookbehind: true\n            },\n            punctuation: /[()]/\n          }\n        },\n        lambda: {\n          pattern: new RegExp(par + 'lambda\\\\s+\\\\((?:&?' + symbol + '\\\\s*)*\\\\)'),\n          lookbehind: true,\n          inside: {\n            keyword: /^lambda/,\n            // See below, this property needs to be defined later so that it can\n            // reference the language object.\n            arguments: null,\n            punctuation: /[()]/\n          }\n        },\n        car: {\n          pattern: new RegExp(par + symbol),\n          lookbehind: true\n        },\n        punctuation: [\n        // open paren, brackets, and close paren\n        /(['`,]?\\(|[)\\[\\]])/,\n        // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }]\n      };\n\n      var arg = {\n        'lisp-marker': new RegExp(marker),\n        rest: {\n          argument: {\n            pattern: new RegExp(symbol),\n            alias: 'variable'\n          },\n          varform: {\n            pattern: new RegExp(par + symbol + '\\\\s+\\\\S[\\\\s\\\\S]*' + endpar),\n            lookbehind: true,\n            inside: {\n              string: language.string,\n              boolean: language.boolean,\n              number: language.number,\n              symbol: language.symbol,\n              punctuation: /[()]/\n            }\n          }\n        }\n      };\n\n      var forms = '\\\\S+(?:\\\\s+\\\\S+)*';\n\n      var arglist = {\n        pattern: new RegExp(par + '[\\\\s\\\\S]*' + endpar),\n        lookbehind: true,\n        inside: {\n          'rest-vars': {\n            pattern: new RegExp('&(?:rest|body)\\\\s+' + forms),\n            inside: arg\n          },\n          'other-marker-vars': {\n            pattern: new RegExp('&(?:optional|aux)\\\\s+' + forms),\n            inside: arg\n          },\n          keys: {\n            pattern: new RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n            inside: arg\n          },\n          argument: {\n            pattern: new RegExp(symbol),\n            alias: 'variable'\n          },\n          punctuation: /[()]/\n        }\n      };\n\n      language.lambda.inside.arguments = arglist;\n      language.defun.inside.arguments = Prism.util.clone(arglist);\n      language.defun.inside.arguments.inside.sublist = arglist;\n\n      Prism.languages.lisp = language;\n      Prism.languages.elisp = language;\n      Prism.languages.emacs = language;\n      Prism.languages['emacs-lisp'] = language;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":192,"files":[{"filePath":"node_modules/reprism/languages/languages/lisp.js","startLine":1,"endLine":192},{"filePath":"node_modules/reprism/lib/languages/lisp.js","startLine":1,"endLine":192}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'liquid',\n  init: function init(Prism) {\n    Prism.languages.liquid = {\n      keyword: /\\b(?:comment|endcomment|if|elsif|else|endif|unless|endunless|for|endfor|case|endcase|when|in|break|assign|continue|limit|offset|range|reversed|raw|endraw|capture|endcapture|tablerow|endtablerow)\\b/,\n      number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n      operator: {\n        pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^|[\\s;|&])(?:append|prepend|capitalize|cycle|cols|increment|decrement|abs|at_least|at_most|ceil|compact|concat|date|default|divided_by|downcase|escape|escape_once|first|floor|join|last|lstrip|map|minus|modulo|newline_to_br|plus|remove|remove_first|replace|replace_first|reverse|round|rstrip|size|slice|sort|sort_natural|split|strip|strip_html|strip_newlines|times|truncate|truncatewords|uniq|upcase|url_decode|url_encode|include|paginate)(?=$|[\\s;|&])/,\n        lookbehind: true\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/languages/languages/liquid.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/liquid.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'less',\n  init: function init(Prism) {\n    /* FIXME :\n    :extend() is not handled specifically : its highlighting is buggy.\n    Mixin usage must be inside a ruleset to be highlighted.\n    At-rules (e.g. import) containing interpolations are buggy.\n    Detached rulesets are highlighted as at-rules.\n    A comment before a mixin usage prevents the latter to be properly highlighted.\n    */\n\n    Prism.languages.less = Prism.languages.extend('css', {\n      comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }],\n      atrule: {\n        pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n        inside: {\n          punctuation: /[:()]/\n        }\n      },\n      // selectors and mixins are considered the same\n      selector: {\n        pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n        inside: {\n          // mixin parameters\n          variable: /@+[\\w-]+/\n        }\n      },\n\n      property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n      punctuation: /[{}();:,]/,\n      operator: /[+\\-*\\/]/\n    });\n\n    // Invert function and punctuation positions\n    Prism.languages.insertBefore('less', 'punctuation', {\n      function: Prism.languages.less.function\n    });\n\n    Prism.languages.insertBefore('less', 'property', {\n      variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      },\n\n      // Variable usage\n      /@@?[\\w-]+/],\n      'mixin-usage': {\n        pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n        lookbehind: true,\n        alias: 'function'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":66,"files":[{"filePath":"node_modules/reprism/languages/languages/less.js","startLine":1,"endLine":66},{"filePath":"node_modules/reprism/lib/languages/less.js","startLine":1,"endLine":66}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'latex',\n  init: function init(Prism) {\n    (function (Prism) {\n      var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\n          insideEqu = {\n        'equation-command': {\n          pattern: funcPattern,\n          alias: 'regex'\n        }\n      };\n\n      Prism.languages.latex = {\n        comment: /%.*/m,\n        // the verbatim environment prints whitespace to the document\n        cdata: {\n          pattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true\n        },\n        /*\n        * equations can be between $ $ or \\( \\) or \\[ \\]\n        * (all are multiline)\n        */\n        equation: [{\n          pattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        }, {\n          pattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }],\n        /*\n        * arguments which are keywords or references are highlighted\n        * as keywords\n        */\n        keyword: {\n          pattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n          lookbehind: true\n        },\n        url: {\n          pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n          lookbehind: true\n        },\n        /*\n        * section or chapter headlines are highlighted as bold so that\n        * they stand out more\n        */\n        headline: {\n          pattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n          lookbehind: true,\n          alias: 'class-name'\n        },\n        function: {\n          pattern: funcPattern,\n          alias: 'selector'\n        },\n        punctuation: /[[\\]{}&]/\n      };\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":68,"files":[{"filePath":"node_modules/reprism/languages/languages/latex.js","startLine":1,"endLine":68},{"filePath":"node_modules/reprism/lib/languages/latex.js","startLine":1,"endLine":68}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'kotlin',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.kotlin = Prism.languages.extend('clike', {\n        keyword: {\n          // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n          pattern: /(^|[^.])\\b(?:abstract|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|else|enum|final|finally|for|fun|get|if|import|in|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|out|override|package|private|protected|public|reified|return|sealed|set|super|tailrec|this|throw|to|try|val|var|when|where|while)\\b/,\n          lookbehind: true\n        },\n        function: [/\\w+(?=\\s*\\()/, {\n          pattern: /(\\.)\\w+(?=\\s*\\{)/,\n          lookbehind: true\n        }],\n        number: /\\b(?:0[bx][\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?[fFL]?)\\b/,\n        operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n      });\n\n      delete Prism.languages.kotlin['class-name'];\n\n      Prism.languages.insertBefore('kotlin', 'string', {\n        'raw-string': {\n          pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n          alias: 'string'\n          // See interpolation below\n        }\n      });\n      Prism.languages.insertBefore('kotlin', 'keyword', {\n        annotation: {\n          pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n          alias: 'builtin'\n        }\n      });\n      Prism.languages.insertBefore('kotlin', 'function', {\n        label: {\n          pattern: /\\w+@|@\\w+/,\n          alias: 'symbol'\n        }\n      });\n\n      var interpolation = [{\n        pattern: /\\$\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.kotlin\n        }\n      }, {\n        pattern: /\\$\\w+/,\n        alias: 'variable'\n      }];\n\n      Prism.languages.kotlin.string.inside = Prism.languages.kotlin['raw-string'].inside = {\n        interpolation: interpolation\n      };\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":65,"files":[{"filePath":"node_modules/reprism/languages/languages/kotlin.js","startLine":1,"endLine":65},{"filePath":"node_modules/reprism/lib/languages/kotlin.js","startLine":1,"endLine":65}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'keyman',\n  init: function init(Prism) {\n    Prism.languages.keyman = {\n      comment: /\\bc\\s.*/i,\n      function: /\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i, // virtual key\n      string: /(\"|').*?\\1/,\n      bold: [\n      // header statements, system stores and variable system stores\n      /&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i, /\\b(?:bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i],\n      keyword: /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i, // rule keywords\n      atrule: /\\b(?:ansi|begin|unicode|group|using keys|match|nomatch)\\b/i, // structural keywords\n      number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i, // U+####, x###, d### characters and numbers\n      operator: /[+>\\\\,()]/,\n      tag: /\\$(?:keyman|kmfl|weaver|keymanweb|keymanonly):/i // prefixes\n    };\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/languages/languages/keyman.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/keyman.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'julia',\n  init: function init(Prism) {\n    Prism.languages.julia = {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      },\n      string: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2/,\n      keyword: /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?/i,\n      operator: /[-+*^%??&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~?????????]/,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/languages/languages/julia.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/julia.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'jsx',\n  init: function init(Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript);\n\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n    Prism.languages.jsx.tag.pattern = /<\\/?[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{[^}]*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?>/i;\n\n    Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n\n    Prism.languages.insertBefore('inside', 'attr-name', {\n      spread: {\n        pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n        inside: {\n          punctuation: /\\.{3}|[{}.]/,\n          'attr-value': /\\w+/\n        }\n      }\n    }, Prism.languages.jsx.tag);\n\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      script: {\n        // Allow for one level of nesting\n        pattern: /=(\\{(?:\\{[^}]*\\}|[^}])+\\})/i,\n        inside: {\n          'script-punctuation': {\n            pattern: /^=(?={)/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.jsx\n        },\n        alias: 'language-javascript'\n      }\n    }, Prism.languages.jsx.tag);\n\n    // The following will handle plain text inside tags\n    var stringifyToken = function stringifyToken(token) {\n      if (typeof token === 'string') {\n        return token;\n      }\n      if (typeof token.content === 'string') {\n        return token.content;\n      }\n      return token.content.map(stringifyToken).join('');\n    };\n\n    var walkTokens = function walkTokens(tokens) {\n      var openedTags = [];\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        var notTagNorBrace = false;\n\n        if (typeof token !== 'string') {\n          if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n            // We found a tag, now find its kind\n\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n                // Pop matching opening tag\n                openedTags.pop();\n              }\n            } else if (token.content[token.content.length - 1].content === '/>') {\n              // Autoclosed tag, ignore\n            } else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++;\n          } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--;\n          } else {\n            notTagNorBrace = true;\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token);\n\n            // And merge text with adjacent text\n            if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n              plainText += stringifyToken(tokens[i + 1]);\n              tokens.splice(i + 1, 1);\n            }\n            if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText;\n              tokens.splice(i - 1, 1);\n              i--;\n            }\n\n            tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n          }\n        }\n\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content);\n        }\n      }\n    };\n\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return;\n      }\n      walkTokens(env.tokens);\n    });\n  }\n};","nrTokens":0,"nrLines":121,"files":[{"filePath":"node_modules/reprism/languages/languages/jsx.js","startLine":1,"endLine":121},{"filePath":"node_modules/reprism/lib/languages/jsx.js","startLine":1,"endLine":121}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'json',\n  init: function init(Prism) {\n    Prism.languages.json = {\n      property: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/i,\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n        greedy: true\n      },\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      punctuation: /[{}[\\]);,]/,\n      operator: /:/g,\n      boolean: /\\b(?:true|false)\\b/i,\n      null: /\\bnull\\b/i\n    };\n\n    Prism.languages.jsonp = Prism.languages.json;\n  }\n};","nrTokens":0,"nrLines":24,"files":[{"filePath":"node_modules/reprism/languages/languages/json.js","startLine":1,"endLine":24},{"filePath":"node_modules/reprism/lib/languages/json.js","startLine":1,"endLine":24}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'jolie',\n  init: function init(Prism) {\n    Prism.languages.jolie = Prism.languages.extend('clike', {\n      keyword: /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,\n      builtin: /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n      operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,\n      symbol: /[|;@]/,\n      punctuation: /[,.]/,\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    });\n\n    delete Prism.languages.jolie['class-name'];\n    delete Prism.languages.jolie.function;\n\n    Prism.languages.insertBefore('jolie', 'keyword', {\n      function: {\n        pattern: /((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,\n        lookbehind: true\n      },\n      aggregates: {\n        pattern: /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n        lookbehind: true,\n        inside: {\n          withExtension: {\n            pattern: /\\bwith\\s+\\w+/,\n            inside: {\n              keyword: /\\bwith\\b/\n            }\n          },\n          function: {\n            pattern: /\\w+/\n          },\n          punctuation: {\n            pattern: /,/\n          }\n        }\n      },\n      redirects: {\n        pattern: /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n        lookbehind: true,\n        inside: {\n          punctuation: {\n            pattern: /,/\n          },\n          function: {\n            pattern: /\\w+/\n          },\n          symbol: {\n            pattern: /=>/\n          }\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":65,"files":[{"filePath":"node_modules/reprism/languages/languages/jolie.js","startLine":1,"endLine":65},{"filePath":"node_modules/reprism/lib/languages/jolie.js","startLine":1,"endLine":65}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'javascript',\n  init: function init(Prism) {\n    Prism.languages.javascript = Prism.languages.extend('clike', {\n      keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n      number: /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n      function: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n      operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n    });\n\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      regex: {\n        pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n        lookbehind: true,\n        greedy: true\n      },\n      // This must be declared before keyword because we use \"function\" inside the look-forward\n      'function-variable': {\n        pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n        alias: 'function'\n      },\n      constant: /\\b[A-Z][A-Z\\d_]*\\b/\n    });\n\n    Prism.languages.insertBefore('javascript', 'string', {\n      'template-string': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /\\$\\{[^}]+\\}/,\n            inside: {\n              'interpolation-punctuation': {\n                pattern: /^\\$\\{|\\}$/,\n                alias: 'punctuation'\n              },\n              rest: Prism.languages.javascript\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    });\n\n    if (Prism.languages.markup) {\n      Prism.languages.insertBefore('markup', 'tag', {\n        script: {\n          pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n          lookbehind: true,\n          inside: Prism.languages.javascript,\n          alias: 'language-javascript',\n          greedy: true\n        }\n      });\n    }\n\n    Prism.languages.js = Prism.languages.javascript;\n  }\n};","nrTokens":0,"nrLines":65,"files":[{"filePath":"node_modules/reprism/languages/languages/javascript.js","startLine":1,"endLine":65},{"filePath":"node_modules/reprism/lib/languages/javascript.js","startLine":1,"endLine":65}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'java',\n  init: function init(Prism) {\n    Prism.languages.java = Prism.languages.extend('clike', {\n      keyword: /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n      number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n      operator: {\n        pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n        lookbehind: true\n      }\n    });\n\n    Prism.languages.insertBefore('java', 'function', {\n      annotation: {\n        alias: 'punctuation',\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true\n      }\n    });\n\n    Prism.languages.insertBefore('java', 'class-name', {\n      generics: {\n        pattern: /<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,\n        alias: 'function',\n        inside: {\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[<>(),.:]/\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/languages/languages/java.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/java.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'j',\n  init: function init(Prism) {\n    Prism.languages.j = {\n      comment: /\\bNB\\..*/,\n      string: {\n        pattern: /'(?:''|[^'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword: /\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n      verb: {\n        // Negative look-ahead prevents bad highlighting\n        // of ^: ;. =. =: !. !:\n        pattern: /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n        alias: 'keyword'\n      },\n      number: /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_(?!\\.))/,\n      adverb: {\n        pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n        alias: 'builtin'\n      },\n      operator: /[=a][.:]|_\\./,\n      conjunction: {\n        pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n        alias: 'variable'\n      },\n      punctuation: /[()]/\n    };\n  }\n};","nrTokens":0,"nrLines":35,"files":[{"filePath":"node_modules/reprism/languages/languages/j.js","startLine":1,"endLine":35},{"filePath":"node_modules/reprism/lib/languages/j.js","startLine":1,"endLine":35}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'io',\n  init: function init(Prism) {\n    Prism.languages.io = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }],\n      'triple-quoted-string': {\n        pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:activate|activeCoroCount|asString|block|break|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getSlot|getEnvironmentVariable|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|call|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n      builtin: /\\b(?:Array|AudioDevice|AudioMixer|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Regex|SGML|SGMLElement|SGMLParser|SQLite|Server|Sequence|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink|Random|BigNum|Sequence)\\b/,\n      boolean: /\\b(?:true|false|nil)\\b/,\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?/i,\n      operator: /[=!*/%+-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|(\\b(?:return|and|or|not)\\b)|@@?|\\?\\??|\\.\\./,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/languages/languages/io.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/io.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ini',\n  init: function init(Prism) {\n    Prism.languages.ini = {\n      comment: /^[ \\t]*;.*$/m,\n      selector: /^[ \\t]*\\[.*?\\]/m,\n      constant: /^[ \\t]*[^\\s=]+?(?=[ \\t]*=)/m,\n      'attr-value': {\n        pattern: /=.*/,\n        inside: {\n          punctuation: /^[=]/\n        }\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/languages/languages/ini.js","startLine":1,"endLine":21},{"filePath":"node_modules/reprism/lib/languages/ini.js","startLine":1,"endLine":21}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'inform7',\n  init: function init(Prism) {\n    Prism.languages.inform7 = {\n      string: {\n        pattern: /\"[^\"]*\"/,\n        inside: {\n          substitution: {\n            pattern: /\\[[^\\]]+\\]/,\n            inside: {\n              delimiter: {\n                pattern: /\\[|\\]/,\n                alias: 'punctuation'\n              }\n              // See rest below\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /\\[[^\\]]+\\]/,\n        greedy: true\n      },\n      title: {\n        pattern: /^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,\n        alias: 'important'\n      },\n      number: {\n        pattern: /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?\\w*|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,\n        lookbehind: true\n      },\n      verb: {\n        pattern: /(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      keyword: {\n        pattern: /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n        lookbehind: true\n      },\n      property: {\n        pattern: /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      position: {\n        pattern: /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      type: {\n        pattern: /(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      punctuation: /[.,:;(){}]/\n    };\n\n    Prism.languages.inform7.string.inside.substitution.inside.rest = Prism.languages.inform7;\n    // We don't want the remaining text in the substitution to be highlighted as the string.\n    Prism.languages.inform7.string.inside.substitution.inside.rest.text = {\n      pattern: /\\S(?:\\s*\\S)*/,\n      alias: 'comment'\n    };\n  }\n};","nrTokens":0,"nrLines":71,"files":[{"filePath":"node_modules/reprism/languages/languages/inform7.js","startLine":1,"endLine":71},{"filePath":"node_modules/reprism/lib/languages/inform7.js","startLine":1,"endLine":71}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'icon',\n  init: function init(Prism) {\n    Prism.languages.icon = {\n      comment: /#.*/,\n      string: {\n        pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n      'builtin-keyword': {\n        pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n        alias: 'variable'\n      },\n      directive: {\n        pattern: /\\$\\w+/,\n        alias: 'builtin'\n      },\n      keyword: /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n      function: /(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n      operator: /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n      punctuation: /[\\[\\](){},;]/\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/languages/icon.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/icon.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ichigojam',\n  init: function init(Prism) {\n    // according to the offical reference (EN)\n    // https://ichigojam.net/IchigoJam-en.html\n    Prism.languages.ichigojam = {\n      comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n      string: {\n        pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n        greedy: true\n      },\n      number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n      keyword: /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GSB|GOTO|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|RIGHT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n      function: /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n      label: /(?:\\B@[^\\s]+)/i,\n      operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n      punctuation: /[\\[,;:()\\]]/\n    };\n  }\n};","nrTokens":0,"nrLines":25,"files":[{"filePath":"node_modules/reprism/languages/languages/ichigojam.js","startLine":1,"endLine":25},{"filePath":"node_modules/reprism/lib/languages/ichigojam.js","startLine":1,"endLine":25}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'http',\n  init: function init(Prism) {\n    Prism.languages.http = {\n      'request-line': {\n        pattern: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\shttps?:\\/\\/\\S+\\sHTTP\\/[0-9.]+/m,\n        inside: {\n          // HTTP Verb\n          property: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\n          // Path or query argument\n          'attr-name': /:\\w+/\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/1.[01] \\d+.*/m,\n        inside: {\n          // Status, e.g. 200 OK\n          property: {\n            pattern: /(^HTTP\\/1.[01] )\\d+.*/i,\n            lookbehind: true\n          }\n        }\n      },\n      // HTTP header name\n      'header-name': {\n        pattern: /^[\\w-]+:(?=.)/m,\n        alias: 'keyword'\n      }\n\n      // Create a mapping of Content-Type headers to language definitions\n    };var httpLanguages = {\n      'application/json': Prism.languages.javascript,\n      'application/xml': Prism.languages.markup,\n      'text/xml': Prism.languages.markup,\n      'text/html': Prism.languages.markup\n\n      // Insert each content type parser that has its associated language\n      // currently loaded.\n    };for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        var options = {};\n        options[contentType] = {\n          pattern: new RegExp('(content-type:\\\\s*' + contentType + '[\\\\w\\\\W]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\w\\\\W]*', 'i'),\n          lookbehind: true,\n          inside: {\n            rest: httpLanguages[contentType]\n          }\n        };\n        Prism.languages.insertBefore('http', 'header-name', options);\n      }\n    }\n  }\n};","nrTokens":0,"nrLines":58,"files":[{"filePath":"node_modules/reprism/languages/languages/http.js","startLine":1,"endLine":58},{"filePath":"node_modules/reprism/lib/languages/http.js","startLine":1,"endLine":58}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'hsts',\n  init: function init(Prism) {\n    /**\n     * Original by Scott Helme.\n     *\n     * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n     */\n\n    Prism.languages.hsts = {\n      directive: {\n        pattern: /\\b(?:max-age=|includeSubDomains|preload)/,\n        alias: 'keyword'\n      },\n      safe: {\n        pattern: /\\d{8,}/,\n        alias: 'selector'\n      },\n      unsafe: {\n        pattern: /\\d{0,7}/,\n        alias: 'function'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/languages/hsts.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/hsts.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'hpkp',\n  init: function init(Prism) {\n    /**\n     * Original by Scott Helme.\n     *\n     * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n     */\n\n    Prism.languages.hpkp = {\n      directive: {\n        pattern: /\\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256=\"[a-zA-Z\\d+=/]+\"|(?:max-age|report-uri)=|report-to )/,\n        alias: 'keyword'\n      },\n      safe: {\n        pattern: /\\d{7,}/,\n        alias: 'selector'\n      },\n      unsafe: {\n        pattern: /\\d{0,6}/,\n        alias: 'function'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/languages/hpkp.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/hpkp.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'haxe',\n  init: function init(Prism) {\n    Prism.languages.haxe = Prism.languages.extend('clike', {\n      // Strings can be multi-line\n      string: {\n        pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n            lookbehind: true,\n            inside: {\n              interpolation: {\n                pattern: /^\\$\\w*/,\n                alias: 'variable'\n              }\n              // See rest below\n            }\n          }\n        }\n      },\n      // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n      keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n      operator: /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n    });\n    Prism.languages.insertBefore('haxe', 'class-name', {\n      regex: {\n        pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n        greedy: true\n      }\n    });\n    Prism.languages.insertBefore('haxe', 'keyword', {\n      preprocessor: {\n        pattern: /#\\w+/,\n        alias: 'builtin'\n      },\n      metadata: {\n        pattern: /@:?\\w+/,\n        alias: 'symbol'\n      },\n      reification: {\n        pattern: /\\$(?:\\w+|(?=\\{))/,\n        alias: 'variable'\n      }\n    });\n    Prism.languages.haxe.string.inside.interpolation.inside.rest = Prism.languages.haxe;\n    delete Prism.languages.haxe['class-name'];\n  }\n};","nrTokens":0,"nrLines":55,"files":[{"filePath":"node_modules/reprism/languages/languages/haxe.js","startLine":1,"endLine":55},{"filePath":"node_modules/reprism/lib/languages/haxe.js","startLine":1,"endLine":55}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'haskell',\n  init: function init(Prism) {\n    Prism.languages.haskell = {\n      comment: {\n        pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n        lookbehind: true\n      },\n      char: /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n      string: {\n        pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n      import_statement: {\n        // The imported or hidden names are not included in this import\n        // statement. This is because we want to highlight those exactly like\n        // we do for the names in the program.\n        pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n        lookbehind: true,\n        inside: {\n          keyword: /\\b(?:import|qualified|as|hiding)\\b/\n        }\n      },\n      // These are builtin variables only. Constructors are highlighted later as a constant.\n      builtin: /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n      // decimal integers and floating point numbers | octal integers | hexadecimal integers\n      number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n      // Most of this is needed because of the meaning of a single '.'.\n      // If it stands alone freely, it is the function composition.\n      // It may also be a separator between a module name and an identifier => no\n      // operator. If it comes together with other special characters it is an\n      // operator too.\n      operator: /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n      // In Haskell, nearly everything is a variable, do not highlight these.\n      hvariable: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n      constant: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":46,"files":[{"filePath":"node_modules/reprism/languages/languages/haskell.js","startLine":1,"endLine":46},{"filePath":"node_modules/reprism/lib/languages/haskell.js","startLine":1,"endLine":46}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'handlebars',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.handlebars = {\n        comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n        delimiter: {\n          pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n          alias: 'punctuation'\n        },\n        string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n        boolean: /\\b(?:true|false)\\b/,\n        block: {\n          pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        brackets: {\n          pattern: /\\[[^\\]]+\\]/,\n          inside: {\n            punctuation: /\\[|\\]/,\n            variable: /[\\s\\S]+/\n          }\n        },\n        punctuation: /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n        variable: /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n      };\n\n      Prism.hooks.add('before-tokenize', function (env) {\n        var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n      });\n\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":45,"files":[{"filePath":"node_modules/reprism/languages/languages/handlebars.js","startLine":1,"endLine":45},{"filePath":"node_modules/reprism/lib/languages/handlebars.js","startLine":1,"endLine":45}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'haml',\n  init: function init(Prism) {\n    /* TODO\n    Handle multiline code after tag\n     %foo= some |\n    multiline |\n    code |\n    */\n\n    (function (Prism) {\n      Prism.languages.haml = {\n        // Multiline stuff should appear before the rest\n\n        'multiline-comment': {\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,\n          lookbehind: true,\n          alias: 'comment'\n        },\n\n        'multiline-code': [{\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.ruby\n          }\n        }, {\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.ruby\n          }\n        }],\n\n        // See at the end of the file for known filters\n        filter: {\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            }\n          }\n        },\n\n        markup: {\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.markup\n          }\n        },\n        doctype: {\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n          lookbehind: true\n        },\n        tag: {\n          // Allows for one nested group of braces\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n          lookbehind: true,\n          inside: {\n            attributes: [{\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,\n              lookbehind: true,\n              inside: {\n                rest: Prism.languages.ruby\n              }\n            }, {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                  lookbehind: true\n                },\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[=(),]/\n              }\n            }, {\n              pattern: /\\[[^\\]]+\\]/,\n              inside: {\n                rest: Prism.languages.ruby\n              }\n            }],\n            punctuation: /[<>]/\n          }\n        },\n        code: {\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.ruby\n          }\n        },\n        // Interpolations in plain text\n        interpolation: {\n          pattern: /#\\{[^}]+\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^#\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.ruby\n          }\n        },\n        punctuation: {\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n          lookbehind: true\n        }\n      };\n\n      var filter_pattern = '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\n\n      // Non exhaustive list of available filters and associated languages\n      var filters = ['css', { filter: 'coffee', language: 'coffeescript' }, 'erb', 'javascript', 'less', 'markdown', 'ruby', 'scss', 'textile'];\n      var all_filters = {};\n      for (var i = 0, l = filters.length; i < l; i++) {\n        var filter = filters[i];\n        filter = typeof filter === 'string' ? { filter: filter, language: filter } : filter;\n        if (Prism.languages[filter.language]) {\n          all_filters['filter-' + filter.filter] = {\n            pattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter)),\n            lookbehind: true,\n            inside: {\n              'filter-name': {\n                pattern: /^:[\\w-]+/,\n                alias: 'variable'\n              },\n              rest: Prism.languages[filter.language]\n            }\n          };\n        }\n      }\n\n      Prism.languages.insertBefore('haml', 'filter', all_filters);\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":145,"files":[{"filePath":"node_modules/reprism/languages/languages/haml.js","startLine":1,"endLine":145},{"filePath":"node_modules/reprism/lib/languages/haml.js","startLine":1,"endLine":145}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'groovy',\n  init: function init(Prism) {\n    Prism.languages.groovy = Prism.languages.extend('clike', {\n      keyword: /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n      string: [{\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1|(?:\\$\\/)(?:\\$\\/\\$|[\\s\\S])*?\\/\\$/,\n        greedy: true\n      }, {\n        pattern: /([\"'\\/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }],\n      number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,\n      operator: {\n        pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    });\n\n    Prism.languages.insertBefore('groovy', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment'\n      }\n    });\n\n    Prism.languages.insertBefore('groovy', 'punctuation', {\n      'spock-block': /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\n    });\n\n    Prism.languages.insertBefore('groovy', 'function', {\n      annotation: {\n        alias: 'punctuation',\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true\n      }\n    });\n\n    // Handle string interpolation\n    Prism.hooks.add('wrap', function (env) {\n      if (env.language === 'groovy' && env.type === 'string') {\n        var delimiter = env.content[0];\n\n        if (delimiter != \"'\") {\n          var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n          if (delimiter === '$') {\n            pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n          }\n\n          // To prevent double HTML-encoding we have to decode env.content first\n          env.content = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n\n          env.content = Prism.highlight(env.content, {\n            expression: {\n              pattern: pattern,\n              lookbehind: true,\n              inside: Prism.languages.groovy\n            }\n          });\n\n          env.classes.push(delimiter === '/' ? 'regex' : 'gstring');\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":72,"files":[{"filePath":"node_modules/reprism/languages/languages/groovy.js","startLine":1,"endLine":72},{"filePath":"node_modules/reprism/lib/languages/groovy.js","startLine":1,"endLine":72}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'graphql',\n  init: function init(Prism) {\n    Prism.languages.graphql = {\n      comment: /#.*/,\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      boolean: /\\b(?:true|false)\\b/,\n      variable: /\\$[a-z_]\\w*/i,\n      directive: {\n        pattern: /@[a-z_]\\w*/i,\n        alias: 'function'\n      },\n      'attr-name': /[a-z_]\\w*(?=\\s*:)/i,\n      keyword: [{\n        pattern: /(fragment\\s+(?!on)[a-z_]\\w*\\s+|\\.{3}\\s*)on\\b/,\n        lookbehind: true\n      }, /\\b(?:query|fragment|mutation)\\b/],\n      operator: /!|=|\\.{3}/,\n      punctuation: /[!(){}\\[\\]:=,]/\n    };\n  }\n};","nrTokens":0,"nrLines":31,"files":[{"filePath":"node_modules/reprism/languages/languages/graphql.js","startLine":1,"endLine":31},{"filePath":"node_modules/reprism/lib/languages/graphql.js","startLine":1,"endLine":31}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'go',\n  init: function init(Prism) {\n    Prism.languages.go = Prism.languages.extend('clike', {\n      keyword: /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n      builtin: /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n      boolean: /\\b(?:_|iota|nil|true|false)\\b/,\n      operator: /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n      number: /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n      string: {\n        pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      }\n    });\n    delete Prism.languages.go['class-name'];\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/languages/languages/go.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/go.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'glsl',\n  init: function init(Prism) {\n    Prism.languages.glsl = Prism.languages.extend('clike', {\n      comment: [/\\/\\*[\\s\\S]*?\\*\\//, /\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/],\n      number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,\n      keyword: /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n    });\n\n    Prism.languages.insertBefore('glsl', 'comment', {\n      preprocessor: {\n        pattern: /(^[ \\t]*)#(?:(?:define|undef|if|ifdef|ifndef|else|elif|endif|error|pragma|extension|version|line)\\b)?/m,\n        lookbehind: true,\n        alias: 'builtin'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/languages/languages/glsl.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/glsl.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\t\t\t\t\tvalue: true\n});\nexports.default = {\n\t\t\t\t\tlanguage: 'git',\n\t\t\t\t\tinit: function init(Prism) {\n\t\t\t\t\t\t\t\t\t\tPrism.languages.git = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * A simple one line comment like in a git status command\n               * For instance:\n               * $ git status\n               * # On branch infinite-scroll\n               * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n               * # and have 1 and 2 different commits each, respectively.\n               * nothing to commit (working directory clean)\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomment: /^#.*/m,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * Regexp to match the changed lines in a git diff output. Check the example below.\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleted: /^[-???].*/m,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinserted: /^\\+.*/m,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * a string (double and simple quote)\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstring: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n               * For instance:\n               * $ git add file.txt\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpattern: /^.*\\$ git .*$/m,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n                         * A git command can contain a parameter starting by a single or a double dash followed by a string\n                         * For instance:\n                         * $ git diff --cached\n                         * $ git log -p\n                         */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparameter: /\\s--?\\w+/m\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * Coordinates displayed in a git diff command\n               * For instance:\n               * $ git diff\n               * diff --git file.txt file.txt\n               * index 6214953..1d54a52 100644\n               * --- file.txt\n               * +++ file.txt\n               * @@ -1 +1,2 @@\n               * -Here's my tetx file\n               * +Here's my text file\n               * +And this is the second line\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcoord: /^@@.*@@$/m,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * Match a \"commit [SHA1]\" line in a git log output.\n               * For instance:\n               * $ git log\n               * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n               * Author: lgiraudel\n               * Date:   Mon Feb 17 11:18:34 2014 +0100\n               *\n               *     Add of a new line\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommit_sha1: /^commit \\w{40}$/m\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t}\n};","nrTokens":0,"nrLines":78,"files":[{"filePath":"node_modules/reprism/languages/languages/git.js","startLine":1,"endLine":78},{"filePath":"node_modules/reprism/lib/languages/git.js","startLine":1,"endLine":78}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'gherkin',\n  init: function init(Prism) {\n    Prism.languages.gherkin = {\n      pystring: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        alias: 'string'\n      },\n      comment: {\n        pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)#.*/,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)@\\S*/,\n        lookbehind: true\n      },\n      feature: {\n        pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Caracter??stica|Egenskab|Egenskap|Eiginleiki|Feature|F????a|Fitur|Fonctionnalit??|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Func??ionalitate|Func??ionalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalit??te|Funkcionalnost|Funkcja|Funksie|Funktionalit??t|Funktionalit??it|Funzionalit??|Hwaet|Hw??t|Jellemz??|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogu??nost|Moznosti|Mo??nosti|OH HAI|Omadus|Ominaisuus|Osobina|??zellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Po??adavek|Po??iadavka|Pretty much|Qap|Qu'meH 'ut|Savyb??|T??nh n??ng|Trajto|Vermo??|Vlastnos??|W??a??ciwo????|Zna??ilnost|????????????????????|????????????????????|??????????????????|??????????????????|??????????????|????????????????|????????????????????????????|????????????????????|????????????????????????????|??????????????|????????????????????|??????????|??????????|????????????|????????????|?????????????? ???? ??????????|????????????|????????? ?????????|??????????????????|????????? ???????????????|????????????????????????|???????????????|??????????????????|????????????????????????????????????????????????????????????|??????????????????????????????|????????????????????????|??????|???????????????|??????|??????):(?:[^:]+(?:\\r?\\n|\\r|$))*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]+/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      scenario: {\n        pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|??r|Agtergrond|All y'all|Antecedentes|Antecedents|Atbur??ar??s|Atbur??ar??sir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|B???i c???nh|Cefndir|Cenario|Cen??rio|Cenario de Fundo|Cen??rio de Fundo|Cenarios|Cen??rios|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|D??mi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delinea????o do Cen??rio|Dis is what went down|D??? li???u|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cen??rio|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgat??k??nyv|Forgat??k??nyv v??zlat|Fundo|Ge??mi??|ghantoH|Grundlage|Hannergrond|H??tt??r|Heave to|Istorik|Juhtumid|Keadaan|Khung k???ch b???n|Khung t??nh hu???ng|K???ch b???n|Koncept|Konsep skenario|Kont??ks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|L??sing Atbur??ar??sar|L??sing D??ma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|N????rt Scen??ra|N????rt Sc??n????e|N????rt Scen??ru|Oris scenarija|??rnekler|Osnova|Osnova Scen??ra|Osnova sc??n????e|Osnutek|Ozadje|Paraugs|Pavyzd??iai|P??ld??k|Piem??ri|Plan du sc??nario|Plan du Sc??nario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozad??|Pozadie|Pozadina|Pr??klady|P????klady|Primer|Primeri|Primjeri|Przyk??ady|Raamstsenaarium|Reckon it's like|Rerefons|Scen??r|Sc??n????|Scenarie|Scenarij|Scenarijai|Scenarijaus ??ablonas|Scenariji|Scen??rijs|Scen??rijs p??c parauga|Scenarijus|Scenario|Sc??nario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ??e|Se the|Se ??e|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo tasla????|Shiver me timbers|Situ??cija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structur?? scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hw??r swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|T??nh hu???ng|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo\\-ho\\-ho|You'll wanna|Za??o??enia|????????????????????????|?????????????????? ????????????????|??????????????|??????????????|????????????????|??????????|????????????????|??????????????|????????????????|????????????????|????????????|????????????????????|????????????????|??????????????????????|??????????????????????|????????????????|????????????|??????????????|??????????????|?????????? ???? ????????????????|??????????|?????????????????? ??????????????????|?????????????????? ????????????????|?????????????????? ????????????????|????????????????|???????????????? ??????????????????????|?????????????????????? ????????????????|??????????????????|????????????????|????????????????|??????????|????????????????|??????????????|??????|?????????? ??????????|??????????|??????????????|?????????? ????????????|??????????|???? ????????|??????????|????????????|??????????????|?????????????? ????????|????????????|???????? ???????? ???? ????????|????????????????|?????????? ????|??????????????????|????????????????????????|???????????????????????? ?????????????????????|???????????????????????????|????????????????????????|???????????????|??????????????? ???????????????|??????????????? ????????? ????????????|??????????????????|????????????????????????|????????????|?????????????????????|???????????????????????????|??????????????????????????????|???????????????????????????|??????????????????|????????????????????????|???????????????????????????????????????????????????????????????|??????????????????????????????????????????|?????????????????????????????????????????????|??????????????????|???????????????????????????????????????|???????????????????????????|??????|????????????|???????????? ??????|???|????????????|????????????|??????????????????????????????|????????????????????????|??????????????????????????????|????????????|???|??????|??????|????????????|??????|????????????|??????|????????????|??????|????????????|??????):[^:\\r\\n]*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]*/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      'table-body': {\n        // Look-behind is used to skip the table head, which has the same format as any table row\n        pattern: /((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+/,\n        lookbehind: true,\n        inside: {\n          outline: {\n            pattern: /<[^>]+?>/,\n            alias: 'variable'\n          },\n          td: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'string'\n          },\n          punctuation: /\\|/\n        }\n      },\n      'table-head': {\n        pattern: /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*/,\n        inside: {\n          th: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'variable'\n          },\n          punctuation: /\\|/\n        }\n      },\n      atrule: {\n        pattern: /((?:\\r?\\n|\\r)[ \\t]+)(?:'ach|'a|'ej|7|a|A tak??|A taktie??|A tie??|A z??rove??|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|At??s|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Bi???t|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|C??nd|Cando|Cand|Ce|Cuando|??e|??a ??e|??a|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Da??i fiind|Da??i fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donita??o|Do|Dun|Duota|??urh|Eeldades|Ef|E??er ki|Entao|Ent??o|Ent??n|Entonces|En|Epi|E|??s|Etant donn??e|Etant donn??|Et|??tant donn??es|??tant donn??e|??tant donn??|Etant donn??es|Etant donn??s|??tant donn??s|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Je??li|Je??eli|Kadar|Kada|Kad|Kai|Kaj|Kdy??|Ke??|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|L?? sa a|L??|Logo|Lorsqu'<|Lorsque|m??|Maar|Mais|Maj??c|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|N??r|N??r|Nato|Nh??ng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Per??|Podano|Pokia??|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|S??|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|??i|??i|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Th??|Thurh|Toda|Too right|ugeholl|Und|Un|V??|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za p??edpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zak??adaj??c|Zaradi|Zatati|??a ??e|??a|????|??egar|??urh|????????|??????????????????|??????|????????|????????|?? ??????????|????????|??????|??????|????????|??|????????|??????????|????????|??????????|????|????|????????????|????????|????????????????|????????|????????????|????????????|????????????|??|??|?? ???????? ????|????????|??????|????????????|??????????|????????|??????????|??????????|????????????????|??????????|????|????????|????????????????????, ????|????????????????????|??????????|??????????|????|??????????|????????|????|????????|??????|????????|??????|??????|????|????????????|??????|????????|??????????|????????|??????|??????|??????|???? ??????|????????????|????????|??????|????|????|????|??????????|?????? ??????|??????|????????|??????|????????????|??|?????????|??????|?????????|??????????????????|???????????????|??????|?????????|?????????|??????|??????????????????|??????|?????????|?????????|????????????|??????????????? ??????|????????????|??????|??????|?????????????????????|??? ?????????????????????????????????|????????????|?????????????????????????????????|???????????????|????????????|????????????|??????????????????|???????????????|?????????????????????????????????|????????????????????????|?????????????????????|?????????|???????????????|?????????|?????????<|?????????<|???<|??????<|??????<|??????<|??????<|?????????<|??????<|?????????<|?????????<|?????????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|???<|???<|??????<|??????<|??????<)(?=[ \\t]+)/,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n        inside: {\n          outline: {\n            pattern: /<[^>]+?>/,\n            alias: 'variable'\n          }\n        }\n      },\n      outline: {\n        pattern: /<[^>]+?>/,\n        alias: 'variable'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":89,"files":[{"filePath":"node_modules/reprism/languages/languages/gherkin.js","startLine":1,"endLine":89},{"filePath":"node_modules/reprism/lib/languages/gherkin.js","startLine":1,"endLine":89}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'gedcom',\n  init: function init(Prism) {\n    Prism.languages.gedcom = {\n      'line-value': {\n        // Preceded by level, optional pointer, and tag\n        pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,\n        lookbehind: true,\n        inside: {\n          pointer: {\n            pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n            alias: 'variable'\n          }\n        }\n      },\n      tag: {\n        // Preceded by level and optional pointer\n        pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n        lookbehind: true,\n        alias: 'string'\n      },\n      level: {\n        pattern: /(^\\s*)\\d+/m,\n        lookbehind: true,\n        alias: 'number'\n      },\n      pointer: {\n        pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n        alias: 'variable'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/languages/languages/gedcom.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/gedcom.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'fsharp',\n  init: function init(Prism) {\n    Prism.languages.fsharp = Prism.languages.extend('clike', {\n      comment: [{\n        pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true\n      }],\n      keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n      string: {\n        pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1)B?/,\n        greedy: true\n      },\n      number: [/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/, /\\b0b[01]+(?:y|uy)?\\b/, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/]\n    });\n    Prism.languages.insertBefore('fsharp', 'keyword', {\n      preprocessor: {\n        pattern: /^[^\\r\\n\\S]*#.*/m,\n        alias: 'property',\n        inside: {\n          directive: {\n            pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/languages/languages/fsharp.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/fsharp.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'fortran',\n  init: function init(Prism) {\n    Prism.languages.fortran = {\n      'quoted-number': {\n        pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n        alias: 'number'\n      },\n      string: {\n        pattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,\n        inside: {\n          comment: {\n            pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n            lookbehind: true\n          }\n        }\n      },\n      comment: {\n        pattern: /!.*/,\n        greedy: true\n      },\n      boolean: /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n      number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n      keyword: [\n      // Types\n      /\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i,\n      // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\n      // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\n      // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i],\n      operator: [/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i, {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }],\n      punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n    };\n  }\n};","nrTokens":0,"nrLines":46,"files":[{"filePath":"node_modules/reprism/languages/languages/fortran.js","startLine":1,"endLine":46},{"filePath":"node_modules/reprism/lib/languages/fortran.js","startLine":1,"endLine":46}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'flow',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.flow = Prism.languages.extend('javascript', {});\n\n      Prism.languages.insertBefore('flow', 'keyword', {\n        type: [{\n          pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n          alias: 'tag'\n        }]\n      });\n      Prism.languages.flow['function-variable'].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i;\n\n      Prism.languages.insertBefore('flow', 'operator', {\n        'flow-punctuation': {\n          pattern: /\\{\\||\\|\\}/,\n          alias: 'punctuation'\n        }\n      });\n\n      if (Prism.util.type(Prism.languages.flow.keyword) !== 'Array') {\n        Prism.languages.flow.keyword = [Prism.languages.flow.keyword];\n      }\n      Prism.languages.flow.keyword.unshift({\n        pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n        lookbehind: true\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/languages/languages/flow.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/flow.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'erlang',\n  init: function init(Prism) {\n    Prism.languages.erlang = {\n      comment: /%.+/,\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      'quoted-function': {\n        pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n        alias: 'function'\n      },\n      'quoted-atom': {\n        pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n        alias: 'atom'\n      },\n      boolean: /\\b(?:true|false)\\b/,\n      keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n      number: [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n      function: /\\b[a-z][\\w@]*(?=\\()/,\n      variable: {\n        // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n        pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n        lookbehind: true\n      },\n      operator: [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      }, {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }],\n      atom: /\\b[a-z][\\w@]*/,\n      punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n    };\n  }\n};","nrTokens":0,"nrLines":45,"files":[{"filePath":"node_modules/reprism/languages/languages/erlang.js","startLine":1,"endLine":45},{"filePath":"node_modules/reprism/lib/languages/erlang.js","startLine":1,"endLine":45}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'erb',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.erb = Prism.languages.extend('ruby', {});\n      Prism.languages.insertBefore('erb', 'comment', {\n        delimiter: {\n          pattern: /^<%=?|%>$/,\n          alias: 'punctuation'\n        }\n      });\n\n      Prism.hooks.add('before-tokenize', function (env) {\n        var erbPattern = /<%=?[\\s\\S]+?%>/g;\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'erb', erbPattern);\n      });\n\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":28,"files":[{"filePath":"node_modules/reprism/languages/languages/erb.js","startLine":1,"endLine":28},{"filePath":"node_modules/reprism/lib/languages/erb.js","startLine":1,"endLine":28}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'elixir',\n  init: function init(Prism) {\n    Prism.languages.elixir = {\n      comment: {\n        pattern: /#.*/m,\n        lookbehind: true\n      },\n      // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n      regex: {\n        pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n        greedy: true\n      },\n      string: [{\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n        pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }, {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }, {\n        // Multi-line strings are allowed\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }],\n      atom: {\n        // Look-behind prevents bad highlighting of the :: operator\n        pattern: /(^|[^:]):\\w+/,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      // Look-ahead prevents bad highlighting of the :: operator\n      'attr-name': /\\w+:(?!:)/,\n      capture: {\n        // Look-behind prevents bad highlighting of the && operator\n        pattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      argument: {\n        // Look-behind prevents bad highlighting of the && operator\n        pattern: /(^|[^&])&\\d+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      attribute: {\n        pattern: /@[\\S]+/,\n        alias: 'variable'\n      },\n      number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n      keyword: /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\n      boolean: /\\b(?:true|false|nil)\\b/,\n      operator: [/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/, {\n        // We don't want to match <<\n        pattern: /([^<])<(?!<)/,\n        lookbehind: true\n      }, {\n        // We don't want to match >>\n        pattern: /([^>])>(?!>)/,\n        lookbehind: true\n      }],\n      punctuation: /<<|>>|[.,%\\[\\]{}()]/\n    };\n\n    Prism.languages.elixir.string.forEach(function (o) {\n      o.inside = {\n        interpolation: {\n          pattern: /#\\{[^}]+\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^#\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.elixir\n          }\n        }\n      };\n    });\n  }\n};","nrTokens":0,"nrLines":94,"files":[{"filePath":"node_modules/reprism/languages/languages/elixir.js","startLine":1,"endLine":94},{"filePath":"node_modules/reprism/lib/languages/elixir.js","startLine":1,"endLine":94}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'eiffel',\n  init: function init(Prism) {\n    Prism.languages.eiffel = {\n      comment: /--.*/,\n      string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      },\n      // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      },\n      // Single-line string\n      {\n        pattern: /\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }],\n      // normal char | special char | char code\n      char: /'(?:%.|[^%'\\r\\n])+'/,\n      keyword: /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n      boolean: /\\b(?:True|False)\\b/i,\n      // Convention: class-names are always all upper-case characters\n      'class-name': {\n        pattern: /\\b[A-Z][\\dA-Z_]*\\b/,\n        alias: 'builtin'\n      },\n      number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n      // Decimal\n      /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/i],\n      punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n      operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n    };\n  }\n};","nrTokens":0,"nrLines":45,"files":[{"filePath":"node_modules/reprism/languages/languages/eiffel.js","startLine":1,"endLine":45},{"filePath":"node_modules/reprism/lib/languages/eiffel.js","startLine":1,"endLine":45}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'docker',\n  init: function init(Prism) {\n    Prism.languages.docker = {\n      keyword: {\n        pattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/im,\n        lookbehind: true\n      },\n      string: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      comment: /#.*/,\n      punctuation: /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\n    };\n\n    Prism.languages.dockerfile = Prism.languages.docker;\n  }\n};","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/languages/languages/docker.js","startLine":1,"endLine":21},{"filePath":"node_modules/reprism/lib/languages/docker.js","startLine":1,"endLine":21}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'django',\n  init: function init(Prism) {\n    // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n    // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n\n    var _django_template = {\n      property: {\n        pattern: /(?:{{|{%)[\\s\\S]*?(?:%}|}})/g,\n        greedy: true,\n        inside: {\n          string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n          },\n          keyword: /\\b(?:\\||load|verbatim|widthratio|ssi|firstof|for|url|ifchanged|csrf_token|lorem|ifnotequal|autoescape|now|templatetag|debug|cycle|ifequal|regroup|comment|filter|endfilter|if|spaceless|with|extends|block|include|else|empty|endif|endfor|as|endblock|endautoescape|endverbatim|trans|endtrans|[Tt]rue|[Ff]alse|[Nn]one|in|is|static|macro|endmacro|call|endcall|set|endset|raw|endraw)\\b/,\n          operator: /[-+=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n          function: /\\b(?:_|abs|add|addslashes|attr|batch|callable|capfirst|capitalize|center|count|cut|d|date|default|default_if_none|defined|dictsort|dictsortreversed|divisibleby|e|equalto|escape|escaped|escapejs|even|filesizeformat|first|float|floatformat|force_escape|forceescape|format|get_digit|groupby|indent|int|iriencode|iterable|join|last|length|length_is|linebreaks|linebreaksbr|linenumbers|list|ljust|lower|make_list|map|mapping|number|odd|phone2numeric|pluralize|pprint|random|reject|rejectattr|removetags|replace|reverse|rjust|round|safe|safeseq|sameas|select|selectattr|sequence|slice|slugify|sort|string|stringformat|striptags|sum|time|timesince|timeuntil|title|trim|truncate|truncatechars|truncatechars_html|truncatewords|truncatewords_html|undefined|unordered_list|upper|urlencode|urlize|urlizetrunc|wordcount|wordwrap|xmlattr|yesno)\\b/,\n          important: /\\b-?\\d+(?:\\.\\d+)?\\b/,\n          variable: /\\b\\w+?\\b/,\n          punctuation: /[[\\];(),.:]/\n        }\n      }\n    };\n\n    Prism.languages.django = Prism.languages.extend('markup', {\n      comment: /(?:<!--|{#)[\\s\\S]*?(?:#}|-->)/\n    });\n    // Updated html tag pattern to allow template tags inside html tags\n    Prism.languages.django.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^>=]+))?)*\\s*\\/?>/i;\n    Prism.languages.insertBefore('django', 'entity', _django_template);\n    Prism.languages.insertBefore('inside', 'tag', _django_template, Prism.languages.django.tag);\n\n    if (Prism.languages.javascript) {\n      // Combine js code and template tags painting inside <script> blocks\n      Prism.languages.insertBefore('inside', 'string', _django_template, Prism.languages.django.script);\n      Prism.languages.django.script.inside.string.inside = _django_template;\n    }\n    if (Prism.languages.css) {\n      // Combine css code and template tags painting inside <style> blocks\n      Prism.languages.insertBefore('inside', 'atrule', { tag: _django_template.property }, Prism.languages.django.style);\n      Prism.languages.django.style.inside.string.inside = _django_template;\n    }\n\n    // Add an Jinja2 alias\n    Prism.languages.jinja2 = Prism.languages.django;\n  }\n};","nrTokens":0,"nrLines":53,"files":[{"filePath":"node_modules/reprism/languages/languages/django.js","startLine":1,"endLine":53},{"filePath":"node_modules/reprism/lib/languages/django.js","startLine":1,"endLine":53}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'diff',\n  init: function init(Prism) {\n    Prism.languages.diff = {\n      coord: [\n      // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n      /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n      // Match \"@@ ... @@\" coord lines in unified diff.\n      /^@@.*@@$/m,\n      // Match coord lines in normal diff (starts with a number).\n      /^\\d+.*$/m],\n\n      // Match inserted and deleted lines. Support both +/- and >/< styles.\n      deleted: /^[-<].*$/m,\n      inserted: /^[+>].*$/m,\n\n      // Match \"different\" lines (prefixed with \"!\") in context diff.\n      diff: {\n        pattern: /^!(?!!).+$/m,\n        alias: 'important'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":29,"files":[{"filePath":"node_modules/reprism/languages/languages/diff.js","startLine":1,"endLine":29},{"filePath":"node_modules/reprism/lib/languages/diff.js","startLine":1,"endLine":29}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'dart',\n  init: function init(Prism) {\n    Prism.languages.dart = Prism.languages.extend('clike', {\n      string: [{\n        pattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true\n      }, {\n        pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }],\n      keyword: [/\\b(?:async|sync|yield)\\*/, /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\\b/],\n      operator: /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n    });\n\n    Prism.languages.insertBefore('dart', 'function', {\n      metadata: {\n        pattern: /@\\w+/,\n        alias: 'symbol'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":28,"files":[{"filePath":"node_modules/reprism/languages/languages/dart.js","startLine":1,"endLine":28},{"filePath":"node_modules/reprism/lib/languages/dart.js","startLine":1,"endLine":28}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'd',\n  init: function init(Prism) {\n    Prism.languages.d = Prism.languages.extend('clike', {\n      string: [\n      // r\"\", x\"\"\n      /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/,\n      // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n      /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/,\n      // q\"IDENT\n      // ...\n      // IDENT\"\n      /\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/,\n      // q\"//\", q\"||\", etc.\n      /\\bq\"(.)[\\s\\S]*?\\1\"/,\n      // Characters\n      /'(?:\\\\'|\\\\?[^']+)'/, /([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/],\n\n      number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i, {\n        pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,\n        lookbehind: true\n      }],\n\n      // In order: $, keywords and special tokens, globally defined symbols\n      keyword: /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n      operator: /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n    });\n\n    Prism.languages.d.comment = [\n    // Shebang\n    /^\\s*#!.+/,\n    // /+ +/\n    {\n      // Allow one level of nesting\n      pattern: /(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,\n      lookbehind: true\n    }].concat(Prism.languages.d.comment);\n\n    Prism.languages.insertBefore('d', 'comment', {\n      'token-string': {\n        // Allow one level of nesting\n        pattern: /\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,\n        alias: 'string'\n      }\n    });\n\n    Prism.languages.insertBefore('d', 'keyword', {\n      property: /\\B@\\w*/\n    });\n\n    Prism.languages.insertBefore('d', 'function', {\n      register: {\n        // Iasm registers\n        pattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n        alias: 'variable'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":67,"files":[{"filePath":"node_modules/reprism/languages/languages/d.js","startLine":1,"endLine":67},{"filePath":"node_modules/reprism/lib/languages/d.js","startLine":1,"endLine":67}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'css',\n  init: function init(Prism) {\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n        inside: {\n          rule: /@[\\w-]+/\n          // See rest below\n        }\n      },\n      url: /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n      selector: /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n      string: {\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n      important: /\\B!important\\b/i,\n      function: /[-a-z0-9]+(?=\\()/i,\n      punctuation: /[(){};:]/\n    };\n\n    Prism.languages.css.atrule.inside.rest = Prism.languages.css;\n\n    if (Prism.languages.markup) {\n      Prism.languages.insertBefore('markup', 'tag', {\n        style: {\n          pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n          lookbehind: true,\n          inside: Prism.languages.css,\n          alias: 'language-css',\n          greedy: true\n        }\n      });\n\n      Prism.languages.insertBefore('inside', 'attr-value', {\n        'style-attr': {\n          pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n          inside: {\n            'attr-name': {\n              pattern: /^\\s*style/i,\n              inside: Prism.languages.markup.tag.inside\n            },\n            punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n            'attr-value': {\n              pattern: /.+/i,\n              inside: Prism.languages.css\n            }\n          },\n          alias: 'language-css'\n        }\n      }, Prism.languages.markup.tag);\n    }\n  }\n};","nrTokens":0,"nrLines":62,"files":[{"filePath":"node_modules/reprism/languages/languages/css.js","startLine":1,"endLine":62},{"filePath":"node_modules/reprism/lib/languages/css.js","startLine":1,"endLine":62}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'css-extras',\n  init: function init(Prism) {\n    Prism.languages.css.selector = {\n      pattern: /[^{}\\s][^{}]*(?=\\s*\\{)/,\n      inside: {\n        'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+(?:\\(.*\\))?/,\n        class: /\\.[-:.\\w]+/,\n        id: /#[-:.\\w]+/,\n        attribute: /\\[[^\\]]+\\]/\n      }\n    };\n\n    Prism.languages.insertBefore('css', 'function', {\n      hexcode: /#[\\da-f]{3,8}/i,\n      entity: /\\\\[\\da-f]{1,8}/i,\n      number: /[\\d%.]+/\n    });\n  }\n};","nrTokens":0,"nrLines":26,"files":[{"filePath":"node_modules/reprism/languages/languages/css-extras.js","startLine":1,"endLine":26},{"filePath":"node_modules/reprism/lib/languages/css-extras.js","startLine":1,"endLine":26}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'csp',\n  init: function init(Prism) {\n    /**\n     * Original by Scott Helme.\n     *\n     * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n     *\n     * Supports the following:\n     *  - CSP Level 1\n     *  - CSP Level 2\n     *  - CSP Level 3\n     */\n\n    Prism.languages.csp = {\n      directive: {\n        pattern: /\\b(?:(?:base-uri|form-action|frame-ancestors|plugin-types|referrer|reflected-xss|report-to|report-uri|require-sri-for|sandbox) |(?:block-all-mixed-content|disown-opener|upgrade-insecure-requests)(?: |;)|(?:child|connect|default|font|frame|img|manifest|media|object|script|style|worker)-src )/i,\n        alias: 'keyword'\n      },\n      safe: {\n        pattern: /'(?:self|none|strict-dynamic|(?:nonce-|sha(?:256|384|512)-)[a-zA-Z\\d+=/]+)'/,\n        alias: 'selector'\n      },\n      unsafe: {\n        pattern: /(?:'unsafe-inline'|'unsafe-eval'|'unsafe-hashed-attributes'|\\*)/,\n        alias: 'function'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":35,"files":[{"filePath":"node_modules/reprism/languages/languages/csp.js","startLine":1,"endLine":35},{"filePath":"node_modules/reprism/lib/languages/csp.js","startLine":1,"endLine":35}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'csharp',\n  init: function init(Prism) {\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n      keyword: /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n      string: [{\n        pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      }, {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n        greedy: true\n      }],\n      'class-name': [{\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n        inside: {\n          punctuation: /\\./\n        }\n      }, {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }, {\n        // class Foo : Bar\n        pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }, {\n        // class Foo\n        pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }],\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i\n    });\n\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      'generic-method': {\n        pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n        inside: {\n          function: /^\\w+/,\n          'class-name': {\n            pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          keyword: Prism.languages.csharp.keyword,\n          punctuation: /[<>(),.:]/\n        }\n      },\n      preprocessor: {\n        pattern: /(^\\s*)#.*/m,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight preprocessor directives as keywords\n          directive: {\n            pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    });\n\n    Prism.languages.dotnet = Prism.languages.csharp;\n  }\n};","nrTokens":0,"nrLines":81,"files":[{"filePath":"node_modules/reprism/languages/languages/csharp.js","startLine":1,"endLine":81},{"filePath":"node_modules/reprism/lib/languages/csharp.js","startLine":1,"endLine":81}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'crystal',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.crystal = Prism.languages.extend('ruby', {\n        keyword: [/\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/, {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }],\n\n        number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n      });\n\n      Prism.languages.insertBefore('crystal', 'string', {\n        attribute: {\n          pattern: /@\\[.+?\\]/,\n          alias: 'attr-name',\n          inside: {\n            delimiter: {\n              pattern: /^@\\[|\\]$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        },\n\n        expansion: [{\n          pattern: /\\{\\{.+?\\}\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{\\{|\\}\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        }, {\n          pattern: /\\{%.+?%\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{%|%\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        }]\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":54,"files":[{"filePath":"node_modules/reprism/languages/languages/crystal.js","startLine":1,"endLine":54},{"filePath":"node_modules/reprism/lib/languages/crystal.js","startLine":1,"endLine":54}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'cpp',\n  init: function init(Prism) {\n    Prism.languages.cpp = Prism.languages.extend('c', {\n      keyword: /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: /--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n    });\n\n    Prism.languages.insertBefore('cpp', 'keyword', {\n      'class-name': {\n        pattern: /(class\\s+)\\w+/i,\n        lookbehind: true\n      }\n    });\n\n    Prism.languages.insertBefore('cpp', 'string', {\n      'raw-string': {\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n        alias: 'string',\n        greedy: true\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/languages/cpp.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/cpp.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'coffeescript',\n  init: function init(Prism) {\n    (function (Prism) {\n      // Ignore comments starting with { to privilege string interpolation highlighting\n      var comment = /#(?!\\{).+/,\n          interpolation = {\n        pattern: /#\\{[^}]+\\}/,\n        alias: 'variable'\n      };\n\n      Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n        comment: comment,\n        string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        }, {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }],\n        keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n        'class-member': {\n          pattern: /@(?!\\d)\\w+/,\n          alias: 'variable'\n        }\n      });\n\n      Prism.languages.insertBefore('coffeescript', 'comment', {\n        'multiline-comment': {\n          pattern: /###[\\s\\S]+?###/,\n          alias: 'comment'\n        },\n\n        // Block regexp can contain comments and interpolation\n        'block-regex': {\n          pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n          alias: 'regex',\n          inside: {\n            comment: comment,\n            interpolation: interpolation\n          }\n        }\n      });\n\n      Prism.languages.insertBefore('coffeescript', 'string', {\n        'inline-javascript': {\n          pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n          inside: {\n            delimiter: {\n              pattern: /^`|`$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n\n        // Block strings\n        'multiline-string': [{\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        }, {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }]\n      });\n\n      Prism.languages.insertBefore('coffeescript', 'keyword', {\n        // Object property\n        property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n      });\n\n      delete Prism.languages.coffeescript['template-string'];\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":91,"files":[{"filePath":"node_modules/reprism/languages/languages/coffeescript.js","startLine":1,"endLine":91},{"filePath":"node_modules/reprism/lib/languages/coffeescript.js","startLine":1,"endLine":91}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'clojure',\n  init: function init(Prism) {\n    // Copied from https://github.com/jeluard/prism-clojure\n    Prism.languages.clojure = {\n      comment: /;+.*/,\n      string: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      operator: /(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i, // used for symbols and keywords\n      keyword: {\n        pattern: /([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def\\-|defn|defn\\-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|\\-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,\n        lookbehind: true\n      },\n      boolean: /\\b(?:true|false|nil)\\b/,\n      number: /\\b[0-9A-Fa-f]+\\b/,\n      punctuation: /[{}\\[\\](),]/\n    };\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/languages/languages/clojure.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/clojure.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'clike',\n  init: function init(Prism) {\n    Prism.languages.clike = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }],\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      function: /[a-z0-9_]+(?=\\()/i,\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n      operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/languages/languages/clike.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/clike.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'c',\n  init: function init(Prism) {\n    Prism.languages.c = Prism.languages.extend('clike', {\n      keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n      operator: /-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,\n      number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n    });\n\n    Prism.languages.insertBefore('c', 'string', {\n      macro: {\n        // allow for multiline macro definitions\n        // spaces after the # character compile fine with gcc\n        pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight the path of the include statement as a string\n          string: {\n            pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n            lookbehind: true\n          },\n          // highlight macro directives as keywords\n          directive: {\n            pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      },\n      // highlight predefined macros as constants\n      constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n    });\n\n    delete Prism.languages.c['class-name'];\n    delete Prism.languages.c.boolean;\n  }\n};","nrTokens":0,"nrLines":43,"files":[{"filePath":"node_modules/reprism/languages/languages/c.js","startLine":1,"endLine":43},{"filePath":"node_modules/reprism/lib/languages/c.js","startLine":1,"endLine":43}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'bro',\n  init: function init(Prism) {\n    Prism.languages.bro = {\n      comment: {\n        pattern: /(^|[^\\\\$])#.*/,\n        lookbehind: true,\n        inside: {\n          italic: /\\b(?:TODO|FIXME|XXX)\\b/\n        }\n      },\n\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n\n      boolean: /\\b[TF]\\b/,\n\n      function: {\n        pattern: /(?:function|hook|event) \\w+(?:::\\w+)?/,\n        inside: {\n          keyword: /^(?:function|hook|event)/\n        }\n      },\n\n      variable: {\n        pattern: /(?:global|local) \\w+/i,\n        inside: {\n          keyword: /(?:global|local)/\n        }\n      },\n\n      builtin: /(?:@(?:load(?:-(?:sigs|plugin))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column))/,\n\n      constant: {\n        pattern: /const \\w+/i,\n        inside: {\n          keyword: /const/\n        }\n      },\n\n      keyword: /\\b(?:break|next|continue|alarm|using|of|add|delete|export|print|return|schedule|when|timeout|addr|any|bool|count|double|enum|file|int|interval|pattern|opaque|port|record|set|string|subnet|table|time|vector|for|if|else|in|module|function)\\b/,\n\n      operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":57,"files":[{"filePath":"node_modules/reprism/languages/languages/bro.js","startLine":1,"endLine":57},{"filePath":"node_modules/reprism/lib/languages/bro.js","startLine":1,"endLine":57}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'brainfuck',\n  init: function init(Prism) {\n    Prism.languages.brainfuck = {\n      pointer: {\n        pattern: /<|>/,\n        alias: 'keyword'\n      },\n      increment: {\n        pattern: /\\+/,\n        alias: 'inserted'\n      },\n      decrement: {\n        pattern: /-/,\n        alias: 'deleted'\n      },\n      branching: {\n        pattern: /\\[|\\]/,\n        alias: 'important'\n      },\n      operator: /[.,]/,\n      comment: /\\S+/\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/languages/brainfuck.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/brainfuck.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'bison',\n  init: function init(Prism) {\n    Prism.languages.bison = Prism.languages.extend('c', {});\n\n    Prism.languages.insertBefore('bison', 'comment', {\n      bison: {\n        // This should match all the beginning of the file\n        // including the prologue(s), the bison declarations and\n        // the grammar rules.\n        pattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,\n        inside: {\n          c: {\n            // Allow for one level of nested braces\n            pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n            inside: {\n              delimiter: {\n                pattern: /^%?\\{|%?\\}$/,\n                alias: 'punctuation'\n              },\n              'bison-variable': {\n                pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n                alias: 'variable',\n                inside: {\n                  punctuation: /<|>/\n                }\n              },\n              rest: Prism.languages.c\n            }\n          },\n          comment: Prism.languages.c.comment,\n          string: Prism.languages.c.string,\n          property: /\\S+(?=:)/,\n          keyword: /%\\w+/,\n          number: {\n            pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n            lookbehind: true\n          },\n          punctuation: /%[%?]|[|:;\\[\\]<>]/\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":49,"files":[{"filePath":"node_modules/reprism/languages/languages/bison.js","startLine":1,"endLine":49},{"filePath":"node_modules/reprism/lib/languages/bison.js","startLine":1,"endLine":49}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'batch',\n  init: function init(Prism) {\n    (function (Prism) {\n      var variable = /%%?[~:\\w]+%?|!\\S+!/;\n      var parameter = {\n        pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n        alias: 'attr-name',\n        inside: {\n          punctuation: /:/\n        }\n      };\n      var string = /\"[^\"]*\"/;\n      var number = /(?:\\b|-)\\d+\\b/;\n\n      Prism.languages.batch = {\n        comment: [/^::.*/m, {\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true\n        }],\n        label: {\n          pattern: /^:.*/m,\n          alias: 'property'\n        },\n        command: [{\n          // FOR command\n          pattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^for\\b|\\b(?:in|do)\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            punctuation: /[()',]/\n          }\n        }, {\n          // IF command\n          pattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            operator: /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n          }\n        }, {\n          // ELSE command\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^else\\b/i\n          }\n        }, {\n          // SET command\n          pattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^set\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n            number: number,\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n            punctuation: /[()',]/\n          }\n        }, {\n          // Other commands\n          pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\w+\\b/i,\n            string: string,\n            parameter: parameter,\n            label: {\n              pattern: /(^\\s*):\\S+/m,\n              lookbehind: true,\n              alias: 'property'\n            },\n            variable: variable,\n            number: number,\n            operator: /\\^/\n          }\n        }],\n        operator: /[&@]/,\n        punctuation: /[()']/\n      };\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":97,"files":[{"filePath":"node_modules/reprism/languages/languages/batch.js","startLine":1,"endLine":97},{"filePath":"node_modules/reprism/lib/languages/batch.js","startLine":1,"endLine":97}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'basic',\n  init: function init(Prism) {\n    Prism.languages.basic = {\n      comment: {\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      string: {\n        pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n        greedy: true\n      },\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n      keyword: /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n      function: /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n      operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n      punctuation: /[,;:()]/\n    };\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/languages/languages/basic.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/basic.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'bash',\n  init: function init(Prism) {\n    (function (Prism) {\n      var insideString = {\n        variable: [\n        // Arithmetic Environment\n        {\n          pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n          inside: {\n            // If there is a $ sign at the beginning highlight $(( and )) as variable\n            variable: [{\n              pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n              lookbehind: true\n            }, /^\\$\\(\\(/],\n            number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n            // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n            operator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n            // If there is no $ sign at the beginning highlight (( and )) as punctuation\n            punctuation: /\\(\\(?|\\)\\)?|,|;/\n          }\n        },\n        // Command Substitution\n        {\n          pattern: /\\$\\([^)]+\\)|`[^`]+`/,\n          greedy: true,\n          inside: {\n            variable: /^\\$\\(|^`|\\)$|`$/\n          }\n        }, /\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]\n      };\n\n      Prism.languages.bash = {\n        shebang: {\n          pattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n          alias: 'important'\n        },\n        comment: {\n          pattern: /(^|[^\"{\\\\])#.*/,\n          lookbehind: true\n        },\n        string: [\n        // Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\n        {\n          pattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        }, {\n          pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n          greedy: true,\n          inside: insideString\n        }],\n        variable: insideString.variable,\n        // Originally based on http://ss64.com/bash/\n        function: {\n          pattern: /(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,\n          lookbehind: true\n        },\n        keyword: {\n          pattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\n          lookbehind: true\n        },\n        boolean: {\n          pattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\n          lookbehind: true\n        },\n        operator: /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n        punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n      };\n\n      var inside = insideString.variable[1].inside;\n      inside.string = Prism.languages.bash.string;\n      inside.function = Prism.languages.bash.function;\n      inside.keyword = Prism.languages.bash.keyword;\n      inside.boolean = Prism.languages.bash.boolean;\n      inside.operator = Prism.languages.bash.operator;\n      inside.punctuation = Prism.languages.bash.punctuation;\n\n      Prism.languages.shell = Prism.languages.bash;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":88,"files":[{"filePath":"node_modules/reprism/languages/languages/bash.js","startLine":1,"endLine":88},{"filePath":"node_modules/reprism/lib/languages/bash.js","startLine":1,"endLine":88}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'autoit',\n  init: function init(Prism) {\n    Prism.languages.autoit = {\n      comment: [/;.*/, {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\n        lookbehind: true\n      }],\n      url: {\n        pattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n        lookbehind: true\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          variable: /([%$@])\\w+\\1/\n        }\n      },\n      directive: {\n        pattern: /(^\\s*)#\\w+/m,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      function: /\\b\\w+(?=\\()/,\n      // Variables and macros\n      variable: /[$@]\\w+/,\n      keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n      number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n      boolean: /\\b(?:True|False)\\b/i,\n      operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n      punctuation: /[\\[\\]().,:]/\n    };\n  }\n};","nrTokens":0,"nrLines":41,"files":[{"filePath":"node_modules/reprism/languages/languages/autoit.js","startLine":1,"endLine":41},{"filePath":"node_modules/reprism/lib/languages/autoit.js","startLine":1,"endLine":41}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'autohotkey',\n  init: function init(Prism) {\n    // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n    Prism.languages.autohotkey = {\n      comment: {\n        pattern: /(^[^\";\\n]*(\"[^\"\\n]*?\"[^\"\\n]*?)*)(?:;.*$|^\\s*\\/\\*[\\s\\S]*\\n\\*\\/)/m,\n        lookbehind: true\n      },\n      string: /\"(?:[^\"\\n\\r]|\"\")*\"/m,\n      function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m, // function - don't use .*\\) in the end bcoz string locks it\n      tag: /^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m, // labels\n      variable: /%\\w+%/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n      operator: /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n      punctuation: /[{}[\\]():,]/,\n      boolean: /\\b(?:true|false)\\b/,\n\n      selector: /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n\n      constant: /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|programfiles|a_programfiles|a_programs|a_programscommon|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,\n\n      builtin: /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|cos|dllcall|exp|fileexist|Fileopen|floor|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,\n\n      symbol: /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n\n      important: /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InstallKeybdHook|InstallMouseHook|KeyHistory|LTrim|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|WinActivateForce)\\b/i,\n\n      keyword: /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Type|UnCheck|underline|Unicode|Unlock|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i\n    };\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/languages/languages/autohotkey.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/autohotkey.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'aspnet',\n  init: function init(Prism) {\n    Prism.languages.aspnet = Prism.languages.extend('markup', {\n      'page-directive tag': {\n        pattern: /<%\\s*@.*%>/i,\n        inside: {\n          'page-directive tag': /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          rest: Prism.languages.markup.tag.inside\n        }\n      },\n      'directive tag': {\n        pattern: /<%.*%>/i,\n        inside: {\n          'directive tag': /<%\\s*?[$=%#:]{0,2}|%>/i,\n          rest: Prism.languages.csharp\n        }\n      }\n    });\n    // Regexp copied from prism-markup, with a negative look-ahead added\n    Prism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n    // match directives of attribute value foo=\"<% Bar %>\"\n    Prism.languages.insertBefore('inside', 'punctuation', {\n      'directive tag': Prism.languages.aspnet['directive tag']\n    }, Prism.languages.aspnet.tag.inside['attr-value']);\n\n    Prism.languages.insertBefore('aspnet', 'comment', {\n      'asp comment': /<%--[\\s\\S]*?--%>/\n    });\n\n    // script runat=\"server\" contains csharp, not javascript\n    Prism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\n      'asp script': {\n        pattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        inside: Prism.languages.csharp || {}\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":46,"files":[{"filePath":"node_modules/reprism/languages/languages/aspnet.js","startLine":1,"endLine":46},{"filePath":"node_modules/reprism/lib/languages/aspnet.js","startLine":1,"endLine":46}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'asm6502',\n  init: function init(Prism) {\n    Prism.languages.asm6502 = {\n      comment: /;.*/,\n      directive: {\n        pattern: /\\.\\w+(?= )/,\n        alias: 'keyword'\n      },\n      string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      opcode: {\n        pattern: /\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,\n        alias: 'property'\n      },\n      hexnumber: {\n        pattern: /#?\\$[\\da-f]{2,4}/i,\n        alias: 'string'\n      },\n      binarynumber: {\n        pattern: /#?%[01]+/,\n        alias: 'string'\n      },\n      decimalnumber: {\n        pattern: /#?\\d+/,\n        alias: 'string'\n      },\n      register: {\n        pattern: /\\b[xya]\\b/i,\n        alias: 'variable'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/languages/languages/asm6502.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/asm6502.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'asciidoc',\n  init: function init(Prism) {\n    (function (Prism) {\n      var attributes = {\n        pattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\]\\\\]|\\\\.)*\\]|[^\\]\\\\]|\\\\.)*\\]/m,\n        lookbehind: true,\n        inside: {\n          quoted: {\n            pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n            inside: {\n              punctuation: /^[$`]|[$`]$/\n            }\n          },\n          interpreted: {\n            pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n            inside: {\n              punctuation: /^'|'$/\n              // See rest below\n            }\n          },\n          string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n          variable: /\\w+(?==)/,\n          punctuation: /^\\[|\\]$|,/,\n          operator: /=/,\n          // The negative look-ahead prevents blank matches\n          'attr-value': /(?!^\\s+$).+/\n        }\n      };\n      Prism.languages.asciidoc = {\n        'comment-block': {\n          pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n          alias: 'comment'\n        },\n        table: {\n          pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n          inside: {\n            specifiers: {\n              pattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\n              alias: 'attr-value'\n            },\n            punctuation: {\n              pattern: /(^|[^\\\\])[|!]=*/,\n              lookbehind: true\n            }\n            // See rest below\n          }\n        },\n\n        'passthrough-block': {\n          pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n          inside: {\n            punctuation: /^\\++|\\++$/\n            // See rest below\n          }\n        },\n        // Literal blocks and listing blocks\n        'literal-block': {\n          pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n          inside: {\n            punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/\n            // See rest below\n          }\n        },\n        // Sidebar blocks, quote blocks, example blocks and open blocks\n        'other-block': {\n          pattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n          inside: {\n            punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n            // See rest below\n          }\n        },\n\n        // list-punctuation and list-label must appear before indented-block\n        'list-punctuation': {\n          pattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n          lookbehind: true,\n          alias: 'punctuation'\n        },\n        'list-label': {\n          pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        'indented-block': {\n          pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n          lookbehind: true\n        },\n\n        comment: /^\\/\\/.*/m,\n        title: {\n          pattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} +.+|^\\.(?![\\s.]).*/m,\n          alias: 'important',\n          inside: {\n            punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n            // See rest below\n          }\n        },\n        'attribute-entry': {\n          pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n          alias: 'tag'\n        },\n        attributes: attributes,\n        hr: {\n          pattern: /^'{3,}$/m,\n          alias: 'punctuation'\n        },\n        'page-break': {\n          pattern: /^<{3,}$/m,\n          alias: 'punctuation'\n        },\n        admonition: {\n          pattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n          alias: 'keyword'\n        },\n        callout: [{\n          pattern: /(^[ \\t]*)<?\\d*>/m,\n          lookbehind: true,\n          alias: 'symbol'\n        }, {\n          pattern: /<\\d+>/,\n          alias: 'symbol'\n        }],\n        macro: {\n          pattern: /\\b[a-z\\d][a-z\\d-]*::?(?:(?:\\S+)??\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n          inside: {\n            function: /^[a-z\\d-]+(?=:)/,\n            punctuation: /^::?/,\n            attributes: {\n              pattern: /(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n              inside: attributes.inside\n            }\n          }\n        },\n        inline: {\n          /*\n          The initial look-behind prevents the highlighting of escaped quoted text.\n          Quoted text can be multi-line but cannot span an empty line.\n          All quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\n          First, we handle the constrained quotes.\n          Those must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\n          They are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\n          Then we handle the unconstrained quotes.\n          Those do not have the restrictions of the constrained quotes.\n          They are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n          */\n          pattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?: ['`]|.)+?(?:(?:\\r?\\n|\\r)(?: ['`]|.)+?)*['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n          lookbehind: true,\n          inside: {\n            attributes: attributes,\n            url: {\n              pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n              inside: {\n                punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n              }\n            },\n            'attribute-ref': {\n              pattern: /^\\{.+\\}$/,\n              inside: {\n                variable: {\n                  pattern: /(^\\{)[a-z\\d,+_-]+/,\n                  lookbehind: true\n                },\n                operator: /^[=?!#%@$]|!(?=[:}])/,\n                punctuation: /^\\{|\\}$|::?/\n              }\n            },\n            italic: {\n              pattern: /^(['_])[\\s\\S]+\\1$/,\n              inside: {\n                punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n              }\n            },\n            bold: {\n              pattern: /^\\*[\\s\\S]+\\*$/,\n              inside: {\n                punctuation: /^\\*\\*?|\\*\\*?$/\n              }\n            },\n            punctuation: /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n          }\n        },\n        replacement: {\n          pattern: /\\((?:C|TM|R)\\)/,\n          alias: 'builtin'\n        },\n        entity: /&#?[\\da-z]{1,8};/i,\n        'line-continuation': {\n          pattern: /(^| )\\+$/m,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n\n        // Allow some nesting. There is no recursion though, so cloning should not be needed.\n\n      };attributes.inside.interpreted.inside.rest = {\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity\n      };\n\n      Prism.languages.asciidoc['passthrough-block'].inside.rest = {\n        macro: Prism.languages.asciidoc.macro\n      };\n\n      Prism.languages.asciidoc['literal-block'].inside.rest = {\n        callout: Prism.languages.asciidoc.callout\n      };\n\n      Prism.languages.asciidoc.table.inside.rest = {\n        'comment-block': Prism.languages.asciidoc['comment-block'],\n        'passthrough-block': Prism.languages.asciidoc['passthrough-block'],\n        'literal-block': Prism.languages.asciidoc['literal-block'],\n        'other-block': Prism.languages.asciidoc['other-block'],\n        'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\n        'indented-block': Prism.languages.asciidoc['indented-block'],\n        comment: Prism.languages.asciidoc.comment,\n        title: Prism.languages.asciidoc.title,\n        'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\n        attributes: Prism.languages.asciidoc.attributes,\n        hr: Prism.languages.asciidoc.hr,\n        'page-break': Prism.languages.asciidoc['page-break'],\n        admonition: Prism.languages.asciidoc.admonition,\n        'list-label': Prism.languages.asciidoc['list-label'],\n        callout: Prism.languages.asciidoc.callout,\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity,\n        'line-continuation': Prism.languages.asciidoc['line-continuation']\n      };\n\n      Prism.languages.asciidoc['other-block'].inside.rest = {\n        table: Prism.languages.asciidoc.table,\n        'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\n        'indented-block': Prism.languages.asciidoc['indented-block'],\n        comment: Prism.languages.asciidoc.comment,\n        'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\n        attributes: Prism.languages.asciidoc.attributes,\n        hr: Prism.languages.asciidoc.hr,\n        'page-break': Prism.languages.asciidoc['page-break'],\n        admonition: Prism.languages.asciidoc.admonition,\n        'list-label': Prism.languages.asciidoc['list-label'],\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity,\n        'line-continuation': Prism.languages.asciidoc['line-continuation']\n      };\n\n      Prism.languages.asciidoc.title.inside.rest = {\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity\n\n        // Plugin to make entity title show the real entity, idea by Roman Komarov\n      };Prism.hooks.add('wrap', function (env) {\n        if (env.type === 'entity') {\n          env.attributes.title = env.content.replace(/&amp;/, '&');\n        }\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":271,"files":[{"filePath":"node_modules/reprism/languages/languages/asciidoc.js","startLine":1,"endLine":271},{"filePath":"node_modules/reprism/lib/languages/asciidoc.js","startLine":1,"endLine":271}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'arff',\n  init: function init(Prism) {\n    Prism.languages.arff = {\n      comment: /%.*/,\n      string: {\n        pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      keyword: /@(?:attribute|data|end|relation)\\b/i,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      punctuation: /[{},]/\n    };\n  }\n};","nrTokens":0,"nrLines":20,"files":[{"filePath":"node_modules/reprism/languages/languages/arff.js","startLine":1,"endLine":20},{"filePath":"node_modules/reprism/lib/languages/arff.js","startLine":1,"endLine":20}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'arduino',\n  init: function init(Prism) {\n    Prism.languages.arduino = Prism.languages.extend('cpp', {\n      keyword: /\\b(?:setup|if|else|while|do|for|return|in|instanceof|default|function|loop|goto|switch|case|new|try|throw|catch|finally|null|break|continue|boolean|bool|void|byte|word|string|String|array|int|long|integer|double)\\b/,\n      builtin: /\\b(?:KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|LiquidCrystal_I2C|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD|runShellCommandAsynchronously|analogWriteResolution|retrieveCallingNumber|printFirmwareVersion|analogReadResolution|sendDigitalPortPair|noListenOnLocalhost|readJoystickButton|setFirmwareVersion|readJoystickSwitch|scrollDisplayRight|getVoiceCallStatus|scrollDisplayLeft|writeMicroseconds|delayMicroseconds|beginTransmission|getSignalStrength|runAsynchronously|getAsynchronously|listenOnLocalhost|getCurrentCarrier|readAccelerometer|messageAvailable|sendDigitalPorts|lineFollowConfig|countryNameWrite|runShellCommand|readStringUntil|rewindDirectory|readTemperature|setClockDivider|readLightSensor|endTransmission|analogReference|detachInterrupt|countryNameRead|attachInterrupt|encryptionType|readBytesUntil|robotNameWrite|readMicrophone|robotNameRead|cityNameWrite|userNameWrite|readJoystickY|readJoystickX|mouseReleased|openNextFile|scanNetworks|noInterrupts|digitalWrite|beginSpeaker|mousePressed|isActionDone|mouseDragged|displayLogos|noAutoscroll|addParameter|remoteNumber|getModifiers|keyboardRead|userNameRead|waitContinue|processInput|parseCommand|printVersion|readNetworks|writeMessage|blinkVersion|cityNameRead|readMessage|setDataMode|parsePacket|isListening|setBitOrder|beginPacket|isDirectory|motorsWrite|drawCompass|digitalRead|clearScreen|serialEvent|rightToLeft|setTextSize|leftToRight|requestFrom|keyReleased|compassRead|analogWrite|interrupts|WiFiServer|disconnect|playMelody|parseFloat|autoscroll|getPINUsed|setPINUsed|setTimeout|sendAnalog|readSlider|analogRead|beginWrite|createChar|motorsStop|keyPressed|tempoWrite|readButton|subnetMask|debugPrint|macAddress|writeGreen|randomSeed|attachGPRS|readString|sendString|remotePort|releaseAll|mouseMoved|background|getXChange|getYChange|answerCall|getResult|voiceCall|endPacket|constrain|getSocket|writeJSON|getButton|available|connected|findUntil|readBytes|exitValue|readGreen|writeBlue|startLoop|IPAddress|isPressed|sendSysex|pauseMode|gatewayIP|setCursor|getOemKey|tuneWrite|noDisplay|loadImage|switchPIN|onRequest|onReceive|changePIN|playFile|noBuffer|parseInt|overflow|checkPIN|knobRead|beginTFT|bitClear|updateIR|bitWrite|position|writeRGB|highByte|writeRed|setSpeed|readBlue|noStroke|remoteIP|transfer|shutdown|hangCall|beginSMS|endWrite|attached|maintain|noCursor|checkReg|checkPUK|shiftOut|isValid|shiftIn|pulseIn|connect|println|localIP|pinMode|getIMEI|display|noBlink|process|getBand|running|beginSD|drawBMP|lowByte|setBand|release|bitRead|prepare|pointTo|readRed|setMode|noFill|remove|listen|stroke|detach|attach|noTone|exists|buffer|height|bitSet|circle|config|cursor|random|IRread|setDNS|endSMS|getKey|micros|millis|begin|print|write|ready|flush|width|isPIN|blink|clear|press|mkdir|rmdir|close|point|yield|image|BSSID|click|delay|read|text|move|peek|beep|rect|line|open|seek|fill|size|turn|stop|home|find|step|tone|sqrt|RSSI|SSID|end|bit|tan|cos|sin|pow|map|abs|max|min|get|run|put)\\b/,\n      constant: /\\b(?:DIGITAL_MESSAGE|FIRMATA_STRING|ANALOG_MESSAGE|REPORT_DIGITAL|REPORT_ANALOG|INPUT_PULLUP|SET_PIN_MODE|INTERNAL2V56|SYSTEM_RESET|LED_BUILTIN|INTERNAL1V1|SYSEX_START|INTERNAL|EXTERNAL|DEFAULT|OUTPUT|INPUT|HIGH|LOW)\\b/\n    });\n  }\n};","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/reprism/languages/languages/arduino.js","startLine":1,"endLine":15},{"filePath":"node_modules/reprism/lib/languages/arduino.js","startLine":1,"endLine":15}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'applescript',\n  init: function init(Prism) {\n    Prism.languages.applescript = {\n      comment: [\n      // Allow one level of nesting\n      /\\(\\*(?:\\(\\*[\\s\\S]*?\\*\\)|[\\s\\S])*?\\*\\)/, /--.+/, /#.+/],\n      string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n      operator: [/[&=?????????*+\\-\\/??^]|[<>]=?/, /\\b(?:(?:start|begin|end)s? with|(?:(?:does not|doesn't) contain|contains?)|(?:is|isn't|is not) (?:in|contained by)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:(?:does not|doesn't) come|comes) (?:before|after)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equals|equal to|isn't|is not)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|or|div|mod|as|not))\\b/],\n      keyword: /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n      class: {\n        pattern: /\\b(?:alias|application|boolean|class|constant|date|file|integer|list|number|POSIX file|real|record|reference|RGB color|script|text|centimetres|centimeters|feet|inches|kilometres|kilometers|metres|meters|miles|yards|square feet|square kilometres|square kilometers|square metres|square meters|square miles|square yards|cubic centimetres|cubic centimeters|cubic feet|cubic inches|cubic metres|cubic meters|cubic yards|gallons|litres|liters|quarts|grams|kilograms|ounces|pounds|degrees Celsius|degrees Fahrenheit|degrees Kelvin)\\b/,\n        alias: 'builtin'\n      },\n      punctuation: /[{}():,????????????]/\n    };\n  }\n};","nrTokens":0,"nrLines":24,"files":[{"filePath":"node_modules/reprism/languages/languages/applescript.js","startLine":1,"endLine":24},{"filePath":"node_modules/reprism/lib/languages/applescript.js","startLine":1,"endLine":24}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'apl',\n  init: function init(Prism) {\n    Prism.languages.apl = {\n      comment: /(?:???|#[! ]).*$/m,\n      string: {\n        pattern: /'(?:[^'\\r\\n]|'')*'/,\n        greedy: true\n      },\n      number: /???(?:\\d*\\.?\\d+(?:e[+??]?\\d+)?|??|???)(?:j???(?:\\d*\\.?\\d+(?:e[+??]?\\d+)?|??|???))?/i,\n      statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n      'system-function': {\n        pattern: /???[A-Z]+/i,\n        alias: 'function'\n      },\n      constant: /[??????#??????]/,\n      function: /[-+?????????????|???????*??????!???<???=>????????????????????????~???????????????,?????????????????????????????????????????????????????????????????????????????]/,\n      'monadic-operator': {\n        pattern: /[\\\\\\/??????????????&???]/,\n        alias: 'operator'\n      },\n      'dyadic-operator': {\n        pattern: /[.???????????????@???]/,\n        alias: 'operator'\n      },\n      assignment: {\n        pattern: /???/,\n        alias: 'keyword'\n      },\n      punctuation: /[\\[;\\]()??????]/,\n      dfn: {\n        pattern: /[{}??????????????????:]/,\n        alias: 'builtin'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":42,"files":[{"filePath":"node_modules/reprism/languages/languages/apl.js","startLine":1,"endLine":42},{"filePath":"node_modules/reprism/lib/languages/apl.js","startLine":1,"endLine":42}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'apacheconf',\n  init: function init(Prism) {\n    Prism.languages.apacheconf = {\n      comment: /#.*/,\n      'directive-inline': {\n        pattern: /^(\\s*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|AddAlt|AddAltByEncoding|AddAltByType|AddCharset|AddDefaultCharset|AddDescription|AddEncoding|AddHandler|AddIcon|AddIconByEncoding|AddIconByType|AddInputFilter|AddLanguage|AddModuleInfo|AddOutputFilter|AddOutputFilterByType|AddType|Alias|AliasMatch|Allow|AllowCONNECT|AllowEncodedSlashes|AllowMethods|AllowOverride|AllowOverrideList|Anonymous|Anonymous_LogEmail|Anonymous_MustGiveEmail|Anonymous_NoUserID|Anonymous_VerifyEmail|AsyncRequestWorkerFactor|AuthBasicAuthoritative|AuthBasicFake|AuthBasicProvider|AuthBasicUseDigestAlgorithm|AuthDBDUserPWQuery|AuthDBDUserRealmQuery|AuthDBMGroupFile|AuthDBMType|AuthDBMUserFile|AuthDigestAlgorithm|AuthDigestDomain|AuthDigestNonceLifetime|AuthDigestProvider|AuthDigestQop|AuthDigestShmemSize|AuthFormAuthoritative|AuthFormBody|AuthFormDisableNoStore|AuthFormFakeBasicAuth|AuthFormLocation|AuthFormLoginRequiredLocation|AuthFormLoginSuccessLocation|AuthFormLogoutLocation|AuthFormMethod|AuthFormMimetype|AuthFormPassword|AuthFormProvider|AuthFormSitePassphrase|AuthFormSize|AuthFormUsername|AuthGroupFile|AuthLDAPAuthorizePrefix|AuthLDAPBindAuthoritative|AuthLDAPBindDN|AuthLDAPBindPassword|AuthLDAPCharsetConfig|AuthLDAPCompareAsUser|AuthLDAPCompareDNOnServer|AuthLDAPDereferenceAliases|AuthLDAPGroupAttribute|AuthLDAPGroupAttributeIsDN|AuthLDAPInitialBindAsUser|AuthLDAPInitialBindPattern|AuthLDAPMaxSubGroupDepth|AuthLDAPRemoteUserAttribute|AuthLDAPRemoteUserIsDN|AuthLDAPSearchAsUser|AuthLDAPSubGroupAttribute|AuthLDAPSubGroupClass|AuthLDAPUrl|AuthMerging|AuthName|AuthnCacheContext|AuthnCacheEnable|AuthnCacheProvideFor|AuthnCacheSOCache|AuthnCacheTimeout|AuthnzFcgiCheckAuthnProvider|AuthnzFcgiDefineProvider|AuthType|AuthUserFile|AuthzDBDLoginToReferer|AuthzDBDQuery|AuthzDBDRedirectQuery|AuthzDBMType|AuthzSendForbiddenOnFailure|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|CacheDefaultExpire|CacheDetailHeader|CacheDirLength|CacheDirLevels|CacheDisable|CacheEnable|CacheFile|CacheHeader|CacheIgnoreCacheControl|CacheIgnoreHeaders|CacheIgnoreNoLastMod|CacheIgnoreQueryString|CacheIgnoreURLSessionIdentifiers|CacheKeyBaseURL|CacheLastModifiedFactor|CacheLock|CacheLockMaxAge|CacheLockPath|CacheMaxExpire|CacheMaxFileSize|CacheMinExpire|CacheMinFileSize|CacheNegotiatedDocs|CacheQuickHandler|CacheReadSize|CacheReadTime|CacheRoot|CacheSocache|CacheSocacheMaxSize|CacheSocacheMaxTime|CacheSocacheMinTime|CacheSocacheReadSize|CacheSocacheReadTime|CacheStaleOnError|CacheStoreExpired|CacheStoreNoStore|CacheStorePrivate|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|DeflateBufferSize|DeflateCompressionLevel|DeflateFilterNote|DeflateInflateLimitRequestBody|DeflateInflateRatioBurst|DeflateInflateRatioLimit|DeflateMemLevel|DeflateWindowSize|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|HeartbeatAddress|HeartbeatListen|HeartbeatMaxServers|HeartbeatStorage|HeartbeatStorage|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|IndexHeadInsert|IndexIgnore|IndexIgnoreReset|IndexOptions|IndexOrderDefault|IndexStyleSheet|InputSed|ISAPIAppendLogToErrors|ISAPIAppendLogToQuery|ISAPICacheFile|ISAPIFakeAsync|ISAPILogNotSupported|ISAPIReadAheadBuffer|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAPCacheEntries|LDAPCacheTTL|LDAPConnectionPoolTTL|LDAPConnectionTimeout|LDAPLibraryDebug|LDAPOpCacheEntries|LDAPOpCacheTTL|LDAPReferralHopLimit|LDAPReferrals|LDAPRetries|LDAPRetryDelay|LDAPSharedCacheFile|LDAPSharedCacheSize|LDAPTimeout|LDAPTrustedClientCert|LDAPTrustedGlobalCert|LDAPTrustedMode|LDAPVerifyServerCert|LimitInternalRecursion|LimitRequestBody|LimitRequestFields|LimitRequestFieldSize|LimitRequestLine|LimitXMLRequestBody|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|LuaHookAccessChecker|LuaHookAuthChecker|LuaHookCheckUserID|LuaHookFixups|LuaHookInsertFilter|LuaHookLog|LuaHookMapToStorage|LuaHookTranslateName|LuaHookTypeChecker|LuaInherit|LuaInputFilter|LuaMapHandler|LuaOutputFilter|LuaPackageCPath|LuaPackagePath|LuaQuickHandler|LuaRoot|LuaScope|MaxConnectionsPerChild|MaxKeepAliveRequests|MaxMemFree|MaxRangeOverlaps|MaxRangeReversals|MaxRanges|MaxRequestWorkers|MaxSpareServers|MaxSpareThreads|MaxThreads|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|ProxyAddHeaders|ProxyBadHeader|ProxyBlock|ProxyDomain|ProxyErrorOverride|ProxyExpressDBMFile|ProxyExpressDBMType|ProxyExpressEnable|ProxyFtpDirCharset|ProxyFtpEscapeWildcards|ProxyFtpListOnWildcard|ProxyHTMLBufSize|ProxyHTMLCharsetOut|ProxyHTMLDocType|ProxyHTMLEnable|ProxyHTMLEvents|ProxyHTMLExtended|ProxyHTMLFixups|ProxyHTMLInterp|ProxyHTMLLinks|ProxyHTMLMeta|ProxyHTMLStripComments|ProxyHTMLURLMap|ProxyIOBufferSize|ProxyMaxForwards|ProxyPass|ProxyPassInherit|ProxyPassInterpolateEnv|ProxyPassMatch|ProxyPassReverse|ProxyPassReverseCookieDomain|ProxyPassReverseCookiePath|ProxyPreserveHost|ProxyReceiveBufferSize|ProxyRemote|ProxyRemoteMatch|ProxyRequests|ProxySCGIInternalRedirect|ProxySCGISendfile|ProxySet|ProxySourceAddress|ProxyStatus|ProxyTimeout|ProxyVia|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIPHeader|RemoteIPInternalProxy|RemoteIPInternalProxyList|RemoteIPProxiesHeader|RemoteIPTrustedProxy|RemoteIPTrustedProxyList|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|RewriteBase|RewriteCond|RewriteEngine|RewriteMap|RewriteOptions|RewriteRule|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script|ScriptAlias|ScriptAliasMatch|ScriptInterpreterSource|ScriptLog|ScriptLogBuffer|ScriptLogLength|ScriptSock|SecureListen|SeeRequestTail|SendBufferSize|ServerAdmin|ServerAlias|ServerLimit|ServerName|ServerPath|ServerRoot|ServerSignature|ServerTokens|Session|SessionCookieName|SessionCookieName2|SessionCookieRemove|SessionCryptoCipher|SessionCryptoDriver|SessionCryptoPassphrase|SessionCryptoPassphraseFile|SessionDBDCookieName|SessionDBDCookieName2|SessionDBDCookieRemove|SessionDBDDeleteLabel|SessionDBDInsertLabel|SessionDBDPerUser|SessionDBDSelectLabel|SessionDBDUpdateLabel|SessionEnv|SessionExclude|SessionHeader|SessionInclude|SessionMaxAge|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSLCACertificateFile|SSLCACertificatePath|SSLCADNRequestFile|SSLCADNRequestPath|SSLCARevocationCheck|SSLCARevocationFile|SSLCARevocationPath|SSLCertificateChainFile|SSLCertificateFile|SSLCertificateKeyFile|SSLCipherSuite|SSLCompression|SSLCryptoDevice|SSLEngine|SSLFIPS|SSLHonorCipherOrder|SSLInsecureRenegotiation|SSLOCSPDefaultResponder|SSLOCSPEnable|SSLOCSPOverrideResponder|SSLOCSPResponderTimeout|SSLOCSPResponseMaxAge|SSLOCSPResponseTimeSkew|SSLOCSPUseRequestNonce|SSLOpenSSLConfCmd|SSLOptions|SSLPassPhraseDialog|SSLProtocol|SSLProxyCACertificateFile|SSLProxyCACertificatePath|SSLProxyCARevocationCheck|SSLProxyCARevocationFile|SSLProxyCARevocationPath|SSLProxyCheckPeerCN|SSLProxyCheckPeerExpire|SSLProxyCheckPeerName|SSLProxyCipherSuite|SSLProxyEngine|SSLProxyMachineCertificateChainFile|SSLProxyMachineCertificateFile|SSLProxyMachineCertificatePath|SSLProxyProtocol|SSLProxyVerify|SSLProxyVerifyDepth|SSLRandomSeed|SSLRenegBufferSize|SSLRequire|SSLRequireSSL|SSLSessionCache|SSLSessionCacheTimeout|SSLSessionTicketKeyFile|SSLSRPUnknownUserSeed|SSLSRPVerifierFile|SSLStaplingCache|SSLStaplingErrorCacheTimeout|SSLStaplingFakeTryLater|SSLStaplingForceURL|SSLStaplingResponderTimeout|SSLStaplingResponseMaxAge|SSLStaplingResponseTimeSkew|SSLStaplingReturnResponderErrors|SSLStaplingStandardCacheTimeout|SSLStrictSNIVHostCheck|SSLUserName|SSLUseStapling|SSLVerifyClient|SSLVerifyDepth|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|VirtualDocumentRoot|VirtualDocumentRootIP|VirtualScriptAlias|VirtualScriptAliasIP|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'directive-block': {\n        pattern: /<\\/?\\b(?:AuthnProviderAlias|AuthzProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|RequireAll|RequireAny|RequireNone|VirtualHost)\\b *.*>/i,\n        inside: {\n          'directive-block': {\n            pattern: /^<\\/?\\w+/,\n            inside: {\n              punctuation: /^<\\/?/\n            },\n            alias: 'tag'\n          },\n          'directive-block-parameter': {\n            pattern: /.*[^>]/,\n            inside: {\n              punctuation: /:/,\n              string: {\n                pattern: /(\"|').*\\1/,\n                inside: {\n                  variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n                }\n              }\n            },\n            alias: 'attr-value'\n          },\n          punctuation: />/\n        },\n        alias: 'tag'\n      },\n      'directive-flags': {\n        pattern: /\\[(?:\\w,?)+\\]/,\n        alias: 'keyword'\n      },\n      string: {\n        pattern: /(\"|').*\\1/,\n        inside: {\n          variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n        }\n      },\n      variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n      regex: /\\^?.*\\$|\\^.*\\$?/\n    };\n  }\n};","nrTokens":0,"nrLines":57,"files":[{"filePath":"node_modules/reprism/languages/languages/apacheconf.js","startLine":1,"endLine":57},{"filePath":"node_modules/reprism/lib/languages/apacheconf.js","startLine":1,"endLine":57}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ada',\n  init: function init(Prism) {\n    Prism.languages.ada = {\n      comment: /--.*/,\n      string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\n      number: [{\n        pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      }, {\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n      }],\n      'attr-name': /\\b'\\w+/i,\n      keyword: /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n      boolean: /\\b(?:true|false)\\b/i,\n      operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n      punctuation: /\\.\\.?|[,;():]/,\n      char: /'.'/,\n      variable: /\\b[a-z](?:[_a-z\\d])*\\b/i\n    };\n  }\n};","nrTokens":0,"nrLines":26,"files":[{"filePath":"node_modules/reprism/languages/languages/ada.js","startLine":1,"endLine":26},{"filePath":"node_modules/reprism/lib/languages/ada.js","startLine":1,"endLine":26}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'actionscript',\n  init: function init(Prism) {\n    Prism.languages.actionscript = Prism.languages.extend('javascript', {\n      keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n      operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n    });\n    Prism.languages.actionscript['class-name'].alias = 'function';\n\n    if (Prism.languages.markup) {\n      Prism.languages.insertBefore('actionscript', 'string', {\n        xml: {\n          pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.markup\n          }\n        }\n      });\n    }\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/languages/languages/actionscript.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/actionscript.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'abap',\n  init: function init(Prism) {\n    Prism.languages.abap = {\n      comment: /^\\*.*/m,\n      string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n      'string-template': {\n        pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n        lookbehind: true,\n        alias: 'string'\n      },\n      /* End Of Line comments should not interfere with strings when the\n      quote character occurs within them. We assume a string being highlighted\n      inside an EOL comment is more acceptable than the opposite.\n      */\n      'eol-comment': {\n        pattern: /(^|\\s)\".*/m,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      keyword: {\n        pattern: /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|SELECTOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n        lookbehind: true\n      },\n      /* Numbers can be only integers. Decimal or Hex appear only as strings */\n      number: /\\b\\d+\\b/,\n      /* Operators must always be surrounded by whitespace, they cannot be put\n      adjacent to operands.\n      */\n      operator: {\n        pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n        lookbehind: true\n      },\n      'string-operator': {\n        pattern: /(\\s)&&?(?=\\s)/,\n        lookbehind: true,\n        /* The official editor highlights */\n        alias: 'keyword'\n      },\n      'token-operator': [{\n        /* Special operators used to access structure components, class methods/attributes, etc. */\n        pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }, {\n        /* Special tokens used do delimit string templates */\n        pattern: /[|{}]/,\n        alias: 'punctuation'\n      }],\n      punctuation: /[,.:()]/\n    };\n  }\n};","nrTokens":0,"nrLines":58,"files":[{"filePath":"node_modules/reprism/languages/languages/abap.js","startLine":1,"endLine":58},{"filePath":"node_modules/reprism/lib/languages/abap.js","startLine":1,"endLine":58}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'yaml',\n  init: function init(Prism) {\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n        lookbehind: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n        lookbehind: true\n      },\n      tag: /![^\\s]+/,\n      important: /[&*][\\w]+/,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    };\n  }\n};","nrTokens":0,"nrLines":55,"files":[{"filePath":"node_modules/reprism/es/languages/yaml.js","startLine":1,"endLine":55},{"filePath":"node_modules/reprism/lib/languages/yaml.js","startLine":1,"endLine":55}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'xojo',\n  init: function init(Prism) {\n    Prism.languages.xojo = {\n      comment: {\n        pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n        inside: {\n          keyword: /^Rem/i\n        }\n      },\n      string: {\n        pattern: /\"(?:\"\"|[^\"])*\"/,\n        greedy: true\n      },\n      number: [/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n      symbol: /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,\n      keyword: /\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,\n      operator: /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,\n      punctuation: /[.,;:()]/\n    };\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/es/languages/xojo.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/xojo.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'xeora',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.xeora = Prism.languages.extend('markup', {\n        constant: {\n          pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n          inside: {\n            punctuation: {\n              pattern: /\\$/\n            }\n          }\n        },\n        variable: {\n          pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n          inside: {\n            punctuation: {\n              pattern: /[$.]/\n            },\n            operator: {\n              pattern: /#+|[-+*~=^@]/\n            }\n          }\n        },\n        'function-inline': {\n          pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n          inside: {\n            variable: {\n              pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n              inside: {\n                punctuation: {\n                  pattern: /[,.|]/\n                },\n                operator: {\n                  pattern: /#+|[-+*~=^@]/\n                }\n              }\n            },\n            punctuation: {\n              pattern: /\\$\\w:|[$:?.,|]/\n            }\n          },\n          alias: 'function'\n        },\n        'function-block': {\n          pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n          inside: {\n            punctuation: {\n              pattern: /[$:{}?.,|]/\n            }\n          },\n          alias: 'function'\n        },\n        'directive-inline': {\n          pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n          inside: {\n            punctuation: {\n              pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n              inside: {\n                tag: {\n                  pattern: /#\\d/\n                }\n              }\n            }\n          },\n          alias: 'function'\n        },\n        'directive-block-open': {\n          pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n          inside: {\n            punctuation: {\n              pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n              inside: {\n                tag: {\n                  pattern: /#\\d/\n                }\n              }\n            },\n            attribute: {\n              pattern: /![A-Z]+$/,\n              inside: {\n                punctuation: {\n                  pattern: /!/\n                }\n              },\n              alias: 'keyword'\n            }\n          },\n          alias: 'function'\n        },\n        'directive-block-separator': {\n          pattern: /}:[-\\w.]+:{/,\n          inside: {\n            punctuation: {\n              pattern: /[:{}]/\n            }\n          },\n          alias: 'function'\n        },\n        'directive-block-close': {\n          pattern: /}:[-\\w.]+\\$/,\n          inside: {\n            punctuation: {\n              pattern: /[:{}$]/\n            }\n          },\n          alias: 'function'\n        }\n      });\n\n      Prism.languages.insertBefore('inside', 'punctuation', {\n        variable: Prism.languages.xeora['function-inline'].inside.variable\n      }, Prism.languages.xeora['function-block']);\n\n      Prism.languages.xeoracube = Prism.languages.xeora;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":123,"files":[{"filePath":"node_modules/reprism/es/languages/xeora.js","startLine":1,"endLine":123},{"filePath":"node_modules/reprism/lib/languages/xeora.js","startLine":1,"endLine":123}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'wiki',\n  init: function init(Prism) {\n    Prism.languages.wiki = Prism.languages.extend('markup', {\n      'block-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      heading: {\n        pattern: /^(=+).+?\\1/m,\n        inside: {\n          punctuation: /^=+|=+$/,\n          important: /.+/\n        }\n      },\n      emphasis: {\n        // TODO Multi-line\n        pattern: /('{2,5}).+?\\1/,\n        inside: {\n          'bold italic': {\n            pattern: /(''''').+?(?=\\1)/,\n            lookbehind: true\n          },\n          bold: {\n            pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n            lookbehind: true\n          },\n          punctuation: /^''+|''+$/\n        }\n      },\n      hr: {\n        pattern: /^-{4,}/m,\n        alias: 'punctuation'\n      },\n      url: [/ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i, /\\[\\[.+?\\]\\]|\\[.+?\\]/],\n      variable: [/__[A-Z]+__/,\n      // FIXME Nested structures should be handled\n      // {{formatnum:{{#expr:{{{3}}}}}}}\n      /\\{{3}.+?\\}{3}/, /\\{\\{.+?\\}\\}/],\n      symbol: [/^#redirect/im, /~{3,5}/],\n      // Handle table attrs:\n      // {|\n      // ! style=\"text-align:left;\"| Item\n      // |}\n      'table-tag': {\n        pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n        lookbehind: true,\n        inside: {\n          'table-bar': {\n            pattern: /\\|$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.markup.tag.inside\n        }\n      },\n      punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n    });\n\n    Prism.languages.insertBefore('wiki', 'tag', {\n      // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n      nowiki: {\n        pattern: /<(nowiki|pre|source)\\b[\\s\\S]*?>[\\s\\S]*?<\\/\\1>/i,\n        inside: {\n          tag: {\n            pattern: /<(?:nowiki|pre|source)\\b[\\s\\S]*?>|<\\/(?:nowiki|pre|source)>/i,\n            inside: Prism.languages.markup.tag.inside\n          }\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":82,"files":[{"filePath":"node_modules/reprism/es/languages/wiki.js","startLine":1,"endLine":82},{"filePath":"node_modules/reprism/lib/languages/wiki.js","startLine":1,"endLine":82}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'wasm',\n  init: function init(Prism) {\n    Prism.languages.wasm = {\n      comment: [/\\(;[\\s\\S]*?;\\)/, {\n        pattern: /;;.*/,\n        greedy: true\n      }],\n      string: {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n        greedy: true\n      },\n      keyword: [{\n        pattern: /\\b(?:align|offset)=/,\n        inside: {\n          operator: /=/\n        }\n      }, {\n        pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n      variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n      number: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n      punctuation: /[()]/\n    };\n  }\n};","nrTokens":0,"nrLines":34,"files":[{"filePath":"node_modules/reprism/es/languages/wasm.js","startLine":1,"endLine":34},{"filePath":"node_modules/reprism/lib/languages/wasm.js","startLine":1,"endLine":34}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'visual-basic',\n  init: function init(Prism) {\n    Prism.languages['visual-basic'] = {\n      comment: {\n        pattern: /(?:['??????]|REM\\b).*/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      directive: {\n        pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\\S\\r\\n]_[^\\S\\r\\n]*(?:\\r\\n?|\\n)|.)+/i,\n        alias: 'comment',\n        greedy: true\n      },\n      string: {\n        pattern: /[\"??????](?:[\"??????]{2}|[^\"??????])*[\"??????]C?/i,\n        greedy: true\n      },\n      date: {\n        pattern: /#[^\\S\\r\\n]*(?:\\d+([/-])\\d+\\1\\d+(?:[^\\S\\r\\n]+(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))?|(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))[^\\S\\r\\n]*#/i,\n        alias: 'builtin'\n      },\n      number: /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:U?[ILS]|[FRD])?/i,\n      boolean: /\\b(?:True|False|Nothing)\\b/i,\n      keyword: /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|TypeOf|U(?:Integer|Long|Short)|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n      operator: [/[+\\-*/\\\\^<=>&#@$%!]/, {\n        pattern: /([^\\S\\r\\n])_(?=[^\\S\\r\\n]*[\\r\\n])/,\n        lookbehind: true\n      }],\n      punctuation: /[{}().,:?]/\n    };\n\n    Prism.languages.vb = Prism.languages['visual-basic'];\n  }\n};","nrTokens":0,"nrLines":41,"files":[{"filePath":"node_modules/reprism/es/languages/visual-basic.js","startLine":1,"endLine":41},{"filePath":"node_modules/reprism/lib/languages/visual-basic.js","startLine":1,"endLine":41}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'vim',\n  init: function init(Prism) {\n    Prism.languages.vim = {\n      string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n      comment: /\".*/,\n      function: /\\w+(?=\\()/,\n      keyword: /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n      builtin: /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n      number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n      operator: /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n      punctuation: /[{}[\\](),;:]/\n    };\n  }\n};","nrTokens":0,"nrLines":20,"files":[{"filePath":"node_modules/reprism/es/languages/vim.js","startLine":1,"endLine":20},{"filePath":"node_modules/reprism/lib/languages/vim.js","startLine":1,"endLine":20}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'vhdl',\n  init: function init(Prism) {\n    Prism.languages.vhdl = {\n      comment: /--.+/,\n      // support for all logic vectors\n      'vhdl-vectors': {\n        pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n        alias: 'number'\n      },\n      // support for operator overloading included\n      'quoted-function': {\n        pattern: /\"\\S+?\"(?=\\()/,\n        alias: 'function'\n      },\n      string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      constant: /\\b(?:use|library)\\b/i,\n      // support for predefined attributes included\n      keyword: /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n      boolean: /\\b(?:true|false)\\b/i,\n      function: /\\w+(?=\\()/,\n      // decimal, based, physical, and exponential numbers supported\n      number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n      operator: /[<>]=?|:=|[-+*/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":33,"files":[{"filePath":"node_modules/reprism/es/languages/vhdl.js","startLine":1,"endLine":33},{"filePath":"node_modules/reprism/lib/languages/vhdl.js","startLine":1,"endLine":33}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'verilog',\n  init: function init(Prism) {\n    Prism.languages.verilog = {\n      comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n        greedy: true\n      },\n      // support for any kernel function (ex: $display())\n      property: /\\B\\$\\w+\\b/,\n      // support for user defined constants (ex: `define)\n      constant: /\\B`\\w+\\b/,\n      function: /\\w+(?=\\()/,\n      // support for verilog and system verilog keywords\n      keyword: /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n      // bold highlighting for all verilog and system verilog logic blocks\n      important: /\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,\n      // support for time ticks, vectors, and real numbers\n      number: /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,\n      operator: /[-+{}^~%*\\/?=!<>&|]+/,\n      punctuation: /[[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/es/languages/verilog.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/verilog.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'velocity',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.velocity = Prism.languages.extend('markup', {});\n\n      var velocity = {\n        variable: {\n          pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n          lookbehind: true,\n          inside: {} // See below\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        number: /\\b\\d+\\b/,\n        boolean: /\\b(?:true|false)\\b/,\n        operator: /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n        punctuation: /[(){}[\\]:,.]/\n      };\n\n      velocity.variable.inside = {\n        string: velocity.string,\n        function: {\n          pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n          lookbehind: true\n        },\n        number: velocity.number,\n        boolean: velocity.boolean,\n        punctuation: velocity.punctuation\n      };\n\n      Prism.languages.insertBefore('velocity', 'comment', {\n        unparsed: {\n          pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            punctuation: /^#\\[\\[|]]#$/\n          }\n        },\n        'velocity-comment': [{\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }, {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }],\n        directive: {\n          pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n          lookbehind: true,\n          inside: {\n            keyword: {\n              pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n              inside: {\n                punctuation: /[{}]/\n              }\n            },\n            rest: velocity\n          }\n        },\n        variable: velocity.variable\n      });\n\n      Prism.languages.velocity.tag.inside['attr-value'].inside.rest = Prism.languages.velocity;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":78,"files":[{"filePath":"node_modules/reprism/es/languages/velocity.js","startLine":1,"endLine":78},{"filePath":"node_modules/reprism/lib/languages/velocity.js","startLine":1,"endLine":78}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'vbnet',\n  init: function init(Prism) {\n    Prism.languages.vbnet = Prism.languages.extend('basic', {\n      keyword: /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDEC|CDBL|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEFAULT|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LINE INPUT|LET|LIB|LIKE|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPERATOR|OPEN|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHORT|SINGLE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SYNCLOCK|SWAP|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n      comment: [{\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      }, {\n        pattern: /(^|[^\\\\:])'.*/,\n        lookbehind: true\n      }]\n    });\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/es/languages/vbnet.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/vbnet.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'typescript',\n  init: function init(Prism) {\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\n      // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n      keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|module|declare|constructor|namespace|abstract|require|type)\\b/,\n      builtin: /\\b(?:string|Function|any|number|boolean|Array|symbol|console)\\b/\n    });\n\n    Prism.languages.ts = Prism.languages.typescript;\n  }\n};","nrTokens":0,"nrLines":17,"files":[{"filePath":"node_modules/reprism/es/languages/typescript.js","startLine":1,"endLine":17},{"filePath":"node_modules/reprism/lib/languages/typescript.js","startLine":1,"endLine":17}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'twig',\n  init: function init(Prism) {\n    Prism.languages.twig = {\n      comment: /\\{#[\\s\\S]*?#\\}/,\n      tag: {\n        pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n        inside: {\n          ld: {\n            pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n            inside: {\n              punctuation: /^(?:\\{\\{|\\{%)-?/,\n              keyword: /\\w+/\n            }\n          },\n          rd: {\n            pattern: /-?(?:%\\}|\\}\\})$/,\n            inside: {\n              punctuation: /.*/\n            }\n          },\n          string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            inside: {\n              punctuation: /^['\"]|['\"]$/\n            }\n          },\n          keyword: /\\b(?:even|if|odd)\\b/,\n          boolean: /\\b(?:true|false|null)\\b/,\n          number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n          operator: [{\n            pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n            lookbehind: true\n          }, /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],\n          property: /\\b[a-zA-Z_]\\w*\\b/,\n          punctuation: /[()\\[\\]{}:.,]/\n        }\n      },\n\n      // The rest can be parsed as HTML\n      other: {\n        // We want non-blank matches\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        inside: Prism.languages.markup\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":53,"files":[{"filePath":"node_modules/reprism/es/languages/twig.js","startLine":1,"endLine":53},{"filePath":"node_modules/reprism/lib/languages/twig.js","startLine":1,"endLine":53}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'tsx',\n  init: function init(Prism) {\n    var typescript = Prism.util.clone(Prism.languages.typescript);\n    Prism.languages.tsx = Prism.languages.extend('jsx', typescript);\n  }\n};","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/reprism/es/languages/tsx.js","startLine":1,"endLine":12},{"filePath":"node_modules/reprism/lib/languages/tsx.js","startLine":1,"endLine":12}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'textile',\n  init: function init(Prism) {\n    (function (Prism) {\n      // We don't allow for pipes inside parentheses\n      // to not break table pattern |(. foo |). bar |\n      var modifierRegex = '(?:\\\\([^|)]+\\\\)|\\\\[[^\\\\]]+\\\\]|\\\\{[^}]+\\\\})+';\n      var modifierTokens = {\n        css: {\n          pattern: /\\{[^}]+\\}/,\n          inside: {\n            rest: Prism.languages.css\n          }\n        },\n        'class-id': {\n          pattern: /(\\()[^)]+(?=\\))/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        lang: {\n          pattern: /(\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n        punctuation: /[\\\\\\/]\\d+|\\S/\n      };\n\n      Prism.languages.textile = Prism.languages.extend('markup', {\n        phrase: {\n          pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n          lookbehind: true,\n          inside: {\n            // h1. Header 1\n            'block-tag': {\n              pattern: RegExp('^[a-z]\\\\w*(?:' + modifierRegex + '|[<>=()])*\\\\.'),\n              inside: {\n                modifier: {\n                  pattern: RegExp('(^[a-z]\\\\w*)(?:' + modifierRegex + '|[<>=()])+(?=\\\\.)'),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                tag: /^[a-z]\\w*/,\n                punctuation: /\\.$/\n              }\n            },\n\n            // # List item\n            // * List item\n            list: {\n              pattern: RegExp('^[*#]+(?:' + modifierRegex + ')?\\\\s+.+', 'm'),\n              inside: {\n                modifier: {\n                  pattern: RegExp('(^[*#]+)' + modifierRegex),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                punctuation: /^[*#]+/\n              }\n            },\n\n            // | cell | cell | cell |\n            table: {\n              // Modifiers can be applied to the row: {color:red}.|1|2|3|\n              // or the cell: |{color:red}.1|2|3|\n              pattern: RegExp('^(?:(?:' + modifierRegex + '|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|', 'm'),\n              inside: {\n                modifier: {\n                  // Modifiers for rows after the first one are\n                  // preceded by a pipe and a line feed\n                  pattern: RegExp('(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)'),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                punctuation: /\\||^\\./\n              }\n            },\n\n            inline: {\n              pattern: RegExp('(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:' + modifierRegex + ')?.+?\\\\1'),\n              inside: {\n                // Note: superscripts and subscripts are not handled specifically\n\n                // *bold*, **bold**\n                bold: {\n                  pattern: RegExp('(^(\\\\*\\\\*?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n                  lookbehind: true\n                },\n\n                // _italic_, __italic__\n                italic: {\n                  pattern: RegExp('(^(__?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n                  lookbehind: true\n                },\n\n                // ??cite??\n                cite: {\n                  pattern: RegExp('(^\\\\?\\\\?(?:' + modifierRegex + ')?).+?(?=\\\\?\\\\?)'),\n                  lookbehind: true,\n                  alias: 'string'\n                },\n\n                // @code@\n                code: {\n                  pattern: RegExp('(^@(?:' + modifierRegex + ')?).+?(?=@)'),\n                  lookbehind: true,\n                  alias: 'keyword'\n                },\n\n                // +inserted+\n                inserted: {\n                  pattern: RegExp('(^\\\\+(?:' + modifierRegex + ')?).+?(?=\\\\+)'),\n                  lookbehind: true\n                },\n\n                // -deleted-\n                deleted: {\n                  pattern: RegExp('(^-(?:' + modifierRegex + ')?).+?(?=-)'),\n                  lookbehind: true\n                },\n\n                // %span%\n                span: {\n                  pattern: RegExp('(^%(?:' + modifierRegex + ')?).+?(?=%)'),\n                  lookbehind: true\n                },\n\n                modifier: {\n                  pattern: RegExp('(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])' + modifierRegex),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                punctuation: /[*_%?@+\\-^~]+/\n              }\n            },\n\n            // [alias]http://example.com\n            'link-ref': {\n              pattern: /^\\[[^\\]]+\\]\\S+$/m,\n              inside: {\n                string: {\n                  pattern: /(\\[)[^\\]]+(?=\\])/,\n                  lookbehind: true\n                },\n                url: {\n                  pattern: /(\\])\\S+$/,\n                  lookbehind: true\n                },\n                punctuation: /[\\[\\]]/\n              }\n            },\n\n            // \"text\":http://example.com\n            // \"text\":link-ref\n            link: {\n              pattern: RegExp('\"(?:' + modifierRegex + ')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'),\n              inside: {\n                text: {\n                  pattern: RegExp('(^\"(?:' + modifierRegex + ')?)[^\"]+(?=\")'),\n                  lookbehind: true\n                },\n                modifier: {\n                  pattern: RegExp('(^\")' + modifierRegex),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                url: {\n                  pattern: /(:).+/,\n                  lookbehind: true\n                },\n                punctuation: /[\":]/\n              }\n            },\n\n            // !image.jpg!\n            // !image.jpg(Title)!:http://example.com\n            image: {\n              pattern: RegExp('!(?:' + modifierRegex + '|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?'),\n              inside: {\n                source: {\n                  pattern: RegExp('(^!(?:' + modifierRegex + '|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)'),\n                  lookbehind: true,\n                  alias: 'url'\n                },\n                modifier: {\n                  pattern: RegExp('(^!)(?:' + modifierRegex + '|[<>=()])+'),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                url: {\n                  pattern: /(:).+/,\n                  lookbehind: true\n                },\n                punctuation: /[!:]/\n              }\n            },\n\n            // Footnote[1]\n            footnote: {\n              pattern: /\\b\\[\\d+\\]/,\n              alias: 'comment',\n              inside: {\n                punctuation: /\\[|\\]/\n              }\n            },\n\n            // CSS(Cascading Style Sheet)\n            acronym: {\n              pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n              inside: {\n                comment: {\n                  pattern: /(\\()[^)]+(?=\\))/,\n                  lookbehind: true\n                },\n                punctuation: /[()]/\n              }\n            },\n\n            // Prism(C)\n            mark: {\n              pattern: /\\b\\((?:TM|R|C)\\)/,\n              alias: 'comment',\n              inside: {\n                punctuation: /[()]/\n              }\n            }\n          }\n        }\n      });\n\n      var nestedPatterns = {\n        inline: Prism.languages.textile.phrase.inside.inline,\n        link: Prism.languages.textile.phrase.inside.link,\n        image: Prism.languages.textile.phrase.inside.image,\n        footnote: Prism.languages.textile.phrase.inside.footnote,\n        acronym: Prism.languages.textile.phrase.inside.acronym,\n        mark: Prism.languages.textile.phrase.inside.mark\n\n        // Only allow alpha-numeric HTML tags, not XML tags\n      };Prism.languages.textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n      // Allow some nesting\n      Prism.languages.textile.phrase.inside.inline.inside.bold.inside = nestedPatterns;\n      Prism.languages.textile.phrase.inside.inline.inside.italic.inside = nestedPatterns;\n      Prism.languages.textile.phrase.inside.inline.inside.inserted.inside = nestedPatterns;\n      Prism.languages.textile.phrase.inside.inline.inside.deleted.inside = nestedPatterns;\n      Prism.languages.textile.phrase.inside.inline.inside.span.inside = nestedPatterns;\n\n      // Allow some styles inside table cells\n      Prism.languages.textile.phrase.inside.table.inside.inline = nestedPatterns.inline;\n      Prism.languages.textile.phrase.inside.table.inside.link = nestedPatterns.link;\n      Prism.languages.textile.phrase.inside.table.inside.image = nestedPatterns.image;\n      Prism.languages.textile.phrase.inside.table.inside.footnote = nestedPatterns.footnote;\n      Prism.languages.textile.phrase.inside.table.inside.acronym = nestedPatterns.acronym;\n      Prism.languages.textile.phrase.inside.table.inside.mark = nestedPatterns.mark;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":263,"files":[{"filePath":"node_modules/reprism/es/languages/textile.js","startLine":1,"endLine":263},{"filePath":"node_modules/reprism/lib/languages/textile.js","startLine":1,"endLine":263}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'tcl',\n  init: function init(Prism) {\n    Prism.languages.tcl = {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n        greedy: true\n      },\n      variable: [{\n        pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n        lookbehind: true\n      }, {\n        pattern: /(\\$){[^}]+}/,\n        lookbehind: true\n      }, {\n        pattern: /(^\\s*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n        lookbehind: true\n      }],\n      function: {\n        pattern: /(^\\s*proc[ \\t]+)[^\\s]+/m,\n        lookbehind: true\n      },\n      builtin: [{\n        pattern: /(^\\s*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,\n        lookbehind: true\n      }, /\\b(?:elseif|else)\\b/],\n      scope: {\n        pattern: /(^\\s*)(?:global|upvar|variable)\\b/m,\n        lookbehind: true,\n        alias: 'constant'\n      },\n      keyword: {\n        pattern: /(^\\s*|\\[)(?:after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n        lookbehind: true\n      },\n      operator: /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,\n      punctuation: /[{}()\\[\\]]/\n    };\n  }\n};","nrTokens":0,"nrLines":49,"files":[{"filePath":"node_modules/reprism/es/languages/tcl.js","startLine":1,"endLine":49},{"filePath":"node_modules/reprism/lib/languages/tcl.js","startLine":1,"endLine":49}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'swift',\n  init: function init(Prism) {\n    // issues: nested multiline comments\n    Prism.languages.swift = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n            inside: {\n              delimiter: {\n                pattern: /^\\\\\\(|\\)$/,\n                alias: 'variable'\n              }\n              // See rest below\n            }\n          }\n        }\n      },\n      keyword: /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|Protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n      number: /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n      constant: /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n      atrule: /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n      builtin: /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n    });\n    Prism.languages.swift.string.inside.interpolation.inside.rest = Prism.languages.swift;\n  }\n};","nrTokens":0,"nrLines":35,"files":[{"filePath":"node_modules/reprism/es/languages/swift.js","startLine":1,"endLine":35},{"filePath":"node_modules/reprism/lib/languages/swift.js","startLine":1,"endLine":35}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'stylus',\n  init: function init(Prism) {\n    (function (Prism) {\n      var inside = {\n        url: /url\\(([\"']?).*?\\1\\)/i,\n        string: {\n          pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n          greedy: true\n        },\n        interpolation: null, // See below\n        func: null, // See below\n        important: /\\B!(?:important|optional)\\b/i,\n        keyword: {\n          pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n          lookbehind: true\n        },\n        hexcode: /#[\\da-f]{3,6}/i,\n        number: /\\b\\d+(?:\\.\\d+)?%?/,\n        boolean: /\\b(?:true|false)\\b/,\n        operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n        punctuation: /[{}()\\[\\];:,]/\n      };\n\n      inside.interpolation = {\n        pattern: /\\{[^\\r\\n}:]+\\}/,\n        alias: 'variable',\n        inside: {\n          delimiter: {\n            pattern: /^{|}$/,\n            alias: 'punctuation'\n          },\n          rest: inside\n        }\n      };\n      inside.func = {\n        pattern: /[\\w-]+\\([^)]*\\).*/,\n        inside: {\n          function: /^[^(]+/,\n          rest: inside\n        }\n      };\n\n      Prism.languages.stylus = {\n        comment: {\n          pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n          lookbehind: true\n        },\n        'atrule-declaration': {\n          pattern: /(^\\s*)@.+/m,\n          lookbehind: true,\n          inside: {\n            atrule: /^@[\\w-]+/,\n            rest: inside\n          }\n        },\n        'variable-declaration': {\n          pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n          lookbehind: true,\n          inside: {\n            variable: /^\\S+/,\n            rest: inside\n          }\n        },\n\n        statement: {\n          pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\S+/,\n            rest: inside\n          }\n        },\n\n        // A property/value pair cannot end with a comma or a brace\n        // It cannot have indented content unless it ended with a semicolon\n        'property-declaration': {\n          pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n          lookbehind: true,\n          inside: {\n            property: {\n              pattern: /^[^\\s:]+/,\n              inside: {\n                interpolation: inside.interpolation\n              }\n            },\n            rest: inside\n          }\n        },\n\n        // A selector can contain parentheses only as part of a pseudo-element\n        // It can span multiple lines.\n        // It must end with a comma or an accolade or have indented content.\n        selector: {\n          pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n          lookbehind: true,\n          inside: {\n            interpolation: inside.interpolation,\n            punctuation: /[{},]/\n          }\n        },\n\n        func: inside.func,\n        string: inside.string,\n        interpolation: inside.interpolation,\n        punctuation: /[{}()\\[\\];:.]/\n      };\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":118,"files":[{"filePath":"node_modules/reprism/es/languages/stylus.js","startLine":1,"endLine":118},{"filePath":"node_modules/reprism/lib/languages/stylus.js","startLine":1,"endLine":118}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'soy',\n  init: function init(Prism) {\n    (function (Prism) {\n      var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n      var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n\n      Prism.languages.soy = {\n        comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }],\n        'command-arg': {\n          pattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        parameter: {\n          pattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n          lookbehind: true,\n          alias: 'variable'\n        },\n        keyword: [{\n          pattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        }, /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/],\n        delimiter: {\n          pattern: /^{+\\/?|\\/?}+$/,\n          alias: 'punctuation'\n        },\n        property: /\\w+(?==)/,\n        variable: {\n          pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n          inside: {\n            string: {\n              pattern: stringPattern,\n              greedy: true\n            },\n            number: numberPattern,\n            punctuation: /[\\[\\].?]/\n          }\n        },\n        string: {\n          pattern: stringPattern,\n          greedy: true\n        },\n        function: [/\\w+(?=\\()/, {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }],\n        boolean: /\\b(?:true|false)\\b/,\n        number: numberPattern,\n        operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n        punctuation: /[{}()\\[\\]|.,:]/\n\n        // Tokenize all inline Soy expressions\n      };Prism.hooks.add('before-tokenize', function (env) {\n        var soyPattern = /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g;\n        var soyLitteralStart = '{literal}';\n        var soyLitteralEnd = '{/literal}';\n        var soyLitteralMode = false;\n\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'soy', soyPattern, function (match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false;\n          }\n\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true;\n            }\n\n            return true;\n          }\n          return false;\n        });\n      });\n\n      // Re-insert the tokens after tokenizing\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":95,"files":[{"filePath":"node_modules/reprism/es/languages/soy.js","startLine":1,"endLine":95},{"filePath":"node_modules/reprism/lib/languages/soy.js","startLine":1,"endLine":95}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'smarty',\n  init: function init(Prism) {\n    /* TODO\n    Add support for variables inside double quoted strings\n    Add support for {php}\n    */\n\n    (function (Prism) {\n      Prism.languages.smarty = {\n        comment: /\\{\\*[\\s\\S]*?\\*\\}/,\n        delimiter: {\n          pattern: /^\\{|\\}$/i,\n          alias: 'punctuation'\n        },\n        string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        variable: [/\\$(?!\\d)\\w+/, /#(?!\\d)\\w+#/, {\n          pattern: /(\\.|->)(?!\\d)\\w+/,\n          lookbehind: true\n        }, {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }],\n        function: [{\n          pattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n          lookbehind: true\n        }, /^\\/?(?!\\d)\\w+/, /(?!\\d)\\w+(?=\\()/],\n        'attr-name': {\n          // Value is made optional because it may have already been tokenized\n          pattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n          inside: {\n            variable: {\n              pattern: /(=\\s*)(?!\\d)\\w+/,\n              lookbehind: true\n            },\n            operator: /=/\n          }\n        },\n        punctuation: [/[\\[\\]().,:`]|->/],\n        operator: [/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/, /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/, /\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/],\n        keyword: /\\b(?:false|off|on|no|true|yes)\\b/\n\n        // Comments are inserted at top so that they can\n        // surround markup\n      };Prism.languages.insertBefore('smarty', 'tag', {\n        'smarty-comment': {\n          pattern: /\\{\\*[\\s\\S]*?\\*\\}/,\n          alias: ['smarty', 'comment']\n        }\n      });\n\n      // Tokenize all inline Smarty expressions\n      Prism.hooks.add('before-tokenize', function (env) {\n        var smartyPattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g;\n        var smartyLitteralStart = '{literal}';\n        var smartyLitteralEnd = '{/literal}';\n        var smartyLitteralMode = false;\n\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'smarty', smartyPattern, function (match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLitteralEnd) {\n            smartyLitteralMode = false;\n          }\n\n          if (!smartyLitteralMode) {\n            if (match === smartyLitteralStart) {\n              smartyLitteralMode = true;\n            }\n\n            return true;\n          }\n          return false;\n        });\n      });\n\n      // Re-insert the tokens after tokenizing\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":88,"files":[{"filePath":"node_modules/reprism/es/languages/smarty.js","startLine":1,"endLine":88},{"filePath":"node_modules/reprism/lib/languages/smarty.js","startLine":1,"endLine":88}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'smalltalk',\n  init: function init(Prism) {\n    Prism.languages.smalltalk = {\n      comment: /\"(?:\"\"|[^\"])+\"/,\n      string: /'(?:''|[^'])+'/,\n      symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n      'block-arguments': {\n        pattern: /(\\[\\s*):[^\\[|]*\\|/,\n        lookbehind: true,\n        inside: {\n          variable: /:[\\da-z]+/i,\n          punctuation: /\\|/\n        }\n      },\n      'temporary-variables': {\n        pattern: /\\|[^|]+\\|/,\n        inside: {\n          variable: /[\\da-z]+/i,\n          punctuation: /\\|/\n        }\n      },\n      keyword: /\\b(?:nil|true|false|self|super|new)\\b/,\n      character: {\n        pattern: /\\$./,\n        alias: 'string'\n      },\n      number: [/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/, /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/],\n      operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n      punctuation: /[.;:?\\[\\](){}]/\n    };\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/es/languages/smalltalk.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/smalltalk.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'scss',\n  init: function init(Prism) {\n    Prism.languages.scss = Prism.languages.extend('css', {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      atrule: {\n        pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n        inside: {\n          rule: /@[\\w-]+/\n          // See rest below\n        }\n      },\n      // url, compassified\n      url: /(?:[-a-z]+-)*url(?=\\()/i,\n      // CSS selector regex is not appropriate for Sass\n      // since there can be lot more things (var, @ directive, nesting..)\n      // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n      // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n      // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n      // can \"pass\" as a selector- e.g: proper#{$erty})\n      // this one was hard to do, so please be careful if you edit this one :)\n      selector: {\n        // Initial look-ahead is used to prevent matching of blank selectors\n        pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n        inside: {\n          parent: {\n            pattern: /&/,\n            alias: 'important'\n          },\n          placeholder: /%[-\\w]+/,\n          variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n        }\n      }\n    });\n\n    Prism.languages.insertBefore('scss', 'atrule', {\n      keyword: [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n        pattern: /( +)(?:from|through)(?= )/,\n        lookbehind: true\n      }]\n    });\n\n    Prism.languages.scss.property = {\n      pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    };\n\n    Prism.languages.insertBefore('scss', 'important', {\n      // var and interpolated vars\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    });\n\n    Prism.languages.insertBefore('scss', 'function', {\n      placeholder: {\n        pattern: /%[-\\w]+/,\n        alias: 'selector'\n      },\n      statement: {\n        pattern: /\\B!(?:default|optional)\\b/i,\n        alias: 'keyword'\n      },\n      boolean: /\\b(?:true|false)\\b/,\n      null: /\\bnull\\b/,\n      operator: {\n        pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n        lookbehind: true\n      }\n    });\n\n    Prism.languages.scss.atrule.inside.rest = Prism.languages.scss;\n  }\n};","nrTokens":0,"nrLines":82,"files":[{"filePath":"node_modules/reprism/es/languages/scss.js","startLine":1,"endLine":82},{"filePath":"node_modules/reprism/lib/languages/scss.js","startLine":1,"endLine":82}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'scheme',\n  init: function init(Prism) {\n    Prism.languages.scheme = {\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'[^('\\s]*/,\n        greedy: true\n      },\n      keyword: {\n        pattern: /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)/,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)/,\n        lookbehind: true\n      },\n      number: {\n        pattern: /(\\s|[()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\n        lookbehind: true\n      },\n      boolean: /#[tf]/,\n      operator: {\n        pattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(\\()[^\\s()]*(?=\\s)/,\n        lookbehind: true\n      },\n      punctuation: /[()]/\n    };\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/es/languages/scheme.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/scheme.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'scala',\n  init: function init(Prism) {\n    Prism.languages.scala = Prism.languages.extend('java', {\n      keyword: /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n      string: [{\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      }, {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }],\n      builtin: /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n      number: /\\b0x[\\da-f]*\\.?[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n      symbol: /'[^\\d\\s\\\\]\\w*/\n    });\n    delete Prism.languages.scala['class-name'];\n    delete Prism.languages.scala.function;\n  }\n};","nrTokens":0,"nrLines":25,"files":[{"filePath":"node_modules/reprism/es/languages/scala.js","startLine":1,"endLine":25},{"filePath":"node_modules/reprism/lib/languages/scala.js","startLine":1,"endLine":25}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'sass',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.sass = Prism.languages.extend('css', {\n        // Sass comments don't need to be closed, only indented\n        comment: {\n          pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n          lookbehind: true\n        }\n      });\n\n      Prism.languages.insertBefore('sass', 'atrule', {\n        // We want to consume the whole line\n        'atrule-line': {\n          // Includes support for = and + shortcuts\n          pattern: /^(?:[ \\t]*)[@+=].+/m,\n          inside: {\n            atrule: /(?:@[\\w-]+|[+=])/m\n          }\n        }\n      });\n      delete Prism.languages.sass.atrule;\n\n      var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n      var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n        pattern: /(\\s+)-(?=\\s)/,\n        lookbehind: true\n      }];\n\n      Prism.languages.insertBefore('sass', 'property', {\n        // We want to consume the whole line\n        'variable-line': {\n          pattern: /^[ \\t]*\\$.+/m,\n          inside: {\n            punctuation: /:/,\n            variable: variable,\n            operator: operator\n          }\n        },\n        // We want to consume the whole line\n        'property-line': {\n          pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n          inside: {\n            property: [/[^:\\s]+(?=\\s*:)/, {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }],\n            punctuation: /:/,\n            variable: variable,\n            operator: operator,\n            important: Prism.languages.sass.important\n          }\n        }\n      });\n      delete Prism.languages.sass.property;\n      delete Prism.languages.sass.important;\n\n      // Now that whole lines for other patterns are consumed,\n      // what's left should be selectors\n      delete Prism.languages.sass.selector;\n      Prism.languages.insertBefore('sass', 'punctuation', {\n        selector: {\n          pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n          lookbehind: true\n        }\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":75,"files":[{"filePath":"node_modules/reprism/es/languages/sass.js","startLine":1,"endLine":75},{"filePath":"node_modules/reprism/lib/languages/sass.js","startLine":1,"endLine":75}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'sas',\n  init: function init(Prism) {\n    Prism.languages.sas = {\n      datalines: {\n        pattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,\n        alias: 'string',\n        inside: {\n          keyword: {\n            pattern: /^(\\s*)(?:(?:data)?lines|cards)/i,\n            lookbehind: true\n          },\n          punctuation: /;/\n        }\n      },\n      comment: [{\n        pattern: /(^\\s*|;\\s*)\\*.*;/m,\n        lookbehind: true\n      }, /\\/\\*[\\s\\S]+?\\*\\//],\n      datetime: {\n        // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n        pattern: /'[^']+'(?:dt?|t)\\b/i,\n        alias: 'number'\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n        greedy: true\n      },\n      keyword: /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then)\\b/i,\n      // Decimal (1.2e23), hexadecimal (0c1x)\n      number: /\\b(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,\n      operator: /\\*\\*?|\\|\\|?|!!?|?????|<[>=]?|>[<=]?|[-+\\/=&]|[~??^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n      punctuation: /[$%@.(){}\\[\\];,\\\\]/\n    };\n  }\n};","nrTokens":0,"nrLines":41,"files":[{"filePath":"node_modules/reprism/es/languages/sas.js","startLine":1,"endLine":41},{"filePath":"node_modules/reprism/lib/languages/sas.js","startLine":1,"endLine":41}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'rust',\n  init: function init(Prism) {\n    /* TODO\n    Add support for Markdown notation inside doc comments\n    Add support for nested block comments...\n    Match closure params even when not followed by dash or brace\n    Add better support for macro definition\n    */\n\n    Prism.languages.rust = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true\n      }],\n      string: [{\n        pattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\n        greedy: true\n      }, {\n        pattern: /b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      }],\n      char: {\n        pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,\n        alias: 'string'\n      },\n      'lifetime-annotation': {\n        pattern: /'[^\\s>']+/,\n        alias: 'symbol'\n      },\n      keyword: /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n\n      attribute: {\n        pattern: /#!?\\[.+?\\]/,\n        greedy: true,\n        alias: 'attr-name'\n      },\n\n      function: [/\\w+(?=\\s*\\()/,\n      // Macros can use parens or brackets\n      /\\w+!(?=\\s*\\(|\\[)/],\n      'macro-rules': {\n        pattern: /\\w+!/,\n        alias: 'function'\n      },\n\n      // Hex, oct, bin, dec numbers with visual separators and type suffix\n      number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\n\n      // Closure params should not be confused with bitwise OR |\n      'closure-params': {\n        pattern: /\\|[^|]*\\|(?=\\s*[{-])/,\n        inside: {\n          punctuation: /[|:,]/,\n          operator: /[&*]/\n        }\n      },\n      punctuation: /[{}[\\];(),:]|\\.+|->/,\n      operator: /[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\n    };\n  }\n};","nrTokens":0,"nrLines":70,"files":[{"filePath":"node_modules/reprism/es/languages/rust.js","startLine":1,"endLine":70},{"filePath":"node_modules/reprism/lib/languages/rust.js","startLine":1,"endLine":70}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ruby',\n  init: function init(Prism) {\n    /**\n     * Original by Samuel Flores\n     *\n     * Adds the following new token classes:\n     * \t\tconstant, builtin, variable, symbol, regex\n     */\n    (function (Prism) {\n      Prism.languages.ruby = Prism.languages.extend('clike', {\n        comment: [/#.*/, {\n          pattern: /^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end/m,\n          greedy: true\n        }],\n        keyword: /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n      });\n\n      var interpolation = {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'tag'\n          },\n          rest: Prism.languages.ruby\n        }\n      };\n\n      Prism.languages.insertBefore('ruby', 'keyword', {\n        regex: [{\n          pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          // Here we need to specifically allow interpolation\n          pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n          lookbehind: true,\n          greedy: true\n        }],\n        variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n        symbol: {\n          pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n          lookbehind: true\n        }\n      });\n\n      Prism.languages.insertBefore('ruby', 'number', {\n        builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n        constant: /\\b[A-Z]\\w*(?:[?!]|\\b)/\n      });\n\n      Prism.languages.ruby.string = [{\n        pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        // Here we need to specifically allow interpolation\n        pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }];\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":124,"files":[{"filePath":"node_modules/reprism/es/languages/ruby.js","startLine":1,"endLine":124},{"filePath":"node_modules/reprism/lib/languages/ruby.js","startLine":1,"endLine":124}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'roboconf',\n  init: function init(Prism) {\n    Prism.languages.roboconf = {\n      comment: /#.*/,\n      keyword: {\n        pattern: /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,\n        lookbehind: true\n      },\n      component: {\n        pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n        alias: 'variable'\n      },\n      property: /[\\w.-]+(?=[ \\t]*:)/,\n      value: {\n        pattern: /(=[ \\t]*)[^,;]+/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      optional: {\n        pattern: /\\(optional\\)/,\n        alias: 'builtin'\n      },\n      wildcard: {\n        pattern: /(\\.)\\*/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      punctuation: /[{},.;:=]/\n    };\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/es/languages/roboconf.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/roboconf.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'rip',\n  init: function init(Prism) {\n    Prism.languages.rip = {\n      comment: /#.*/,\n\n      keyword: /(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,\n\n      builtin: /@|\\bSystem\\b/,\n\n      boolean: /\\b(?:true|false)\\b/,\n\n      date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n      time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n      datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n\n      character: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n\n      regex: {\n        pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/(?=\\s*($|[\\r\\n,.;})]))/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      number: /[+-]?(?:(?:\\d+\\.\\d+)|(?:\\d+))/,\n\n      punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n\n      reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n    };\n  }\n};","nrTokens":0,"nrLines":42,"files":[{"filePath":"node_modules/reprism/es/languages/rip.js","startLine":1,"endLine":42},{"filePath":"node_modules/reprism/lib/languages/rip.js","startLine":1,"endLine":42}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'rest',\n  init: function init(Prism) {\n    Prism.languages.rest = {\n      table: [{\n        pattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      }, {\n        pattern: /(\\s*)(?:=+ +)+=+(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }],\n\n      // Directive-like patterns\n\n      'substitution-def': {\n        pattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n        lookbehind: true,\n        inside: {\n          substitution: {\n            pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n            alias: 'attr-value',\n            inside: {\n              punctuation: /^\\||\\|$/\n            }\n          },\n          directive: {\n            pattern: /( +)[^:]+::/,\n            lookbehind: true,\n            alias: 'function',\n            inside: {\n              punctuation: /::$/\n            }\n          }\n        }\n      },\n      'link-target': [{\n        pattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      }, {\n        pattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }],\n      directive: {\n        pattern: /(^\\s*\\.\\. )[^:]+::/m,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          punctuation: /::$/\n        }\n      },\n      comment: {\n        // The two alternatives try to prevent highlighting of blank comments\n        pattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n        lookbehind: true\n      },\n\n      title: [\n      // Overlined and underlined\n      {\n        pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      },\n\n      // Underlined only\n      {\n        pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }],\n      hr: {\n        pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      field: {\n        pattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n        lookbehind: true,\n        alias: 'attr-name'\n      },\n      'command-line-option': {\n        pattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'literal-block': {\n        pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n        inside: {\n          'literal-block-punctuation': {\n            pattern: /^::/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      'quoted-literal-block': {\n        pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n        inside: {\n          'literal-block-punctuation': {\n            pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n            alias: 'punctuation'\n          }\n        }\n      },\n      'list-bullet': {\n        pattern: /(^\\s*)(?:[*+\\-?????????]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'doctest-block': {\n        pattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /^>>>/\n        }\n      },\n\n      inline: [{\n        pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }],\n\n      link: [{\n        pattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      }, {\n        pattern: /(?:\\b[a-z\\d](?:[_.:+]?[a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }],\n\n      // Line block start,\n      // quote attribution,\n      // explicit markup start,\n      // and anonymous hyperlink target shortcut (__)\n      punctuation: {\n        pattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|???|\\.\\.|__)(?= )|\\.\\.$)/m,\n        lookbehind: true\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":203,"files":[{"filePath":"node_modules/reprism/es/languages/rest.js","startLine":1,"endLine":203},{"filePath":"node_modules/reprism/lib/languages/rest.js","startLine":1,"endLine":203}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'renpy',\n  init: function init(Prism) {\n    Prism.languages.renpy = {\n      // TODO Write tests.\n\n      comment: {\n        pattern: /(^|[^\\\\])#.+/,\n        lookbehind: true\n      },\n\n      string: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2|(?:^#?(?:(?:[0-9a-fA-F]{2}){3}|(?:[0-9a-fA-F]){3})$)/m,\n        greedy: true\n      },\n\n      function: /[a-z_]\\w*(?=\\()/i,\n\n      property: /\\b(?:insensitive|idle|hover|selected_idle|selected_hover|background|position|alt|xpos|ypos|pos|xanchor|yanchor|anchor|xalign|yalign|align|xcenter|ycenter|xofsset|yoffset|ymaximum|maximum|xmaximum|xminimum|yminimum|minimum|xsize|ysizexysize|xfill|yfill|area|antialias|black_color|bold|caret|color|first_indent|font|size|italic|justify|kerning|language|layout|line_leading|line_overlap_split|line_spacing|min_width|newline_indent|outlines|rest_indent|ruby_style|slow_cps|slow_cps_multiplier|strikethrough|text_align|underline|hyperlink_functions|vertical|hinting|foreground|left_margin|xmargin|top_margin|bottom_margin|ymargin|left_padding|right_padding|xpadding|top_padding|bottom_padding|ypadding|size_group|child|hover_sound|activate_sound|mouse|focus_mask|keyboard_focus|bar_vertical|bar_invert|bar_resizing|left_gutter|right_gutter|top_gutter|bottom_gutter|left_bar|right_bar|top_bar|bottom_bar|thumb|thumb_shadow|thumb_offset|unscrollable|spacing|first_spacing|box_reverse|box_wrap|order_reverse|fit_first|ysize|thumbnail_width|thumbnail_height|help|text_ypos|text_xpos|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|alpha|insensitive_background|hover_background|zorder|value|width|xadjustment|xanchoraround|xaround|xinitial|xoffset|xzoom|yadjustment|yanchoraround|yaround|yinitial|yzoom|zoom|ground|height|text_style|text_y_fudge|selected_insensitive|has_sound|has_music|has_voice|focus|hovered|image_style|length|minwidth|mousewheel|offset|prefix|radius|range|right_margin|rotate|rotate_pad|developer|screen_width|screen_height|window_title|name|version|windows_icon|default_fullscreen|default_text_cps|default_afm_time|main_menu_music|sample_sound|enter_sound|exit_sound|save_directory|enter_transition|exit_transition|intra_transition|main_game_transition|game_main_transition|end_splash_transition|end_game_transition|after_load_transition|window_show_transition|window_hide_transition|adv_nvl_transition|nvl_adv_transition|enter_yesno_transition|exit_yesno_transition|enter_replay_transition|exit_replay_transition|say_attribute_transition|directory_name|executable_name|include_update|window_icon|modal|google_play_key|google_play_salt|drag_name|drag_handle|draggable|dragged|droppable|dropped|narrator_menu|action|default_afm_enable|version_name|version_tuple|inside|fadeout|fadein|layers|layer_clipping|linear|scrollbars|side_xpos|side_ypos|side_spacing|edgescroll|drag_joined|drag_raise|drop_shadow|drop_shadow_color|subpixel|easein|easeout|time|crop|auto|update|get_installed_packages|can_update|UpdateVersion|Update|overlay_functions|translations|window_left_padding|show_side_image|show_two_window)\\b/,\n\n      tag: /\\b(?:label|image|menu|[hv]box|frame|text|imagemap|imagebutton|bar|vbar|screen|textbutton|buttoscreenn|fixed|grid|input|key|mousearea|side|timer|viewport|window|hotspot|hotbar|self|button|drag|draggroup|tag|mm_menu_frame|nvl|block|parallel)\\b|\\$/,\n\n      keyword: /\\b(?:as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|yield|adjustment|alignaround|allow|angle|around|box_layout|cache|changed|child_size|clicked|clipping|corner1|corner2|default|delay|exclude|scope|slow|slow_abortable|slow_done|sound|style_group|substitute|suffix|transform_anchor|transpose|unhovered|config|theme|mm_root|gm_root|rounded_window|build|disabled_text|disabled|widget_selected|widget_text|widget_hover|widget|updater|behind|call|expression|hide|init|jump|onlayer|python|renpy|scene|set|show|transform|play|queue|stop|pause|define|window|repeat|contains|choice|on|function|event|animation|clockwise|counterclockwise|circles|knot|null|None|random|has|add|use|fade|dissolve|style|store|id|voice|center|left|right|less_rounded|music|movie|clear|persistent|ui)\\b/,\n\n      boolean: /\\b(?:[Tt]rue|[Ff]alse)\\b/,\n\n      number: /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at)\\b/,\n\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/es/languages/renpy.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/renpy.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'reason',\n  init: function init(Prism) {\n    Prism.languages.reason = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      // 'class-name' must be matched *after* 'constructor' defined below\n      'class-name': /\\b[A-Z]\\w*/,\n      keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n      operator: /\\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n    });\n    Prism.languages.insertBefore('reason', 'class-name', {\n      character: {\n        pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n        alias: 'string'\n      },\n      constructor: {\n        // Negative look-ahead prevents from matching things like String.capitalize\n        pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n        alias: 'variable'\n      },\n      label: {\n        pattern: /\\b[a-z]\\w*(?=::)/,\n        alias: 'symbol'\n      }\n    });\n\n    // We can't match functions property, so let's not even try.\n    delete Prism.languages.reason.function;\n  }\n};","nrTokens":0,"nrLines":42,"files":[{"filePath":"node_modules/reprism/es/languages/reason.js","startLine":1,"endLine":42},{"filePath":"node_modules/reprism/lib/languages/reason.js","startLine":1,"endLine":42}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'r',\n  init: function init(Prism) {\n    Prism.languages.r = {\n      comment: /#.*/,\n      string: {\n        pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      'percent-operator': {\n        // Includes user-defined operators\n        // and %%, %*%, %/%, %in%, %o%, %x%\n        pattern: /%[^%\\s]*%/,\n        alias: 'operator'\n      },\n      boolean: /\\b(?:TRUE|FALSE)\\b/,\n      ellipsis: /\\.\\.(?:\\.|\\d+)/,\n      number: [/\\b(?:NaN|Inf)\\b/, /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/],\n      keyword: /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n      operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n      punctuation: /[(){}\\[\\],;]/\n    };\n  }\n};","nrTokens":0,"nrLines":29,"files":[{"filePath":"node_modules/reprism/es/languages/r.js","startLine":1,"endLine":29},{"filePath":"node_modules/reprism/lib/languages/r.js","startLine":1,"endLine":29}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'qore',\n  init: function init(Prism) {\n    Prism.languages.qore = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      // Overridden to allow unescaped multi-line strings\n      string: {\n        pattern: /(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      variable: /\\$(?!\\d)\\w+\\b/,\n      keyword: /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n      number: /\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,\n      boolean: /\\b(?:true|false)\\b/i,\n      operator: {\n        pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n        lookbehind: true\n      },\n      function: /\\$?\\b(?!\\d)\\w+(?=\\()/\n    });\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/es/languages/qore.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/qore.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'q',\n  init: function init(Prism) {\n    Prism.languages.q = {\n      string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      comment: [\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n      {\n        pattern: /([\\t )\\]}])\\/.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n      {\n        pattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n      {\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n        greedy: true\n      }, {\n        pattern: /^#!.+/m,\n        greedy: true\n      }],\n      symbol: /`(?::\\S+|[\\w.]*)/,\n      datetime: {\n        pattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n        alias: 'number'\n      },\n      // The negative look-ahead prevents bad highlighting\n      // of verbs 0: and 1:\n      number: /\\b(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\\da-fA-F]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?[hjfeb]?)/,\n      keyword: /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n      adverb: {\n        pattern: /['\\/\\\\]:?|\\beach\\b/,\n        alias: 'function'\n      },\n      verb: {\n        pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?_~=|$&#@^]):?/,\n        alias: 'operator'\n      },\n      punctuation: /[(){}\\[\\];.]/\n    };\n  }\n};","nrTokens":0,"nrLines":58,"files":[{"filePath":"node_modules/reprism/es/languages/q.js","startLine":1,"endLine":58},{"filePath":"node_modules/reprism/lib/languages/q.js","startLine":1,"endLine":58}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'python',\n  init: function init(Prism) {\n    Prism.languages.python = {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      },\n      'triple-quoted-string': {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        greedy: true,\n        alias: 'string'\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      function: {\n        pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n        lookbehind: true\n      },\n      'class-name': {\n        pattern: /(\\bclass\\s+)\\w+/i,\n        lookbehind: true\n      },\n      keyword: /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,\n      builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n      boolean: /\\b(?:True|False|None)\\b/,\n      number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/es/languages/python.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/python.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'pure',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.pure = {\n        comment: [{\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true\n        }, {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true\n        }, /#!.+/],\n        'inline-lang': {\n          pattern: /%<[\\s\\S]+?%>/,\n          greedy: true,\n          inside: {\n            lang: {\n              pattern: /(^%< *)-\\*-.+?-\\*-/,\n              lookbehind: true,\n              alias: 'comment'\n            },\n            delimiter: {\n              pattern: /^%<.*|%>$/,\n              alias: 'punctuation'\n            }\n          }\n        },\n        string: {\n          pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n          greedy: true\n        },\n        number: {\n          // The look-behind prevents wrong highlighting of the .. operator\n          pattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,\n          lookbehind: true\n        },\n        keyword: /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n        function: /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n        special: {\n          pattern: /\\b__[a-z]+__\\b/i,\n          alias: 'builtin'\n        },\n        // Any combination of operator chars can be an operator\n        operator: /(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,\n        // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n        punctuation: /[(){}\\[\\];,|]/\n      };\n\n      var inlineLanguages = ['c', { lang: 'c++', alias: 'cpp' }, 'fortran', 'ats', 'dsp'];\n      var inlineLanguageRe = '%< *-\\\\*- *{lang}\\\\d* *-\\\\*-[\\\\s\\\\S]+?%>';\n\n      inlineLanguages.forEach(function (lang) {\n        var alias = lang;\n        if (typeof lang !== 'string') {\n          alias = lang.alias;\n          lang = lang.lang;\n        }\n        if (Prism.languages[alias]) {\n          var o = {};\n          o['inline-lang-' + alias] = {\n            pattern: RegExp(inlineLanguageRe.replace('{lang}', lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')), 'i'),\n            inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n          };\n          o['inline-lang-' + alias].inside.rest = Prism.util.clone(Prism.languages[alias]);\n          Prism.languages.insertBefore('pure', 'inline-lang', o);\n        }\n      });\n\n      // C is the default inline language\n      if (Prism.languages.c) {\n        Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(Prism.languages.c);\n      }\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":80,"files":[{"filePath":"node_modules/reprism/es/languages/pure.js","startLine":1,"endLine":80},{"filePath":"node_modules/reprism/lib/languages/pure.js","startLine":1,"endLine":80}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'puppet',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.puppet = {\n        heredoc: [\n        // Matches the content of a quoted heredoc string (subject to interpolation)\n        {\n          pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n            // See interpolation below\n          }\n        },\n        // Matches the content of an unquoted heredoc string (no interpolation)\n        {\n          pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n          }\n        },\n        // Matches the start tag of heredoc strings\n        {\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n          alias: 'string',\n          inside: {\n            punctuation: {\n              pattern: /(\\().+?(?=\\))/,\n              lookbehind: true\n            }\n          }\n        }],\n        'multiline-comment': {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        regex: {\n          // Must be prefixed with the keyword \"node\" or a non-word char\n          pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            // Extended regexes must have the x flag. They can contain single-line comments.\n            'extended-regex': {\n              pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n              inside: {\n                comment: /#.*/\n              }\n            }\n          }\n        },\n        comment: {\n          pattern: /(^|[^\\\\])#.*/,\n          lookbehind: true,\n          greedy: true\n        },\n        string: {\n          // Allow for one nested level of double quotes inside interpolation\n          pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n          greedy: true,\n          inside: {\n            'double-quoted': {\n              pattern: /^\"[\\s\\S]*\"$/,\n              inside: {\n                // See interpolation below\n              }\n            }\n          }\n        },\n        variable: {\n          pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n          inside: {\n            punctuation: /::/\n          }\n        },\n        'attr-name': /(?:\\w+|\\*)(?=\\s*=>)/,\n        function: [{\n          pattern: /(\\.)(?!\\d)\\w+/,\n          lookbehind: true\n        }, /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],\n        number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n        boolean: /\\b(?:true|false)\\b/,\n        // Includes words reserved for future use\n        keyword: /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n        datatype: {\n          pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n          alias: 'symbol'\n        },\n        operator: /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n        punctuation: /[\\[\\]{}().,;]|:+/\n      };\n\n      var interpolation = [{\n        // Allow for one nested level of braces inside interpolation\n        pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n        lookbehind: true,\n        inside: {\n          'short-variable': {\n            // Negative look-ahead prevent wrong highlighting of functions\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n            lookbehind: true,\n            alias: 'variable',\n            inside: {\n              punctuation: /::/\n            }\n          },\n          delimiter: {\n            pattern: /^\\$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.puppet\n        }\n      }, {\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          punctuation: /::/\n        }\n      }];\n      Prism.languages.puppet.heredoc[0].inside.interpolation = interpolation;\n      Prism.languages.puppet.string.inside['double-quoted'].inside.interpolation = interpolation;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":139,"files":[{"filePath":"node_modules/reprism/es/languages/puppet.js","startLine":1,"endLine":139},{"filePath":"node_modules/reprism/lib/languages/puppet.js","startLine":1,"endLine":139}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'pug',\n  init: function init(Prism) {\n    (function (Prism) {\n      // TODO:\n      // - Add CSS highlighting inside <style> tags\n      // - Add support for multi-line code blocks\n      // - Add support for interpolation #{} and !{}\n      // - Add support for tag interpolation #[]\n      // - Add explicit support for plain text using |\n      // - Add support for markup embedded in plain text\n\n      Prism.languages.pug = {\n        // Multiline stuff should appear before the rest\n\n        // This handles both single-line and multi-line comments\n        comment: {\n          pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\n          lookbehind: true\n        },\n\n        // All the tag-related part is in lookbehind\n        // so that it can be highlighted by the \"tag\" pattern\n        'multiline-script': {\n          pattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.javascript\n          }\n        },\n\n        // See at the end of the file for known filters\n        filter: {\n          pattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            }\n          }\n        },\n\n        'multiline-plain-text': {\n          pattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n          lookbehind: true\n        },\n        markup: {\n          pattern: /(^[\\t ]*)<.+/m,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.markup\n          }\n        },\n        doctype: {\n          pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n          lookbehind: true\n        },\n\n        // This handle all conditional and loop keywords\n        'flow-control': {\n          pattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n          lookbehind: true,\n          inside: {\n            each: {\n              pattern: /^each .+? in\\b/,\n              inside: {\n                keyword: /\\b(?:each|in)\\b/,\n                punctuation: /,/\n              }\n            },\n            branch: {\n              pattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n              alias: 'keyword'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        keyword: {\n          pattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n          lookbehind: true\n        },\n        mixin: [\n        // Declaration\n        {\n          pattern: /(^[\\t ]*)mixin .+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^mixin/,\n            function: /\\w+(?=\\s*\\(|\\s*$)/,\n            punctuation: /[(),.]/\n          }\n        },\n        // Usage\n        {\n          pattern: /(^[\\t ]*)\\+.+/m,\n          lookbehind: true,\n          inside: {\n            name: {\n              pattern: /^\\+\\w+/,\n              alias: 'function'\n            },\n            rest: Prism.languages.javascript\n          }\n        }],\n        script: {\n          pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.javascript\n          }\n        },\n\n        'plain-text': {\n          pattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\n          lookbehind: true\n        },\n        tag: {\n          pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n          lookbehind: true,\n          inside: {\n            attributes: [{\n              pattern: /&[^(]+\\([^)]+\\)/,\n              inside: {\n                rest: Prism.languages.javascript\n              }\n            }, {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                  lookbehind: true,\n                  inside: {\n                    rest: Prism.languages.javascript\n                  }\n                },\n                'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[!=(),]+/\n              }\n            }],\n            punctuation: /:/\n          }\n        },\n        code: [{\n          pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.javascript\n          }\n        }],\n        punctuation: /[.\\-!=|]+/\n      };\n\n      var filter_pattern = '(^([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r(?!\\\\n))(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\n\n      // Non exhaustive list of available filters and associated languages\n      var filters = [{ filter: 'atpl', language: 'twig' }, { filter: 'coffee', language: 'coffeescript' }, 'ejs', 'handlebars', 'hogan', 'less', 'livescript', 'markdown', 'mustache', 'plates', { filter: 'sass', language: 'scss' }, 'stylus', 'swig'];\n      var all_filters = {};\n      for (var i = 0, l = filters.length; i < l; i++) {\n        var filter = filters[i];\n        filter = typeof filter === 'string' ? { filter: filter, language: filter } : filter;\n        if (Prism.languages[filter.language]) {\n          all_filters['filter-' + filter.filter] = {\n            pattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter), 'm'),\n            lookbehind: true,\n            inside: {\n              'filter-name': {\n                pattern: /^:[\\w-]+/,\n                alias: 'variable'\n              },\n              rest: Prism.languages[filter.language]\n            }\n          };\n        }\n      }\n\n      Prism.languages.insertBefore('pug', 'filter', all_filters);\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":185,"files":[{"filePath":"node_modules/reprism/es/languages/pug.js","startLine":1,"endLine":185},{"filePath":"node_modules/reprism/lib/languages/pug.js","startLine":1,"endLine":185}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'protobuf',\n  init: function init(Prism) {\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\n      keyword: /\\b(?:package|import|message|enum)\\b/,\n      builtin: /\\b(?:required|repeated|optional|reserved)\\b/,\n      primitive: {\n        pattern: /\\b(?:double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b/,\n        alias: 'symbol'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/reprism/es/languages/protobuf.js","startLine":1,"endLine":18},{"filePath":"node_modules/reprism/lib/languages/protobuf.js","startLine":1,"endLine":18}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'properties',\n  init: function init(Prism) {\n    Prism.languages.properties = {\n      comment: /^[ \\t]*[#!].*$/m,\n      'attr-value': {\n        pattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n        lookbehind: true\n      },\n      'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )/m,\n      punctuation: /[=:]/\n    };\n  }\n};","nrTokens":0,"nrLines":19,"files":[{"filePath":"node_modules/reprism/es/languages/properties.js","startLine":1,"endLine":19},{"filePath":"node_modules/reprism/lib/languages/properties.js","startLine":1,"endLine":19}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'prolog',\n  init: function init(Prism) {\n    Prism.languages.prolog = {\n      // Syntax depends on the implementation\n      comment: [/%.+/, /\\/\\*[\\s\\S]*?\\*\\//],\n      // Depending on the implementation, strings may allow escaped newlines and quote-escape\n      string: {\n        pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n      variable: /\\b[A-Z_]\\w*/,\n      // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n      function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n      number: /\\b\\d+\\.?\\d*/,\n      // Custom operators are allowed\n      operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n      punctuation: /[(){}\\[\\],]/\n    };\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/es/languages/prolog.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/prolog.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'processing',\n  init: function init(Prism) {\n    Prism.languages.processing = Prism.languages.extend('clike', {\n      keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n      operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n    });\n    Prism.languages.insertBefore('processing', 'number', {\n      // Special case: XML is a type\n      constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n      type: {\n        pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n        alias: 'variable'\n      }\n    });\n\n    // Spaces are allowed between function name and parenthesis\n    Prism.languages.processing.function.pattern = /\\w+(?=\\s*\\()/;\n\n    // Class-names is not styled by default\n    Prism.languages.processing['class-name'].alias = 'variable';\n  }\n};","nrTokens":0,"nrLines":28,"files":[{"filePath":"node_modules/reprism/es/languages/processing.js","startLine":1,"endLine":28},{"filePath":"node_modules/reprism/lib/languages/processing.js","startLine":1,"endLine":28}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'powershell',\n  init: function init(Prism) {\n    Prism.languages.powershell = {\n      comment: [{\n        pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^`])#.*/,\n        lookbehind: true\n      }],\n      string: [{\n        pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n        greedy: true,\n        inside: {\n          function: {\n            pattern: /(^|[^`])\\$\\(.*?\\)/,\n            lookbehind: true,\n            // Populated at end of file\n            inside: {}\n          }\n        }\n      }, {\n        pattern: /'(?:[^']|'')*'/,\n        greedy: true\n      }],\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*]|[^\\[\\]])*]|[^\\[\\]])*]/i,\n      boolean: /\\$(?:true|false)\\b/i,\n      variable: /\\$\\w+\\b/i,\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      function: [/\\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i, /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i],\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n      keyword: /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n      operator: {\n        pattern: /(\\W?)(?:!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n        lookbehind: true\n      },\n      punctuation: /[|{}[\\];(),.]/\n\n      // Variable interpolation inside strings, and nested expressions\n    };Prism.languages.powershell.string[0].inside.boolean = Prism.languages.powershell.boolean;\n    Prism.languages.powershell.string[0].inside.variable = Prism.languages.powershell.variable;\n    Prism.languages.powershell.string[0].inside.function.inside = Prism.languages.powershell;\n  }\n};","nrTokens":0,"nrLines":54,"files":[{"filePath":"node_modules/reprism/es/languages/powershell.js","startLine":1,"endLine":54},{"filePath":"node_modules/reprism/lib/languages/powershell.js","startLine":1,"endLine":54}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'plsql',\n  init: function init(Prism) {\n    Prism.languages.plsql = Prism.languages.extend('sql', {\n      comment: [/\\/\\*[\\s\\S]*?\\*\\//, /--.*/]\n    });\n\n    if (Prism.util.type(Prism.languages.plsql.keyword) !== 'Array') {\n      Prism.languages.plsql.keyword = [Prism.languages.plsql.keyword];\n    }\n    Prism.languages.plsql.keyword.unshift(/\\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\\b/i);\n\n    if (Prism.util.type(Prism.languages.plsql.operator) !== 'Array') {\n      Prism.languages.plsql.operator = [Prism.languages.plsql.operator];\n    }\n    Prism.languages.plsql.operator.unshift(/:=/);\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/es/languages/plsql.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/plsql.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'php',\n  init: function init(Prism) {\n    /**\n     * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n     * Modified by Miles Johnson: http://milesj.me\n     *\n     * Supports the following:\n     * \t\t- Extends clike syntax\n     * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n     * \t\t- Smarter constant and function matching\n     *\n     * Adds the following new token classes:\n     * \t\tconstant, delimiter, variable, function, package\n     */\n    (function (Prism) {\n      Prism.languages.php = Prism.languages.extend('clike', {\n        keyword: /\\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n        constant: /\\b[A-Z0-9_]{2,}\\b/,\n        comment: {\n          pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n          lookbehind: true\n        }\n      });\n\n      Prism.languages.insertBefore('php', 'string', {\n        'shell-comment': {\n          pattern: /(^|[^\\\\])#.*/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n      });\n\n      Prism.languages.insertBefore('php', 'keyword', {\n        delimiter: {\n          pattern: /\\?>|<\\?(?:php|=)?/i,\n          alias: 'important'\n        },\n        variable: /\\$+(?:\\w+\\b|(?={))/i,\n        package: {\n          pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        }\n      });\n\n      // Must be defined after the function pattern\n      Prism.languages.insertBefore('php', 'operator', {\n        property: {\n          pattern: /(->)[\\w]+/,\n          lookbehind: true\n        }\n      });\n\n      Prism.languages.insertBefore('php', 'string', {\n        'nowdoc-string': {\n          pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            delimiter: {\n              pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n              alias: 'symbol',\n              inside: {\n                punctuation: /^<<<'?|[';]$/\n              }\n            }\n          }\n        },\n        'heredoc-string': {\n          pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            delimiter: {\n              pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n              alias: 'symbol',\n              inside: {\n                punctuation: /^<<<\"?|[\";]$/\n              }\n            },\n            interpolation: null // See below\n          }\n        },\n        'single-quoted-string': {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true,\n          alias: 'string'\n        },\n        'double-quoted-string': {\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: null // See below\n          }\n        }\n      });\n      // The different types of PHP strings \"replace\" the C-like standard string\n      delete Prism.languages.php.string;\n\n      var string_interpolation = {\n        pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.php\n        }\n      };\n      Prism.languages.php['heredoc-string'].inside.interpolation = string_interpolation;\n      Prism.languages.php['double-quoted-string'].inside.interpolation = string_interpolation;\n\n      Prism.hooks.add('before-tokenize', function (env) {\n        if (!/(?:<\\?php|<\\?)/gi.test(env.code)) {\n          return;\n        }\n\n        var phpPattern = /(?:<\\?php|<\\?)[\\s\\S]*?(?:\\?>|$)/gi;\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n      });\n\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":133,"files":[{"filePath":"node_modules/reprism/es/languages/php.js","startLine":1,"endLine":133},{"filePath":"node_modules/reprism/lib/languages/php.js","startLine":1,"endLine":133}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'php-extras',\n  init: function init(Prism) {\n    Prism.languages.insertBefore('php', 'variable', {\n      this: /\\$this\\b/,\n      global: /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n      scope: {\n        pattern: /\\b[\\w\\\\]+::/,\n        inside: {\n          keyword: /static|self|parent/,\n          punctuation: /::|\\\\/\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/es/languages/php-extras.js","startLine":1,"endLine":21},{"filePath":"node_modules/reprism/lib/languages/php-extras.js","startLine":1,"endLine":21}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'perl',\n  init: function init(Prism) {\n    Prism.languages.perl = {\n      comment: [{\n        // POD\n        pattern: /(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\$])#.*/,\n        lookbehind: true\n      }],\n      // TODO Could be nice to handle Heredoc too.\n      string: [\n      // q/.../\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      },\n\n      // q a...a\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      },\n\n      // q(...)\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n        greedy: true\n      },\n\n      // q{...}\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\n        greedy: true\n      },\n\n      // q[...]\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n        greedy: true\n      },\n\n      // q<...>\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n        greedy: true\n      },\n\n      // \"...\", `...`\n      {\n        pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      },\n\n      // '...'\n      // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n      {\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n        greedy: true\n      }],\n      regex: [\n      // m/.../\n      {\n        pattern: /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m a...a\n      {\n        pattern: /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m(...)\n      {\n        pattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m{...}\n      {\n        pattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m[...]\n      {\n        pattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m<...>\n      {\n        pattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // The lookbehinds prevent -s from breaking\n      // FIXME We don't handle change of separator like s(...)[...]\n      // s/.../.../\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s a...a...a\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s(...)(...)\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s{...}{...}\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s[...][...]\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s<...><...>\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // /.../\n      // The look-ahead tries to prevent two divisions on\n      // the same line from being highlighted as regex.\n      // This does not support multi-line regex.\n      {\n        pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n        greedy: true\n      }],\n\n      // FIXME Not sure about the handling of ::, ', and #\n      variable: [\n      // ${^POSTMATCH}\n      /[&*$@%]\\{\\^[A-Z]+\\}/,\n      // $^V\n      /[&*$@%]\\^[A-Z_]/,\n      // ${...}\n      /[&*$@%]#?(?=\\{)/,\n      // $foo\n      /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i,\n      // $1\n      /[&*$@%]\\d+/,\n      // $_, @_, %!\n      // The negative lookahead prevents from breaking the %= operator\n      /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/],\n      filehandle: {\n        // <>, <FOO>, _\n        pattern: /<(?![<=])\\S*>|\\b_\\b/,\n        alias: 'symbol'\n      },\n      vstring: {\n        // v1.2, 1.2.3\n        pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n        alias: 'string'\n      },\n      function: {\n        pattern: /sub [a-z0-9_]+/i,\n        inside: {\n          keyword: /sub/\n        }\n      },\n      keyword: /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n      number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n      operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\n      punctuation: /[{}[\\];(),:]/\n    };\n  }\n};","nrTokens":0,"nrLines":195,"files":[{"filePath":"node_modules/reprism/es/languages/perl.js","startLine":1,"endLine":195},{"filePath":"node_modules/reprism/lib/languages/perl.js","startLine":1,"endLine":195}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'pascal',\n  init: function init(Prism) {\n    // Based on Free Pascal\n\n    /* TODO\n    Support inline asm ?\n    */\n\n    Prism.languages.pascal = {\n      comment: [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\n      string: {\n        pattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n        greedy: true\n      },\n      keyword: [{\n        // Turbo Pascal\n        pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      }, {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      }, {\n        // Object Pascal\n        pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      }, {\n        // Modifiers\n        pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }],\n      number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i,\n      // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],\n      operator: [/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i, {\n        pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }],\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n    };\n  }\n};","nrTokens":0,"nrLines":50,"files":[{"filePath":"node_modules/reprism/es/languages/pascal.js","startLine":1,"endLine":50},{"filePath":"node_modules/reprism/lib/languages/pascal.js","startLine":1,"endLine":50}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'parser',\n  init: function init(Prism) {\n    Prism.languages.parser = Prism.languages.extend('markup', {\n      keyword: {\n        pattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\.|:+/\n        }\n      },\n      function: {\n        pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /(^@)(?:GET_|SET_)/,\n            lookbehind: true\n          },\n          punctuation: /\\.|:+/\n        }\n      },\n      escape: {\n        pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n        alias: 'builtin'\n      },\n      punctuation: /[\\[\\](){};]/\n    });\n    Prism.languages.insertBefore('parser', 'keyword', {\n      'parser-comment': {\n        pattern: /(\\s)#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      expression: {\n        // Allow for 3 levels of depth\n        pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n        greedy: true,\n        lookbehind: true,\n        inside: {\n          string: {\n            pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n            lookbehind: true\n          },\n          keyword: Prism.languages.parser.keyword,\n          variable: Prism.languages.parser.variable,\n          function: Prism.languages.parser.function,\n          boolean: /\\b(?:true|false)\\b/,\n          number: /\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,\n          escape: Prism.languages.parser.escape,\n          operator: /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n          punctuation: Prism.languages.parser.punctuation\n        }\n      }\n    });\n    Prism.languages.insertBefore('inside', 'punctuation', {\n      expression: Prism.languages.parser.expression,\n      keyword: Prism.languages.parser.keyword,\n      variable: Prism.languages.parser.variable,\n      function: Prism.languages.parser.function,\n      escape: Prism.languages.parser.escape,\n      'parser-punctuation': {\n        pattern: Prism.languages.parser.punctuation,\n        alias: 'punctuation'\n      }\n    }, Prism.languages.parser.tag.inside['attr-value']);\n  }\n};","nrTokens":0,"nrLines":77,"files":[{"filePath":"node_modules/reprism/es/languages/parser.js","startLine":1,"endLine":77},{"filePath":"node_modules/reprism/lib/languages/parser.js","startLine":1,"endLine":77}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'parigp',\n  init: function init(Prism) {\n    Prism.languages.parigp = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      },\n      // PARI/GP does not care about white spaces at all\n      // so let's process the keywords to build an appropriate regexp\n      // (e.g. \"b *r *e *a *k\", etc.)\n      keyword: function () {\n        var keywords = ['breakpoint', 'break', 'dbg_down', 'dbg_err', 'dbg_up', 'dbg_x', 'forcomposite', 'fordiv', 'forell', 'forpart', 'forprime', 'forstep', 'forsubgroup', 'forvec', 'for', 'iferr', 'if', 'local', 'my', 'next', 'return', 'until', 'while'];\n        keywords = keywords.map(function (keyword) {\n          return keyword.split('').join(' *');\n        }).join('|');\n        return RegExp('\\\\b(?:' + keywords + ')\\\\b');\n      }(),\n      function: /\\w[\\w ]*?(?= *\\()/,\n      number: {\n        // The lookbehind and the negative lookahead prevent from breaking the .. operator\n        pattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,\n        lookbehind: true\n      },\n      operator: /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n      punctuation: /[\\[\\]{}().,:;|]/\n    };\n  }\n};","nrTokens":0,"nrLines":35,"files":[{"filePath":"node_modules/reprism/es/languages/parigp.js","startLine":1,"endLine":35},{"filePath":"node_modules/reprism/lib/languages/parigp.js","startLine":1,"endLine":35}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'oz',\n  init: function init(Prism) {\n    Prism.languages.oz = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n        greedy: true\n      },\n      atom: {\n        pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n        greedy: true,\n        alias: 'builtin'\n      },\n      keyword: /[$_]|\\[\\]|\\b(?:at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n      function: [/[a-z][A-Za-z\\d]*(?=\\()/, {\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*/,\n        lookbehind: true\n      }],\n      number: /\\b(?:0[bx][\\da-f]+|\\d+\\.?\\d*(?:e~?\\d+)?\\b)|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n      variable: /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\n      'attr-name': /\\w+(?=:)/,\n      operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n      punctuation: /[\\[\\](){}.:;?]/\n    };\n  }\n};","nrTokens":0,"nrLines":32,"files":[{"filePath":"node_modules/reprism/es/languages/oz.js","startLine":1,"endLine":32},{"filePath":"node_modules/reprism/lib/languages/oz.js","startLine":1,"endLine":32}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'opencl',\n  init: function init(Prism) {\n    (function (Prism) {\n      /* OpenCL kernel language */\n      Prism.languages.opencl = Prism.languages.extend('c', {\n        // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n        keyword: /\\b(?:__attribute__|(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|auto|break|case|cl_(?:image_format|mem_fence_flags)|clk_event_t|complex|const|continue|default|do|(?:float|double)(?:16(?:x(?:1|16|2|4|8))?|1x(?:1|16|2|4|8)|2(?:x(?:1|16|2|4|8))?|3|4(?:x(?:1|16|2|4|8))?|8(?:x(?:1|16|2|4|8))?)?|else|enum|event_t|extern|for|goto|(?:u?(?:char|short|int|long)|half|quad|bool)(?:2|3|4|8|16)?|if|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|imaginary|inline|intptr_t|ndrange_t|packed|pipe|ptrdiff_t|queue_t|register|reserve_id_t|restrict|return|sampler_t|signed|size_t|sizeof|static|struct|switch|typedef|uintptr_t|uniform|union|unsigned|void|volatile|while)\\b/,\n        // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (global-vars, opencl-dev)\n        'function-opencl-kernel': {\n          pattern: /\\b(?:abs(?:_diff)?|a?(?:cos|sin)(?:h|pi)?|add_sat|aligned|all|and|any|async(?:_work_group_copy|_work_group_strided_copy)?|atan(?:2?(?:pi)?|h)?|atom_(?:add|and|cmpxchg|dec|inc|max|min|or|sub|xchg|xor)|barrier|bitselect|cbrt|ceil|clamp|clz|copies|copysign|cross|degrees|distance|dot|endian|erf|erfc|exp(?:2|10)?|expm1|fabs|fast_(?:distance|length|normalize)|fdim|floor|fma|fmax|fmin|fract|frexp|fro|from|get_(?:global_(?:id|offset|size)|group_id|image_(?:channel_data_type|channel_order|depth|dim|height|width)|local(?:_id|_size)|num_groups|work_dim)|hadd|(?:half|native)_(?:cos|divide|exp(?:2|10)?|log(?:2|10)?|powr|recip|r?sqrt|sin|tan)|hypot|ilogb|is(?:equal|finite|greater(?:equal)?|inf|less(?:equal|greater)?|nan|normal|notequal|(?:un)?ordered)|ldexp|length|lgamma|lgamma_r|log(?:b|1p|2|10)?|mad(?:24|_hi|_sat)?|max|mem(?:_fence)?|min|mix|modf|mul24|mul_hi|nan|nextafter|normalize|pow[nr]?|prefetch|radians|read_(?:image)(?:f|h|u?i)|read_mem_fence|remainder|remquo|reqd_work_group_size|rhadd|rint|rootn|rotate|round|rsqrt|select|shuffle2?|sign|signbit|sincos|smoothstep|sqrt|step|sub_sat|tan|tanh|tanpi|tgamma|to|trunc|upsample|vec_(?:step|type_hint)|v(?:load|store)(?:_half)?(?:2|3|4|8|16)?|v(?:loada_half|storea?(?:_half)?)(?:2|3|4|8|16)?(?:_(?:rte|rtn|rtp|rtz))?|wait_group_events|work_group_size_hint|write_image(?:f|h|u?i)|write_mem_fence)\\b/,\n          alias: 'function'\n        },\n        // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n        'constant-opencl-kernel': {\n          pattern: /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:LOCAL|GLOBAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT)_(?:DIG|EPSILON|MANT_DIG|(?:MIN|MAX)(?:(?:_10)?_EXP)?)|FLT_RADIX|HUGE_VALF|INFINITY|(?:INT|LONG|SCHAR|SHRT|UCHAR|UINT|ULONG)_(?:MAX|MIN)|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:10|2)E?|PI[24]?|SQRT(?:1_2|2))|NAN)\\b/,\n          alias: 'constant'\n        }\n      });\n\n      var attributes = {\n        // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n        'type-opencl-host': {\n          pattern: /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|short|int|long)|float|double)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n          alias: 'keyword'\n        },\n        'boolean-opencl-host': {\n          pattern: /\\bCL_(?:TRUE|FALSE)\\b/,\n          alias: 'boolean'\n        },\n        // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n        'constant-opencl-host': {\n          pattern: /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:16|24|8|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n          alias: 'constant'\n        },\n        // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n        'function-opencl-host': {\n          pattern: /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|Kernel|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n          alias: 'function'\n        }\n\n        /* OpenCL host API */\n      };Prism.languages.insertBefore('c', 'keyword', attributes);\n      // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n      attributes['type-opencl-host-c++'] = {\n        pattern: /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|Sampler|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|UserEvent)\\b/,\n        alias: 'keyword'\n        // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n      };Prism.languages.insertBefore('cpp', 'keyword', attributes);\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":57,"files":[{"filePath":"node_modules/reprism/es/languages/opencl.js","startLine":1,"endLine":57},{"filePath":"node_modules/reprism/lib/languages/opencl.js","startLine":1,"endLine":57}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ocaml',\n  init: function init(Prism) {\n    Prism.languages.ocaml = {\n      comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n      string: [{\n        pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      }, {\n        pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n        greedy: true\n      }],\n      number: /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n      type: {\n        pattern: /\\B['`]\\w*/,\n        alias: 'variable'\n      },\n      directive: {\n        pattern: /\\B#\\w+/,\n        alias: 'function'\n      },\n      keyword: /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      // Custom operators are allowed\n      operator: /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n      punctuation: /[(){}\\[\\]|_.,:;]/\n    };\n  }\n};","nrTokens":0,"nrLines":34,"files":[{"filePath":"node_modules/reprism/es/languages/ocaml.js","startLine":1,"endLine":34},{"filePath":"node_modules/reprism/lib/languages/ocaml.js","startLine":1,"endLine":34}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'objectivec',\n  init: function init(Prism) {\n    Prism.languages.objectivec = Prism.languages.extend('c', {\n      keyword: /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n      string: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n    });\n  }\n};","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/reprism/es/languages/objectivec.js","startLine":1,"endLine":15},{"filePath":"node_modules/reprism/lib/languages/objectivec.js","startLine":1,"endLine":15}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nsis',\n  init: function init(Prism) {\n    /**\n     * Original by Jan T. Sott (http://github.com/idleberg)\n     *\n     * Includes all commands and plug-ins shipped with NSIS 3.02\n     */\n    Prism.languages.nsis = {\n      comment: {\n        pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n        lookbehind: true\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      keyword: {\n        pattern: /(^\\s*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|Banner|BG(?:Font|Gradient|Image)|BrandingText|BringToFront|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|WriteUTF16LE|Seek|Write|WriteByte|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DlgItem|DLLVersion(?:Local)?|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|Name|Nop|ns(?:Dialogs|Exec)|NSISdl|OutFile|Page(?:Callbacks)?|PE(?:DllCharacteristics|SubsysVer)|Pop|Push|Quit|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Unicode|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UninstPage|UnRegDLL|UserInfo|Var|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle)\\b/m,\n        lookbehind: true\n      },\n      property: /\\b(?:admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user|ARCHIVE|FILE_(ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK((CR|CU|LM)(32|64)?|DD|PD|U)|HKEY_(CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)\\b/,\n      constant: /\\${[\\w\\.:\\^-]+}|\\$\\([\\w\\.:\\^-]+\\)/i,\n      variable: /\\$\\w+/i,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n      operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n      punctuation: /[{}[\\];(),.:]/,\n      important: {\n        pattern: /(^\\s*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n        lookbehind: true\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/es/languages/nsis.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/nsis.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nix',\n  init: function init(Prism) {\n    Prism.languages.nix = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            // The lookbehind ensures the ${} is not preceded by \\ or ''\n            pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,\n            lookbehind: true,\n            inside: {\n              antiquotation: {\n                pattern: /^\\$(?=\\{)/,\n                alias: 'variable'\n              }\n              // See rest below\n            }\n          }\n        }\n      },\n      url: [/\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/, {\n        pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }],\n      antiquotation: {\n        pattern: /\\$(?=\\{)/,\n        alias: 'variable'\n      },\n      number: /\\b\\d+\\b/,\n      keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n      function: /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n      punctuation: /[{}()[\\].,:;]/\n    };\n\n    Prism.languages.nix.string.inside.interpolation.inside.rest = Prism.languages.nix;\n  }\n};","nrTokens":0,"nrLines":47,"files":[{"filePath":"node_modules/reprism/es/languages/nix.js","startLine":1,"endLine":47},{"filePath":"node_modules/reprism/lib/languages/nix.js","startLine":1,"endLine":47}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nim',\n  init: function init(Prism) {\n    Prism.languages.nim = {\n      comment: /#.*/,\n      // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n      // Character literals are handled specifically to prevent issues with numeric type suffixes\n      string: {\n        pattern: /(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,\n        greedy: true\n      },\n      // The negative look ahead prevents wrong highlighting of the .. operator\n      number: /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n      keyword: /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n      function: {\n        pattern: /(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n        inside: {\n          operator: /\\*$/\n        }\n      },\n      // We don't want to highlight operators inside backticks\n      ignore: {\n        pattern: /`[^`\\r\\n]+`/,\n        inside: {\n          punctuation: /`/\n        }\n      },\n      operator: {\n        // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n        // but allow the slice operator .. to take precedence over them\n        // One can define his own operators in Nim so all combination of operators might be an operator.\n        pattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,\n        lookbehind: true\n      },\n      punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n    };\n  }\n};","nrTokens":0,"nrLines":43,"files":[{"filePath":"node_modules/reprism/es/languages/nim.js","startLine":1,"endLine":43},{"filePath":"node_modules/reprism/lib/languages/nim.js","startLine":1,"endLine":43}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nginx',\n  init: function init(Prism) {\n    Prism.languages.nginx = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /(^|[^\"{\\\\])#.*/,\n        lookbehind: true\n      },\n      keyword: /\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types)\\b/i\n    });\n\n    Prism.languages.insertBefore('nginx', 'keyword', {\n      variable: /\\$[a-z_]+/i\n    });\n  }\n};","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/es/languages/nginx.js","startLine":1,"endLine":21},{"filePath":"node_modules/reprism/lib/languages/nginx.js","startLine":1,"endLine":21}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nasm',\n  init: function init(Prism) {\n    Prism.languages.nasm = {\n      comment: /;.*$/m,\n      string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      label: {\n        pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n        lookbehind: true,\n        alias: 'function'\n      },\n      keyword: [/\\[?BITS (?:16|32|64)\\]?/, {\n        pattern: /(^\\s*)section\\s*[a-zA-Z.]+:?/im,\n        lookbehind: true\n      }, /(?:extern|global)[^;\\r\\n]*/i, /(?:CPU|FLOAT|DEFAULT).*$/m],\n      register: {\n        pattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,\n        alias: 'variable'\n      },\n      number: /(?:\\b|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n      operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n    };\n  }\n};","nrTokens":0,"nrLines":29,"files":[{"filePath":"node_modules/reprism/es/languages/nasm.js","startLine":1,"endLine":29},{"filePath":"node_modules/reprism/lib/languages/nasm.js","startLine":1,"endLine":29}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'n4js',\n  init: function init(Prism) {\n    Prism.languages.n4js = Prism.languages.extend('javascript', {\n      // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n      keyword: /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n    });\n\n    Prism.languages.insertBefore('n4js', 'constant', {\n      // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n      annotation: {\n        pattern: /@+\\w+/,\n        alias: 'operator'\n      }\n    });\n\n    Prism.languages.n4jsd = Prism.languages.n4js;\n  }\n};","nrTokens":0,"nrLines":24,"files":[{"filePath":"node_modules/reprism/es/languages/n4js.js","startLine":1,"endLine":24},{"filePath":"node_modules/reprism/lib/languages/n4js.js","startLine":1,"endLine":24}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'monkey',\n  init: function init(Prism) {\n    Prism.languages.monkey = {\n      string: /\"[^\"\\r\\n]*\"/,\n      comment: [{\n        pattern: /^#Rem\\s+[\\s\\S]*?^#End/im,\n        greedy: true\n      }, {\n        pattern: /'.+/,\n        greedy: true\n      }],\n      preprocessor: {\n        pattern: /(^[ \\t]*)#.+/m,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      function: /\\w+(?=\\()/,\n      'type-char': {\n        pattern: /(\\w)[?%#$]/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      number: {\n        pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n        lookbehind: true\n      },\n      keyword: /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n      operator: /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n      punctuation: /[.,:;()\\[\\]]/\n    };\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/es/languages/monkey.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/monkey.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'mizar',\n  init: function init(Prism) {\n    Prism.languages.mizar = {\n      comment: /::.+/,\n      keyword: /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,\n      parameter: {\n        pattern: /\\$(?:10|\\d)/,\n        alias: 'variable'\n      },\n      variable: /\\w+(?=:)/,\n      number: /(?:\\b|-)\\d+\\b/,\n      operator: /\\.\\.\\.|->|&|\\.?=/,\n      punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n    };\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/es/languages/mizar.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/mizar.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'mel',\n  init: function init(Prism) {\n    Prism.languages.mel = {\n      comment: /\\/\\/.*/,\n      code: {\n        pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n        greedy: true,\n        alias: 'italic',\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          }\n          // See rest below\n        }\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      variable: /\\$\\w+/,\n      number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+/,\n      flag: {\n        pattern: /-[^\\d\\W]\\w*/,\n        alias: 'operator'\n      },\n      keyword: /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n      function: /\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n\n      operator: [/\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/, {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      }, {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }],\n      punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n    };\n    Prism.languages.mel.code.inside.rest = Prism.languages.mel;\n  }\n};","nrTokens":0,"nrLines":49,"files":[{"filePath":"node_modules/reprism/es/languages/mel.js","startLine":1,"endLine":49},{"filePath":"node_modules/reprism/lib/languages/mel.js","startLine":1,"endLine":49}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'matlab',\n  init: function init(Prism) {\n    Prism.languages.matlab = {\n      comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n      string: {\n        pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n        greedy: true\n      },\n      // FIXME We could handle imaginary numbers as a whole\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n      keyword: /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n      function: /(?!\\d)\\w+(?=\\s*\\()/,\n      operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n      punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n    };\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/es/languages/matlab.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/matlab.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'markup',\n  init: function init(Prism) {\n    Prism.languages.markup = {\n      comment: /<!--[\\s\\S]*?-->/,\n      prolog: /<\\?[\\s\\S]+?\\?>/,\n      doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n      cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n      tag: {\n        pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n        greedy: true,\n        inside: {\n          tag: {\n            pattern: /^<\\/?[^\\s>\\/]+/i,\n            inside: {\n              punctuation: /^<\\/?/,\n              namespace: /^[^\\s>\\/:]+:/\n            }\n          },\n          'attr-value': {\n            pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n            inside: {\n              punctuation: [/^=/, {\n                pattern: /(^|[^\\\\])[\"']/,\n                lookbehind: true\n              }]\n            }\n          },\n          punctuation: /\\/?>/,\n          'attr-name': {\n            pattern: /[^\\s>\\/]+/,\n            inside: {\n              namespace: /^[^\\s>\\/:]+:/\n            }\n          }\n        }\n      },\n      entity: /&#?[\\da-z]{1,8};/i\n    };\n\n    Prism.languages.markup.tag.inside['attr-value'].inside.entity = Prism.languages.markup.entity;\n\n    // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type === 'entity') {\n        env.attributes.title = env.content.replace(/&amp;/, '&');\n      }\n    });\n\n    Prism.languages.xml = Prism.languages.markup;\n    Prism.languages.html = Prism.languages.markup;\n    Prism.languages.mathml = Prism.languages.markup;\n    Prism.languages.svg = Prism.languages.markup;\n  }\n};","nrTokens":0,"nrLines":60,"files":[{"filePath":"node_modules/reprism/es/languages/markup.js","startLine":1,"endLine":60},{"filePath":"node_modules/reprism/lib/languages/markup.js","startLine":1,"endLine":60}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'markup-templating',\n  init: function init(Prism) {\n    Prism.languages['markup-templating'] = {};\n\n    Object.defineProperties(Prism.languages['markup-templating'], {\n      buildPlaceholders: {\n        // Tokenize all inline templating expressions matching placeholderPattern\n        // If the replaceFilter function is provided, it will be called with every match.\n        // If it returns false, the match will not be replaced.\n        value: function value(env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return;\n          }\n\n          env.tokenStack = [];\n\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match;\n            }\n            var i = env.tokenStack.length;\n            // Check for existing strings\n            while (env.code.indexOf('___' + language.toUpperCase() + i + '___') !== -1) {\n              ++i;\n            }\n\n            // Create a sparse array\n            env.tokenStack[i] = match;\n\n            return '___' + language.toUpperCase() + i + '___';\n          });\n\n          // Switch the grammar to markup\n          env.grammar = Prism.languages.markup;\n        }\n      },\n      tokenizePlaceholders: {\n        // Replace placeholders with proper tokens after tokenizing\n        value: function value(env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return;\n          }\n\n          // Switch the grammar back\n          env.grammar = Prism.languages[language];\n\n          var j = 0;\n          var keys = Object.keys(env.tokenStack);\n          var walkTokens = function walkTokens(tokens) {\n            if (j >= keys.length) {\n              return;\n            }\n            for (var i = 0; i < tokens.length; i++) {\n              var token = tokens[i];\n              if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n                var k = keys[j];\n                var t = env.tokenStack[k];\n                var s = typeof token === 'string' ? token : token.content;\n\n                var index = s.indexOf('___' + language.toUpperCase() + k + '___');\n                if (index > -1) {\n                  ++j;\n                  var before = s.substring(0, index);\n                  var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar, language), 'language-' + language, t);\n                  var after = s.substring(index + ('___' + language.toUpperCase() + k + '___').length);\n                  var replacement;\n                  if (before || after) {\n                    replacement = [before, middle, after].filter(function (v) {\n                      return !!v;\n                    });\n                    walkTokens(replacement);\n                  } else {\n                    replacement = middle;\n                  }\n                  if (typeof token === 'string') {\n                    Array.prototype.splice.apply(tokens, [i, 1].concat(replacement));\n                  } else {\n                    token.content = replacement;\n                  }\n\n                  if (j >= keys.length) {\n                    break;\n                  }\n                }\n              } else if (token.content && typeof token.content !== 'string') {\n                walkTokens(token.content);\n              }\n            }\n          };\n\n          walkTokens(env.tokens);\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":102,"files":[{"filePath":"node_modules/reprism/es/languages/markup-templating.js","startLine":1,"endLine":102},{"filePath":"node_modules/reprism/lib/languages/markup-templating.js","startLine":1,"endLine":102}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'markdown',\n  init: function init(Prism) {\n    Prism.languages.markdown = Prism.languages.extend('markup', {});\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      code: [{\n        // Prefixed by 4 spaces or 1 tab\n        pattern: /^(?: {4}|\\t).+/m,\n        alias: 'keyword'\n      }, {\n        // `code`\n        // ``code``\n        pattern: /``.+?``|`[^`\\n]+`/,\n        alias: 'keyword'\n      }],\n      title: [{\n        // title 1\n        // =======\n\n        // title 2\n        // -------\n        pattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n        alias: 'important',\n        inside: {\n          punctuation: /==+$|--+$/\n        }\n      }, {\n        // # title 1\n        // ###### title 6\n        pattern: /(^\\s*)#+.+/m,\n        lookbehind: true,\n        alias: 'important',\n        inside: {\n          punctuation: /^#+|#+$/\n        }\n      }],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n\n        // Allow only one line break\n        pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n        lookbehind: true,\n        inside: {\n          punctuation: /^\\*\\*|^__|\\*\\*$|__$/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n\n        // Allow only one line break\n        pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n        lookbehind: true,\n        inside: {\n          punctuation: /^[*_]|[*_]$/\n        }\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example] [id]\n        pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n        inside: {\n          variable: {\n            pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n          }\n        }\n      }\n    });\n\n    Prism.languages.markdown.bold.inside.url = Prism.languages.markdown.url;\n    Prism.languages.markdown.italic.inside.url = Prism.languages.markdown.url;\n    Prism.languages.markdown.bold.inside.italic = Prism.languages.markdown.italic;\n    Prism.languages.markdown.italic.inside.bold = Prism.languages.markdown.bold;\n  }\n};","nrTokens":0,"nrLines":124,"files":[{"filePath":"node_modules/reprism/es/languages/markdown.js","startLine":1,"endLine":124},{"filePath":"node_modules/reprism/lib/languages/markdown.js","startLine":1,"endLine":124}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'makefile',\n  init: function init(Prism) {\n    Prism.languages.makefile = {\n      comment: {\n        pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n        lookbehind: true\n      },\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n\n      // Built-in target names\n      builtin: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n\n      // Targets\n      symbol: {\n        pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n        inside: {\n          variable: /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n        }\n      },\n      variable: /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n\n      keyword: [\n      // Directives\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n      // Functions\n      {\n        pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n        lookbehind: true\n      }],\n      operator: /(?:::|[?:+!])?=|[|@]/,\n      punctuation: /[:;(){}]/\n    };\n  }\n};","nrTokens":0,"nrLines":43,"files":[{"filePath":"node_modules/reprism/es/languages/makefile.js","startLine":1,"endLine":43},{"filePath":"node_modules/reprism/lib/languages/makefile.js","startLine":1,"endLine":43}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'lua',\n  init: function init(Prism) {\n    Prism.languages.lua = {\n      comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n      // \\z may be used to skip the following space\n      string: {\n        pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n        greedy: true\n      },\n      number: /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n      keyword: /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n      function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n      operator: [/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/, {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }],\n      punctuation: /[\\[\\](){},;]|\\.+|:+/\n    };\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/es/languages/lua.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/lua.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'lolcode',\n  init: function init(Prism) {\n    Prism.languages.lolcode = {\n      comment: [/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/, /\\bBTW.+/],\n      string: {\n        pattern: /\"(?::.|[^\"])*\"/,\n        inside: {\n          variable: /:\\{[^}]+\\}/,\n          symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n        },\n        greedy: true\n      },\n      number: /(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,\n      symbol: {\n        pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n        lookbehind: true,\n        inside: {\n          keyword: /A(?=\\s)/\n        }\n      },\n      label: {\n        pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n        lookbehind: true,\n        alias: 'string'\n      },\n      function: {\n        pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n        lookbehind: true\n      },\n      keyword: [{\n        pattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n        lookbehind: true\n      }, /'Z(?=\\s|,|$)/],\n      boolean: {\n        pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|\\s)IT(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      punctuation: /\\.{3}|???|,|!/\n    };\n  }\n};","nrTokens":0,"nrLines":55,"files":[{"filePath":"node_modules/reprism/es/languages/lolcode.js","startLine":1,"endLine":55},{"filePath":"node_modules/reprism/lib/languages/lolcode.js","startLine":1,"endLine":55}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'livescript',\n  init: function init(Prism) {\n    Prism.languages.livescript = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }],\n      'interpolated-string': {\n        /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n        * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n        pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          variable: {\n            pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n            lookbehind: true\n          },\n          interpolation: {\n            pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n            lookbehind: true,\n            inside: {\n              'interpolation-punctuation': {\n                pattern: /^#\\{|\\}$/,\n                alias: 'variable'\n              }\n              // See rest below\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      },\n      string: [{\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      }, {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      }, /\\\\[^\\s,;\\])}]+/],\n      regex: [{\n        pattern: /\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      }, {\n        pattern: /\\/(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }],\n      keyword: {\n        pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n        lookbehind: true\n      },\n      'keyword-operator': {\n        pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      boolean: {\n        pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n        lookbehind: true\n      },\n      argument: {\n        // Don't match .&. nor &&\n        pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n      identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n      operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      },\n      // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],\n      punctuation: /[(){}\\[\\]|.,:;`]/\n    };\n\n    Prism.languages.livescript['interpolated-string'].inside.interpolation.inside.rest = Prism.languages.livescript;\n  }\n};","nrTokens":0,"nrLines":118,"files":[{"filePath":"node_modules/reprism/es/languages/livescript.js","startLine":1,"endLine":118},{"filePath":"node_modules/reprism/lib/languages/livescript.js","startLine":1,"endLine":118}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'lisp',\n  init: function init(Prism) {\n    (function (Prism) {\n      // Functions to construct regular expressions\n      // simple form\n      // e.g. (interactive ... or (interactive)\n      function simple_form(name) {\n        return new RegExp('(\\\\()' + name + '(?=[\\\\s\\\\)])');\n      }\n      // booleans and numbers\n      function primitive(pattern) {\n        return new RegExp('([\\\\s([])' + pattern + '(?=[\\\\s)])');\n      }\n\n      // Patterns in regular expressions\n\n      // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n      // & and : are excluded as they are usually used for special purposes\n      var symbol = '[-+*/_~!@$%^=<>{}\\\\w]+';\n      // symbol starting with & used in function arguments\n      var marker = '&' + symbol;\n      // Open parenthesis for look-behind\n      var par = '(\\\\()';\n      var endpar = '(?=\\\\))';\n      // End the pattern with look-ahead space\n      var space = '(?=\\\\s)';\n\n      var language = {\n        // Three or four semicolons are considered a heading.\n        // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n        heading: {\n          pattern: /;;;.*/,\n          alias: ['comment', 'title']\n        },\n        comment: /;.*/,\n        string: {\n          pattern: /\"(?:[^\"\\\\]*|\\\\.)*\"/,\n          greedy: true,\n          inside: {\n            argument: /[-A-Z]+(?=[.,\\s])/,\n            symbol: new RegExp('`' + symbol + '\\'')\n          }\n        },\n        'quoted-symbol': {\n          pattern: new RegExp('#?\\'' + symbol),\n          alias: ['variable', 'symbol']\n        },\n        'lisp-property': {\n          pattern: new RegExp(':' + symbol),\n          alias: 'property'\n        },\n        splice: {\n          pattern: new RegExp(',@?' + symbol),\n          alias: ['symbol', 'variable']\n        },\n        keyword: [{\n          pattern: new RegExp(par + '(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)' + space),\n          lookbehind: true\n        }, {\n          pattern: new RegExp(par + '(?:for|do|collect|return|finally|append|concat|in|by)' + space),\n          lookbehind: true\n        }],\n        declare: {\n          pattern: simple_form('declare'),\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        interactive: {\n          pattern: simple_form('interactive'),\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        boolean: {\n          pattern: primitive('(?:t|nil)'),\n          lookbehind: true\n        },\n        number: {\n          pattern: primitive('[-+]?\\\\d+(?:\\\\.\\\\d*)?'),\n          lookbehind: true\n        },\n        defvar: {\n          pattern: new RegExp(par + 'def(?:var|const|custom|group)\\\\s+' + symbol),\n          lookbehind: true,\n          inside: {\n            keyword: /^def[a-z]+/,\n            variable: new RegExp(symbol)\n          }\n        },\n        defun: {\n          pattern: new RegExp(par + '(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+' + symbol + '\\\\s+\\\\([\\\\s\\\\S]*?\\\\)'),\n          lookbehind: true,\n          inside: {\n            keyword: /^(?:cl-)?def\\S+/,\n            // See below, this property needs to be defined later so that it can\n            // reference the language object.\n            arguments: null,\n            function: {\n              pattern: new RegExp('(^\\\\s)' + symbol),\n              lookbehind: true\n            },\n            punctuation: /[()]/\n          }\n        },\n        lambda: {\n          pattern: new RegExp(par + 'lambda\\\\s+\\\\((?:&?' + symbol + '\\\\s*)*\\\\)'),\n          lookbehind: true,\n          inside: {\n            keyword: /^lambda/,\n            // See below, this property needs to be defined later so that it can\n            // reference the language object.\n            arguments: null,\n            punctuation: /[()]/\n          }\n        },\n        car: {\n          pattern: new RegExp(par + symbol),\n          lookbehind: true\n        },\n        punctuation: [\n        // open paren, brackets, and close paren\n        /(['`,]?\\(|[)\\[\\]])/,\n        // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }]\n      };\n\n      var arg = {\n        'lisp-marker': new RegExp(marker),\n        rest: {\n          argument: {\n            pattern: new RegExp(symbol),\n            alias: 'variable'\n          },\n          varform: {\n            pattern: new RegExp(par + symbol + '\\\\s+\\\\S[\\\\s\\\\S]*' + endpar),\n            lookbehind: true,\n            inside: {\n              string: language.string,\n              boolean: language.boolean,\n              number: language.number,\n              symbol: language.symbol,\n              punctuation: /[()]/\n            }\n          }\n        }\n      };\n\n      var forms = '\\\\S+(?:\\\\s+\\\\S+)*';\n\n      var arglist = {\n        pattern: new RegExp(par + '[\\\\s\\\\S]*' + endpar),\n        lookbehind: true,\n        inside: {\n          'rest-vars': {\n            pattern: new RegExp('&(?:rest|body)\\\\s+' + forms),\n            inside: arg\n          },\n          'other-marker-vars': {\n            pattern: new RegExp('&(?:optional|aux)\\\\s+' + forms),\n            inside: arg\n          },\n          keys: {\n            pattern: new RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n            inside: arg\n          },\n          argument: {\n            pattern: new RegExp(symbol),\n            alias: 'variable'\n          },\n          punctuation: /[()]/\n        }\n      };\n\n      language.lambda.inside.arguments = arglist;\n      language.defun.inside.arguments = Prism.util.clone(arglist);\n      language.defun.inside.arguments.inside.sublist = arglist;\n\n      Prism.languages.lisp = language;\n      Prism.languages.elisp = language;\n      Prism.languages.emacs = language;\n      Prism.languages['emacs-lisp'] = language;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":192,"files":[{"filePath":"node_modules/reprism/es/languages/lisp.js","startLine":1,"endLine":192},{"filePath":"node_modules/reprism/lib/languages/lisp.js","startLine":1,"endLine":192}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'liquid',\n  init: function init(Prism) {\n    Prism.languages.liquid = {\n      keyword: /\\b(?:comment|endcomment|if|elsif|else|endif|unless|endunless|for|endfor|case|endcase|when|in|break|assign|continue|limit|offset|range|reversed|raw|endraw|capture|endcapture|tablerow|endtablerow)\\b/,\n      number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n      operator: {\n        pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^|[\\s;|&])(?:append|prepend|capitalize|cycle|cols|increment|decrement|abs|at_least|at_most|ceil|compact|concat|date|default|divided_by|downcase|escape|escape_once|first|floor|join|last|lstrip|map|minus|modulo|newline_to_br|plus|remove|remove_first|replace|replace_first|reverse|round|rstrip|size|slice|sort|sort_natural|split|strip|strip_html|strip_newlines|times|truncate|truncatewords|uniq|upcase|url_decode|url_encode|include|paginate)(?=$|[\\s;|&])/,\n        lookbehind: true\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/es/languages/liquid.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/liquid.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'less',\n  init: function init(Prism) {\n    /* FIXME :\n    :extend() is not handled specifically : its highlighting is buggy.\n    Mixin usage must be inside a ruleset to be highlighted.\n    At-rules (e.g. import) containing interpolations are buggy.\n    Detached rulesets are highlighted as at-rules.\n    A comment before a mixin usage prevents the latter to be properly highlighted.\n    */\n\n    Prism.languages.less = Prism.languages.extend('css', {\n      comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }],\n      atrule: {\n        pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n        inside: {\n          punctuation: /[:()]/\n        }\n      },\n      // selectors and mixins are considered the same\n      selector: {\n        pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n        inside: {\n          // mixin parameters\n          variable: /@+[\\w-]+/\n        }\n      },\n\n      property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n      punctuation: /[{}();:,]/,\n      operator: /[+\\-*\\/]/\n    });\n\n    // Invert function and punctuation positions\n    Prism.languages.insertBefore('less', 'punctuation', {\n      function: Prism.languages.less.function\n    });\n\n    Prism.languages.insertBefore('less', 'property', {\n      variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      },\n\n      // Variable usage\n      /@@?[\\w-]+/],\n      'mixin-usage': {\n        pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n        lookbehind: true,\n        alias: 'function'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":66,"files":[{"filePath":"node_modules/reprism/es/languages/less.js","startLine":1,"endLine":66},{"filePath":"node_modules/reprism/lib/languages/less.js","startLine":1,"endLine":66}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'latex',\n  init: function init(Prism) {\n    (function (Prism) {\n      var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\n          insideEqu = {\n        'equation-command': {\n          pattern: funcPattern,\n          alias: 'regex'\n        }\n      };\n\n      Prism.languages.latex = {\n        comment: /%.*/m,\n        // the verbatim environment prints whitespace to the document\n        cdata: {\n          pattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true\n        },\n        /*\n        * equations can be between $ $ or \\( \\) or \\[ \\]\n        * (all are multiline)\n        */\n        equation: [{\n          pattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        }, {\n          pattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }],\n        /*\n        * arguments which are keywords or references are highlighted\n        * as keywords\n        */\n        keyword: {\n          pattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n          lookbehind: true\n        },\n        url: {\n          pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n          lookbehind: true\n        },\n        /*\n        * section or chapter headlines are highlighted as bold so that\n        * they stand out more\n        */\n        headline: {\n          pattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n          lookbehind: true,\n          alias: 'class-name'\n        },\n        function: {\n          pattern: funcPattern,\n          alias: 'selector'\n        },\n        punctuation: /[[\\]{}&]/\n      };\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":68,"files":[{"filePath":"node_modules/reprism/es/languages/latex.js","startLine":1,"endLine":68},{"filePath":"node_modules/reprism/lib/languages/latex.js","startLine":1,"endLine":68}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'kotlin',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.kotlin = Prism.languages.extend('clike', {\n        keyword: {\n          // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n          pattern: /(^|[^.])\\b(?:abstract|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|else|enum|final|finally|for|fun|get|if|import|in|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|out|override|package|private|protected|public|reified|return|sealed|set|super|tailrec|this|throw|to|try|val|var|when|where|while)\\b/,\n          lookbehind: true\n        },\n        function: [/\\w+(?=\\s*\\()/, {\n          pattern: /(\\.)\\w+(?=\\s*\\{)/,\n          lookbehind: true\n        }],\n        number: /\\b(?:0[bx][\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?[fFL]?)\\b/,\n        operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n      });\n\n      delete Prism.languages.kotlin['class-name'];\n\n      Prism.languages.insertBefore('kotlin', 'string', {\n        'raw-string': {\n          pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n          alias: 'string'\n          // See interpolation below\n        }\n      });\n      Prism.languages.insertBefore('kotlin', 'keyword', {\n        annotation: {\n          pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n          alias: 'builtin'\n        }\n      });\n      Prism.languages.insertBefore('kotlin', 'function', {\n        label: {\n          pattern: /\\w+@|@\\w+/,\n          alias: 'symbol'\n        }\n      });\n\n      var interpolation = [{\n        pattern: /\\$\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.kotlin\n        }\n      }, {\n        pattern: /\\$\\w+/,\n        alias: 'variable'\n      }];\n\n      Prism.languages.kotlin.string.inside = Prism.languages.kotlin['raw-string'].inside = {\n        interpolation: interpolation\n      };\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":65,"files":[{"filePath":"node_modules/reprism/es/languages/kotlin.js","startLine":1,"endLine":65},{"filePath":"node_modules/reprism/lib/languages/kotlin.js","startLine":1,"endLine":65}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'keyman',\n  init: function init(Prism) {\n    Prism.languages.keyman = {\n      comment: /\\bc\\s.*/i,\n      function: /\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i, // virtual key\n      string: /(\"|').*?\\1/,\n      bold: [\n      // header statements, system stores and variable system stores\n      /&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i, /\\b(?:bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i],\n      keyword: /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i, // rule keywords\n      atrule: /\\b(?:ansi|begin|unicode|group|using keys|match|nomatch)\\b/i, // structural keywords\n      number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i, // U+####, x###, d### characters and numbers\n      operator: /[+>\\\\,()]/,\n      tag: /\\$(?:keyman|kmfl|weaver|keymanweb|keymanonly):/i // prefixes\n    };\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/es/languages/keyman.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/keyman.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'julia',\n  init: function init(Prism) {\n    Prism.languages.julia = {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      },\n      string: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2/,\n      keyword: /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?/i,\n      operator: /[-+*^%??&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~?????????]/,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/es/languages/julia.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/julia.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'jsx',\n  init: function init(Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript);\n\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n    Prism.languages.jsx.tag.pattern = /<\\/?[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{[^}]*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?>/i;\n\n    Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n\n    Prism.languages.insertBefore('inside', 'attr-name', {\n      spread: {\n        pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n        inside: {\n          punctuation: /\\.{3}|[{}.]/,\n          'attr-value': /\\w+/\n        }\n      }\n    }, Prism.languages.jsx.tag);\n\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      script: {\n        // Allow for one level of nesting\n        pattern: /=(\\{(?:\\{[^}]*\\}|[^}])+\\})/i,\n        inside: {\n          'script-punctuation': {\n            pattern: /^=(?={)/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.jsx\n        },\n        alias: 'language-javascript'\n      }\n    }, Prism.languages.jsx.tag);\n\n    // The following will handle plain text inside tags\n    var stringifyToken = function stringifyToken(token) {\n      if (typeof token === 'string') {\n        return token;\n      }\n      if (typeof token.content === 'string') {\n        return token.content;\n      }\n      return token.content.map(stringifyToken).join('');\n    };\n\n    var walkTokens = function walkTokens(tokens) {\n      var openedTags = [];\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        var notTagNorBrace = false;\n\n        if (typeof token !== 'string') {\n          if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n            // We found a tag, now find its kind\n\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n                // Pop matching opening tag\n                openedTags.pop();\n              }\n            } else if (token.content[token.content.length - 1].content === '/>') {\n              // Autoclosed tag, ignore\n            } else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++;\n          } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--;\n          } else {\n            notTagNorBrace = true;\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token);\n\n            // And merge text with adjacent text\n            if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n              plainText += stringifyToken(tokens[i + 1]);\n              tokens.splice(i + 1, 1);\n            }\n            if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText;\n              tokens.splice(i - 1, 1);\n              i--;\n            }\n\n            tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n          }\n        }\n\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content);\n        }\n      }\n    };\n\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return;\n      }\n      walkTokens(env.tokens);\n    });\n  }\n};","nrTokens":0,"nrLines":121,"files":[{"filePath":"node_modules/reprism/es/languages/jsx.js","startLine":1,"endLine":121},{"filePath":"node_modules/reprism/lib/languages/jsx.js","startLine":1,"endLine":121}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'json',\n  init: function init(Prism) {\n    Prism.languages.json = {\n      property: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/i,\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n        greedy: true\n      },\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      punctuation: /[{}[\\]);,]/,\n      operator: /:/g,\n      boolean: /\\b(?:true|false)\\b/i,\n      null: /\\bnull\\b/i\n    };\n\n    Prism.languages.jsonp = Prism.languages.json;\n  }\n};","nrTokens":0,"nrLines":24,"files":[{"filePath":"node_modules/reprism/es/languages/json.js","startLine":1,"endLine":24},{"filePath":"node_modules/reprism/lib/languages/json.js","startLine":1,"endLine":24}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'jolie',\n  init: function init(Prism) {\n    Prism.languages.jolie = Prism.languages.extend('clike', {\n      keyword: /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,\n      builtin: /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n      operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,\n      symbol: /[|;@]/,\n      punctuation: /[,.]/,\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    });\n\n    delete Prism.languages.jolie['class-name'];\n    delete Prism.languages.jolie.function;\n\n    Prism.languages.insertBefore('jolie', 'keyword', {\n      function: {\n        pattern: /((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,\n        lookbehind: true\n      },\n      aggregates: {\n        pattern: /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n        lookbehind: true,\n        inside: {\n          withExtension: {\n            pattern: /\\bwith\\s+\\w+/,\n            inside: {\n              keyword: /\\bwith\\b/\n            }\n          },\n          function: {\n            pattern: /\\w+/\n          },\n          punctuation: {\n            pattern: /,/\n          }\n        }\n      },\n      redirects: {\n        pattern: /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n        lookbehind: true,\n        inside: {\n          punctuation: {\n            pattern: /,/\n          },\n          function: {\n            pattern: /\\w+/\n          },\n          symbol: {\n            pattern: /=>/\n          }\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":65,"files":[{"filePath":"node_modules/reprism/es/languages/jolie.js","startLine":1,"endLine":65},{"filePath":"node_modules/reprism/lib/languages/jolie.js","startLine":1,"endLine":65}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'javascript',\n  init: function init(Prism) {\n    Prism.languages.javascript = Prism.languages.extend('clike', {\n      keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n      number: /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n      function: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n      operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n    });\n\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      regex: {\n        pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n        lookbehind: true,\n        greedy: true\n      },\n      // This must be declared before keyword because we use \"function\" inside the look-forward\n      'function-variable': {\n        pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n        alias: 'function'\n      },\n      constant: /\\b[A-Z][A-Z\\d_]*\\b/\n    });\n\n    Prism.languages.insertBefore('javascript', 'string', {\n      'template-string': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /\\$\\{[^}]+\\}/,\n            inside: {\n              'interpolation-punctuation': {\n                pattern: /^\\$\\{|\\}$/,\n                alias: 'punctuation'\n              },\n              rest: Prism.languages.javascript\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    });\n\n    if (Prism.languages.markup) {\n      Prism.languages.insertBefore('markup', 'tag', {\n        script: {\n          pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n          lookbehind: true,\n          inside: Prism.languages.javascript,\n          alias: 'language-javascript',\n          greedy: true\n        }\n      });\n    }\n\n    Prism.languages.js = Prism.languages.javascript;\n  }\n};","nrTokens":0,"nrLines":65,"files":[{"filePath":"node_modules/reprism/es/languages/javascript.js","startLine":1,"endLine":65},{"filePath":"node_modules/reprism/lib/languages/javascript.js","startLine":1,"endLine":65}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'java',\n  init: function init(Prism) {\n    Prism.languages.java = Prism.languages.extend('clike', {\n      keyword: /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n      number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n      operator: {\n        pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n        lookbehind: true\n      }\n    });\n\n    Prism.languages.insertBefore('java', 'function', {\n      annotation: {\n        alias: 'punctuation',\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true\n      }\n    });\n\n    Prism.languages.insertBefore('java', 'class-name', {\n      generics: {\n        pattern: /<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,\n        alias: 'function',\n        inside: {\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[<>(),.:]/\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/es/languages/java.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/java.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'j',\n  init: function init(Prism) {\n    Prism.languages.j = {\n      comment: /\\bNB\\..*/,\n      string: {\n        pattern: /'(?:''|[^'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword: /\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n      verb: {\n        // Negative look-ahead prevents bad highlighting\n        // of ^: ;. =. =: !. !:\n        pattern: /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n        alias: 'keyword'\n      },\n      number: /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_(?!\\.))/,\n      adverb: {\n        pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n        alias: 'builtin'\n      },\n      operator: /[=a][.:]|_\\./,\n      conjunction: {\n        pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n        alias: 'variable'\n      },\n      punctuation: /[()]/\n    };\n  }\n};","nrTokens":0,"nrLines":35,"files":[{"filePath":"node_modules/reprism/es/languages/j.js","startLine":1,"endLine":35},{"filePath":"node_modules/reprism/lib/languages/j.js","startLine":1,"endLine":35}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'io',\n  init: function init(Prism) {\n    Prism.languages.io = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }],\n      'triple-quoted-string': {\n        pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:activate|activeCoroCount|asString|block|break|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getSlot|getEnvironmentVariable|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|call|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n      builtin: /\\b(?:Array|AudioDevice|AudioMixer|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Regex|SGML|SGMLElement|SGMLParser|SQLite|Server|Sequence|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink|Random|BigNum|Sequence)\\b/,\n      boolean: /\\b(?:true|false|nil)\\b/,\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?/i,\n      operator: /[=!*/%+-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|(\\b(?:return|and|or|not)\\b)|@@?|\\?\\??|\\.\\./,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/es/languages/io.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/io.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ini',\n  init: function init(Prism) {\n    Prism.languages.ini = {\n      comment: /^[ \\t]*;.*$/m,\n      selector: /^[ \\t]*\\[.*?\\]/m,\n      constant: /^[ \\t]*[^\\s=]+?(?=[ \\t]*=)/m,\n      'attr-value': {\n        pattern: /=.*/,\n        inside: {\n          punctuation: /^[=]/\n        }\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/es/languages/ini.js","startLine":1,"endLine":21},{"filePath":"node_modules/reprism/lib/languages/ini.js","startLine":1,"endLine":21}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'inform7',\n  init: function init(Prism) {\n    Prism.languages.inform7 = {\n      string: {\n        pattern: /\"[^\"]*\"/,\n        inside: {\n          substitution: {\n            pattern: /\\[[^\\]]+\\]/,\n            inside: {\n              delimiter: {\n                pattern: /\\[|\\]/,\n                alias: 'punctuation'\n              }\n              // See rest below\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /\\[[^\\]]+\\]/,\n        greedy: true\n      },\n      title: {\n        pattern: /^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,\n        alias: 'important'\n      },\n      number: {\n        pattern: /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?\\w*|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,\n        lookbehind: true\n      },\n      verb: {\n        pattern: /(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      keyword: {\n        pattern: /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n        lookbehind: true\n      },\n      property: {\n        pattern: /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      position: {\n        pattern: /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      type: {\n        pattern: /(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      punctuation: /[.,:;(){}]/\n    };\n\n    Prism.languages.inform7.string.inside.substitution.inside.rest = Prism.languages.inform7;\n    // We don't want the remaining text in the substitution to be highlighted as the string.\n    Prism.languages.inform7.string.inside.substitution.inside.rest.text = {\n      pattern: /\\S(?:\\s*\\S)*/,\n      alias: 'comment'\n    };\n  }\n};","nrTokens":0,"nrLines":71,"files":[{"filePath":"node_modules/reprism/es/languages/inform7.js","startLine":1,"endLine":71},{"filePath":"node_modules/reprism/lib/languages/inform7.js","startLine":1,"endLine":71}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'icon',\n  init: function init(Prism) {\n    Prism.languages.icon = {\n      comment: /#.*/,\n      string: {\n        pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n      'builtin-keyword': {\n        pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n        alias: 'variable'\n      },\n      directive: {\n        pattern: /\\$\\w+/,\n        alias: 'builtin'\n      },\n      keyword: /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n      function: /(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n      operator: /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n      punctuation: /[\\[\\](){},;]/\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/es/languages/icon.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/icon.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ichigojam',\n  init: function init(Prism) {\n    // according to the offical reference (EN)\n    // https://ichigojam.net/IchigoJam-en.html\n    Prism.languages.ichigojam = {\n      comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n      string: {\n        pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n        greedy: true\n      },\n      number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n      keyword: /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GSB|GOTO|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|RIGHT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n      function: /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n      label: /(?:\\B@[^\\s]+)/i,\n      operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n      punctuation: /[\\[,;:()\\]]/\n    };\n  }\n};","nrTokens":0,"nrLines":25,"files":[{"filePath":"node_modules/reprism/es/languages/ichigojam.js","startLine":1,"endLine":25},{"filePath":"node_modules/reprism/lib/languages/ichigojam.js","startLine":1,"endLine":25}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'http',\n  init: function init(Prism) {\n    Prism.languages.http = {\n      'request-line': {\n        pattern: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\shttps?:\\/\\/\\S+\\sHTTP\\/[0-9.]+/m,\n        inside: {\n          // HTTP Verb\n          property: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\n          // Path or query argument\n          'attr-name': /:\\w+/\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/1.[01] \\d+.*/m,\n        inside: {\n          // Status, e.g. 200 OK\n          property: {\n            pattern: /(^HTTP\\/1.[01] )\\d+.*/i,\n            lookbehind: true\n          }\n        }\n      },\n      // HTTP header name\n      'header-name': {\n        pattern: /^[\\w-]+:(?=.)/m,\n        alias: 'keyword'\n      }\n\n      // Create a mapping of Content-Type headers to language definitions\n    };var httpLanguages = {\n      'application/json': Prism.languages.javascript,\n      'application/xml': Prism.languages.markup,\n      'text/xml': Prism.languages.markup,\n      'text/html': Prism.languages.markup\n\n      // Insert each content type parser that has its associated language\n      // currently loaded.\n    };for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        var options = {};\n        options[contentType] = {\n          pattern: new RegExp('(content-type:\\\\s*' + contentType + '[\\\\w\\\\W]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\w\\\\W]*', 'i'),\n          lookbehind: true,\n          inside: {\n            rest: httpLanguages[contentType]\n          }\n        };\n        Prism.languages.insertBefore('http', 'header-name', options);\n      }\n    }\n  }\n};","nrTokens":0,"nrLines":58,"files":[{"filePath":"node_modules/reprism/es/languages/http.js","startLine":1,"endLine":58},{"filePath":"node_modules/reprism/lib/languages/http.js","startLine":1,"endLine":58}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'hsts',\n  init: function init(Prism) {\n    /**\n     * Original by Scott Helme.\n     *\n     * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n     */\n\n    Prism.languages.hsts = {\n      directive: {\n        pattern: /\\b(?:max-age=|includeSubDomains|preload)/,\n        alias: 'keyword'\n      },\n      safe: {\n        pattern: /\\d{8,}/,\n        alias: 'selector'\n      },\n      unsafe: {\n        pattern: /\\d{0,7}/,\n        alias: 'function'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/es/languages/hsts.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/hsts.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'hpkp',\n  init: function init(Prism) {\n    /**\n     * Original by Scott Helme.\n     *\n     * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n     */\n\n    Prism.languages.hpkp = {\n      directive: {\n        pattern: /\\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256=\"[a-zA-Z\\d+=/]+\"|(?:max-age|report-uri)=|report-to )/,\n        alias: 'keyword'\n      },\n      safe: {\n        pattern: /\\d{7,}/,\n        alias: 'selector'\n      },\n      unsafe: {\n        pattern: /\\d{0,6}/,\n        alias: 'function'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/es/languages/hpkp.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/hpkp.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'haxe',\n  init: function init(Prism) {\n    Prism.languages.haxe = Prism.languages.extend('clike', {\n      // Strings can be multi-line\n      string: {\n        pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n            lookbehind: true,\n            inside: {\n              interpolation: {\n                pattern: /^\\$\\w*/,\n                alias: 'variable'\n              }\n              // See rest below\n            }\n          }\n        }\n      },\n      // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n      keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n      operator: /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n    });\n    Prism.languages.insertBefore('haxe', 'class-name', {\n      regex: {\n        pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n        greedy: true\n      }\n    });\n    Prism.languages.insertBefore('haxe', 'keyword', {\n      preprocessor: {\n        pattern: /#\\w+/,\n        alias: 'builtin'\n      },\n      metadata: {\n        pattern: /@:?\\w+/,\n        alias: 'symbol'\n      },\n      reification: {\n        pattern: /\\$(?:\\w+|(?=\\{))/,\n        alias: 'variable'\n      }\n    });\n    Prism.languages.haxe.string.inside.interpolation.inside.rest = Prism.languages.haxe;\n    delete Prism.languages.haxe['class-name'];\n  }\n};","nrTokens":0,"nrLines":55,"files":[{"filePath":"node_modules/reprism/es/languages/haxe.js","startLine":1,"endLine":55},{"filePath":"node_modules/reprism/lib/languages/haxe.js","startLine":1,"endLine":55}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'haskell',\n  init: function init(Prism) {\n    Prism.languages.haskell = {\n      comment: {\n        pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n        lookbehind: true\n      },\n      char: /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n      string: {\n        pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n      import_statement: {\n        // The imported or hidden names are not included in this import\n        // statement. This is because we want to highlight those exactly like\n        // we do for the names in the program.\n        pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n        lookbehind: true,\n        inside: {\n          keyword: /\\b(?:import|qualified|as|hiding)\\b/\n        }\n      },\n      // These are builtin variables only. Constructors are highlighted later as a constant.\n      builtin: /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n      // decimal integers and floating point numbers | octal integers | hexadecimal integers\n      number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n      // Most of this is needed because of the meaning of a single '.'.\n      // If it stands alone freely, it is the function composition.\n      // It may also be a separator between a module name and an identifier => no\n      // operator. If it comes together with other special characters it is an\n      // operator too.\n      operator: /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n      // In Haskell, nearly everything is a variable, do not highlight these.\n      hvariable: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n      constant: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":46,"files":[{"filePath":"node_modules/reprism/es/languages/haskell.js","startLine":1,"endLine":46},{"filePath":"node_modules/reprism/lib/languages/haskell.js","startLine":1,"endLine":46}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'handlebars',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.handlebars = {\n        comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n        delimiter: {\n          pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n          alias: 'punctuation'\n        },\n        string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n        boolean: /\\b(?:true|false)\\b/,\n        block: {\n          pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        brackets: {\n          pattern: /\\[[^\\]]+\\]/,\n          inside: {\n            punctuation: /\\[|\\]/,\n            variable: /[\\s\\S]+/\n          }\n        },\n        punctuation: /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n        variable: /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n      };\n\n      Prism.hooks.add('before-tokenize', function (env) {\n        var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n      });\n\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":45,"files":[{"filePath":"node_modules/reprism/es/languages/handlebars.js","startLine":1,"endLine":45},{"filePath":"node_modules/reprism/lib/languages/handlebars.js","startLine":1,"endLine":45}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'haml',\n  init: function init(Prism) {\n    /* TODO\n    Handle multiline code after tag\n     %foo= some |\n    multiline |\n    code |\n    */\n\n    (function (Prism) {\n      Prism.languages.haml = {\n        // Multiline stuff should appear before the rest\n\n        'multiline-comment': {\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,\n          lookbehind: true,\n          alias: 'comment'\n        },\n\n        'multiline-code': [{\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.ruby\n          }\n        }, {\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.ruby\n          }\n        }],\n\n        // See at the end of the file for known filters\n        filter: {\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            }\n          }\n        },\n\n        markup: {\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.markup\n          }\n        },\n        doctype: {\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n          lookbehind: true\n        },\n        tag: {\n          // Allows for one nested group of braces\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n          lookbehind: true,\n          inside: {\n            attributes: [{\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,\n              lookbehind: true,\n              inside: {\n                rest: Prism.languages.ruby\n              }\n            }, {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                  lookbehind: true\n                },\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[=(),]/\n              }\n            }, {\n              pattern: /\\[[^\\]]+\\]/,\n              inside: {\n                rest: Prism.languages.ruby\n              }\n            }],\n            punctuation: /[<>]/\n          }\n        },\n        code: {\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.ruby\n          }\n        },\n        // Interpolations in plain text\n        interpolation: {\n          pattern: /#\\{[^}]+\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^#\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.ruby\n          }\n        },\n        punctuation: {\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n          lookbehind: true\n        }\n      };\n\n      var filter_pattern = '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\n\n      // Non exhaustive list of available filters and associated languages\n      var filters = ['css', { filter: 'coffee', language: 'coffeescript' }, 'erb', 'javascript', 'less', 'markdown', 'ruby', 'scss', 'textile'];\n      var all_filters = {};\n      for (var i = 0, l = filters.length; i < l; i++) {\n        var filter = filters[i];\n        filter = typeof filter === 'string' ? { filter: filter, language: filter } : filter;\n        if (Prism.languages[filter.language]) {\n          all_filters['filter-' + filter.filter] = {\n            pattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter)),\n            lookbehind: true,\n            inside: {\n              'filter-name': {\n                pattern: /^:[\\w-]+/,\n                alias: 'variable'\n              },\n              rest: Prism.languages[filter.language]\n            }\n          };\n        }\n      }\n\n      Prism.languages.insertBefore('haml', 'filter', all_filters);\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":145,"files":[{"filePath":"node_modules/reprism/es/languages/haml.js","startLine":1,"endLine":145},{"filePath":"node_modules/reprism/lib/languages/haml.js","startLine":1,"endLine":145}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'groovy',\n  init: function init(Prism) {\n    Prism.languages.groovy = Prism.languages.extend('clike', {\n      keyword: /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n      string: [{\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1|(?:\\$\\/)(?:\\$\\/\\$|[\\s\\S])*?\\/\\$/,\n        greedy: true\n      }, {\n        pattern: /([\"'\\/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }],\n      number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,\n      operator: {\n        pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    });\n\n    Prism.languages.insertBefore('groovy', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment'\n      }\n    });\n\n    Prism.languages.insertBefore('groovy', 'punctuation', {\n      'spock-block': /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\n    });\n\n    Prism.languages.insertBefore('groovy', 'function', {\n      annotation: {\n        alias: 'punctuation',\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true\n      }\n    });\n\n    // Handle string interpolation\n    Prism.hooks.add('wrap', function (env) {\n      if (env.language === 'groovy' && env.type === 'string') {\n        var delimiter = env.content[0];\n\n        if (delimiter != \"'\") {\n          var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n          if (delimiter === '$') {\n            pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n          }\n\n          // To prevent double HTML-encoding we have to decode env.content first\n          env.content = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n\n          env.content = Prism.highlight(env.content, {\n            expression: {\n              pattern: pattern,\n              lookbehind: true,\n              inside: Prism.languages.groovy\n            }\n          });\n\n          env.classes.push(delimiter === '/' ? 'regex' : 'gstring');\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":72,"files":[{"filePath":"node_modules/reprism/es/languages/groovy.js","startLine":1,"endLine":72},{"filePath":"node_modules/reprism/lib/languages/groovy.js","startLine":1,"endLine":72}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'graphql',\n  init: function init(Prism) {\n    Prism.languages.graphql = {\n      comment: /#.*/,\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      boolean: /\\b(?:true|false)\\b/,\n      variable: /\\$[a-z_]\\w*/i,\n      directive: {\n        pattern: /@[a-z_]\\w*/i,\n        alias: 'function'\n      },\n      'attr-name': /[a-z_]\\w*(?=\\s*:)/i,\n      keyword: [{\n        pattern: /(fragment\\s+(?!on)[a-z_]\\w*\\s+|\\.{3}\\s*)on\\b/,\n        lookbehind: true\n      }, /\\b(?:query|fragment|mutation)\\b/],\n      operator: /!|=|\\.{3}/,\n      punctuation: /[!(){}\\[\\]:=,]/\n    };\n  }\n};","nrTokens":0,"nrLines":31,"files":[{"filePath":"node_modules/reprism/es/languages/graphql.js","startLine":1,"endLine":31},{"filePath":"node_modules/reprism/lib/languages/graphql.js","startLine":1,"endLine":31}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'go',\n  init: function init(Prism) {\n    Prism.languages.go = Prism.languages.extend('clike', {\n      keyword: /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n      builtin: /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n      boolean: /\\b(?:_|iota|nil|true|false)\\b/,\n      operator: /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n      number: /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n      string: {\n        pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      }\n    });\n    delete Prism.languages.go['class-name'];\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/es/languages/go.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/go.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'glsl',\n  init: function init(Prism) {\n    Prism.languages.glsl = Prism.languages.extend('clike', {\n      comment: [/\\/\\*[\\s\\S]*?\\*\\//, /\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/],\n      number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,\n      keyword: /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n    });\n\n    Prism.languages.insertBefore('glsl', 'comment', {\n      preprocessor: {\n        pattern: /(^[ \\t]*)#(?:(?:define|undef|if|ifdef|ifndef|else|elif|endif|error|pragma|extension|version|line)\\b)?/m,\n        lookbehind: true,\n        alias: 'builtin'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/es/languages/glsl.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/glsl.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\t\t\t\t\tvalue: true\n});\nexports.default = {\n\t\t\t\t\tlanguage: 'git',\n\t\t\t\t\tinit: function init(Prism) {\n\t\t\t\t\t\t\t\t\t\tPrism.languages.git = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * A simple one line comment like in a git status command\n               * For instance:\n               * $ git status\n               * # On branch infinite-scroll\n               * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n               * # and have 1 and 2 different commits each, respectively.\n               * nothing to commit (working directory clean)\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomment: /^#.*/m,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * Regexp to match the changed lines in a git diff output. Check the example below.\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleted: /^[-???].*/m,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinserted: /^\\+.*/m,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * a string (double and simple quote)\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstring: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n               * For instance:\n               * $ git add file.txt\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpattern: /^.*\\$ git .*$/m,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n                         * A git command can contain a parameter starting by a single or a double dash followed by a string\n                         * For instance:\n                         * $ git diff --cached\n                         * $ git log -p\n                         */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparameter: /\\s--?\\w+/m\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * Coordinates displayed in a git diff command\n               * For instance:\n               * $ git diff\n               * diff --git file.txt file.txt\n               * index 6214953..1d54a52 100644\n               * --- file.txt\n               * +++ file.txt\n               * @@ -1 +1,2 @@\n               * -Here's my tetx file\n               * +Here's my text file\n               * +And this is the second line\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcoord: /^@@.*@@$/m,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * Match a \"commit [SHA1]\" line in a git log output.\n               * For instance:\n               * $ git log\n               * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n               * Author: lgiraudel\n               * Date:   Mon Feb 17 11:18:34 2014 +0100\n               *\n               *     Add of a new line\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommit_sha1: /^commit \\w{40}$/m\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t}\n};","nrTokens":0,"nrLines":78,"files":[{"filePath":"node_modules/reprism/es/languages/git.js","startLine":1,"endLine":78},{"filePath":"node_modules/reprism/lib/languages/git.js","startLine":1,"endLine":78}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'gherkin',\n  init: function init(Prism) {\n    Prism.languages.gherkin = {\n      pystring: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        alias: 'string'\n      },\n      comment: {\n        pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)#.*/,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)@\\S*/,\n        lookbehind: true\n      },\n      feature: {\n        pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Caracter??stica|Egenskab|Egenskap|Eiginleiki|Feature|F????a|Fitur|Fonctionnalit??|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Func??ionalitate|Func??ionalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalit??te|Funkcionalnost|Funkcja|Funksie|Funktionalit??t|Funktionalit??it|Funzionalit??|Hwaet|Hw??t|Jellemz??|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogu??nost|Moznosti|Mo??nosti|OH HAI|Omadus|Ominaisuus|Osobina|??zellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Po??adavek|Po??iadavka|Pretty much|Qap|Qu'meH 'ut|Savyb??|T??nh n??ng|Trajto|Vermo??|Vlastnos??|W??a??ciwo????|Zna??ilnost|????????????????????|????????????????????|??????????????????|??????????????????|??????????????|????????????????|????????????????????????????|????????????????????|????????????????????????????|??????????????|????????????????????|??????????|??????????|????????????|????????????|?????????????? ???? ??????????|????????????|????????? ?????????|??????????????????|????????? ???????????????|????????????????????????|???????????????|??????????????????|????????????????????????????????????????????????????????????|??????????????????????????????|????????????????????????|??????|???????????????|??????|??????):(?:[^:]+(?:\\r?\\n|\\r|$))*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]+/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      scenario: {\n        pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|??r|Agtergrond|All y'all|Antecedentes|Antecedents|Atbur??ar??s|Atbur??ar??sir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|B???i c???nh|Cefndir|Cenario|Cen??rio|Cenario de Fundo|Cen??rio de Fundo|Cenarios|Cen??rios|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|D??mi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delinea????o do Cen??rio|Dis is what went down|D??? li???u|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cen??rio|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgat??k??nyv|Forgat??k??nyv v??zlat|Fundo|Ge??mi??|ghantoH|Grundlage|Hannergrond|H??tt??r|Heave to|Istorik|Juhtumid|Keadaan|Khung k???ch b???n|Khung t??nh hu???ng|K???ch b???n|Koncept|Konsep skenario|Kont??ks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|L??sing Atbur??ar??sar|L??sing D??ma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|N????rt Scen??ra|N????rt Sc??n????e|N????rt Scen??ru|Oris scenarija|??rnekler|Osnova|Osnova Scen??ra|Osnova sc??n????e|Osnutek|Ozadje|Paraugs|Pavyzd??iai|P??ld??k|Piem??ri|Plan du sc??nario|Plan du Sc??nario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozad??|Pozadie|Pozadina|Pr??klady|P????klady|Primer|Primeri|Primjeri|Przyk??ady|Raamstsenaarium|Reckon it's like|Rerefons|Scen??r|Sc??n????|Scenarie|Scenarij|Scenarijai|Scenarijaus ??ablonas|Scenariji|Scen??rijs|Scen??rijs p??c parauga|Scenarijus|Scenario|Sc??nario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ??e|Se the|Se ??e|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo tasla????|Shiver me timbers|Situ??cija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structur?? scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hw??r swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|T??nh hu???ng|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo\\-ho\\-ho|You'll wanna|Za??o??enia|????????????????????????|?????????????????? ????????????????|??????????????|??????????????|????????????????|??????????|????????????????|??????????????|????????????????|????????????????|????????????|????????????????????|????????????????|??????????????????????|??????????????????????|????????????????|????????????|??????????????|??????????????|?????????? ???? ????????????????|??????????|?????????????????? ??????????????????|?????????????????? ????????????????|?????????????????? ????????????????|????????????????|???????????????? ??????????????????????|?????????????????????? ????????????????|??????????????????|????????????????|????????????????|??????????|????????????????|??????????????|??????|?????????? ??????????|??????????|??????????????|?????????? ????????????|??????????|???? ????????|??????????|????????????|??????????????|?????????????? ????????|????????????|???????? ???????? ???? ????????|????????????????|?????????? ????|??????????????????|????????????????????????|???????????????????????? ?????????????????????|???????????????????????????|????????????????????????|???????????????|??????????????? ???????????????|??????????????? ????????? ????????????|??????????????????|????????????????????????|????????????|?????????????????????|???????????????????????????|??????????????????????????????|???????????????????????????|??????????????????|????????????????????????|???????????????????????????????????????????????????????????????|??????????????????????????????????????????|?????????????????????????????????????????????|??????????????????|???????????????????????????????????????|???????????????????????????|??????|????????????|???????????? ??????|???|????????????|????????????|??????????????????????????????|????????????????????????|??????????????????????????????|????????????|???|??????|??????|????????????|??????|????????????|??????|????????????|??????|????????????|??????):[^:\\r\\n]*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]*/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      'table-body': {\n        // Look-behind is used to skip the table head, which has the same format as any table row\n        pattern: /((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+/,\n        lookbehind: true,\n        inside: {\n          outline: {\n            pattern: /<[^>]+?>/,\n            alias: 'variable'\n          },\n          td: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'string'\n          },\n          punctuation: /\\|/\n        }\n      },\n      'table-head': {\n        pattern: /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*/,\n        inside: {\n          th: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'variable'\n          },\n          punctuation: /\\|/\n        }\n      },\n      atrule: {\n        pattern: /((?:\\r?\\n|\\r)[ \\t]+)(?:'ach|'a|'ej|7|a|A tak??|A taktie??|A tie??|A z??rove??|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|At??s|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Bi???t|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|C??nd|Cando|Cand|Ce|Cuando|??e|??a ??e|??a|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Da??i fiind|Da??i fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donita??o|Do|Dun|Duota|??urh|Eeldades|Ef|E??er ki|Entao|Ent??o|Ent??n|Entonces|En|Epi|E|??s|Etant donn??e|Etant donn??|Et|??tant donn??es|??tant donn??e|??tant donn??|Etant donn??es|Etant donn??s|??tant donn??s|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Je??li|Je??eli|Kadar|Kada|Kad|Kai|Kaj|Kdy??|Ke??|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|L?? sa a|L??|Logo|Lorsqu'<|Lorsque|m??|Maar|Mais|Maj??c|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|N??r|N??r|Nato|Nh??ng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Per??|Podano|Pokia??|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|S??|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|??i|??i|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Th??|Thurh|Toda|Too right|ugeholl|Und|Un|V??|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za p??edpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zak??adaj??c|Zaradi|Zatati|??a ??e|??a|????|??egar|??urh|????????|??????????????????|??????|????????|????????|?? ??????????|????????|??????|??????|????????|??|????????|??????????|????????|??????????|????|????|????????????|????????|????????????????|????????|????????????|????????????|????????????|??|??|?? ???????? ????|????????|??????|????????????|??????????|????????|??????????|??????????|????????????????|??????????|????|????????|????????????????????, ????|????????????????????|??????????|??????????|????|??????????|????????|????|????????|??????|????????|??????|??????|????|????????????|??????|????????|??????????|????????|??????|??????|??????|???? ??????|????????????|????????|??????|????|????|????|??????????|?????? ??????|??????|????????|??????|????????????|??|?????????|??????|?????????|??????????????????|???????????????|??????|?????????|?????????|??????|??????????????????|??????|?????????|?????????|????????????|??????????????? ??????|????????????|??????|??????|?????????????????????|??? ?????????????????????????????????|????????????|?????????????????????????????????|???????????????|????????????|????????????|??????????????????|???????????????|?????????????????????????????????|????????????????????????|?????????????????????|?????????|???????????????|?????????|?????????<|?????????<|???<|??????<|??????<|??????<|??????<|?????????<|??????<|?????????<|?????????<|?????????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|???<|???<|??????<|??????<|??????<)(?=[ \\t]+)/,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n        inside: {\n          outline: {\n            pattern: /<[^>]+?>/,\n            alias: 'variable'\n          }\n        }\n      },\n      outline: {\n        pattern: /<[^>]+?>/,\n        alias: 'variable'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":89,"files":[{"filePath":"node_modules/reprism/es/languages/gherkin.js","startLine":1,"endLine":89},{"filePath":"node_modules/reprism/lib/languages/gherkin.js","startLine":1,"endLine":89}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'gedcom',\n  init: function init(Prism) {\n    Prism.languages.gedcom = {\n      'line-value': {\n        // Preceded by level, optional pointer, and tag\n        pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,\n        lookbehind: true,\n        inside: {\n          pointer: {\n            pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n            alias: 'variable'\n          }\n        }\n      },\n      tag: {\n        // Preceded by level and optional pointer\n        pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n        lookbehind: true,\n        alias: 'string'\n      },\n      level: {\n        pattern: /(^\\s*)\\d+/m,\n        lookbehind: true,\n        alias: 'number'\n      },\n      pointer: {\n        pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n        alias: 'variable'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/es/languages/gedcom.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/gedcom.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'fsharp',\n  init: function init(Prism) {\n    Prism.languages.fsharp = Prism.languages.extend('clike', {\n      comment: [{\n        pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true\n      }],\n      keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n      string: {\n        pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1)B?/,\n        greedy: true\n      },\n      number: [/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/, /\\b0b[01]+(?:y|uy)?\\b/, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/]\n    });\n    Prism.languages.insertBefore('fsharp', 'keyword', {\n      preprocessor: {\n        pattern: /^[^\\r\\n\\S]*#.*/m,\n        alias: 'property',\n        inside: {\n          directive: {\n            pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/es/languages/fsharp.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/fsharp.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'fortran',\n  init: function init(Prism) {\n    Prism.languages.fortran = {\n      'quoted-number': {\n        pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n        alias: 'number'\n      },\n      string: {\n        pattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,\n        inside: {\n          comment: {\n            pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n            lookbehind: true\n          }\n        }\n      },\n      comment: {\n        pattern: /!.*/,\n        greedy: true\n      },\n      boolean: /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n      number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n      keyword: [\n      // Types\n      /\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i,\n      // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\n      // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\n      // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i],\n      operator: [/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i, {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }],\n      punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n    };\n  }\n};","nrTokens":0,"nrLines":46,"files":[{"filePath":"node_modules/reprism/es/languages/fortran.js","startLine":1,"endLine":46},{"filePath":"node_modules/reprism/lib/languages/fortran.js","startLine":1,"endLine":46}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'flow',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.flow = Prism.languages.extend('javascript', {});\n\n      Prism.languages.insertBefore('flow', 'keyword', {\n        type: [{\n          pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n          alias: 'tag'\n        }]\n      });\n      Prism.languages.flow['function-variable'].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i;\n\n      Prism.languages.insertBefore('flow', 'operator', {\n        'flow-punctuation': {\n          pattern: /\\{\\||\\|\\}/,\n          alias: 'punctuation'\n        }\n      });\n\n      if (Prism.util.type(Prism.languages.flow.keyword) !== 'Array') {\n        Prism.languages.flow.keyword = [Prism.languages.flow.keyword];\n      }\n      Prism.languages.flow.keyword.unshift({\n        pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n        lookbehind: true\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/es/languages/flow.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/flow.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'erlang',\n  init: function init(Prism) {\n    Prism.languages.erlang = {\n      comment: /%.+/,\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      'quoted-function': {\n        pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n        alias: 'function'\n      },\n      'quoted-atom': {\n        pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n        alias: 'atom'\n      },\n      boolean: /\\b(?:true|false)\\b/,\n      keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n      number: [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n      function: /\\b[a-z][\\w@]*(?=\\()/,\n      variable: {\n        // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n        pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n        lookbehind: true\n      },\n      operator: [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      }, {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }],\n      atom: /\\b[a-z][\\w@]*/,\n      punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n    };\n  }\n};","nrTokens":0,"nrLines":45,"files":[{"filePath":"node_modules/reprism/es/languages/erlang.js","startLine":1,"endLine":45},{"filePath":"node_modules/reprism/lib/languages/erlang.js","startLine":1,"endLine":45}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'erb',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.erb = Prism.languages.extend('ruby', {});\n      Prism.languages.insertBefore('erb', 'comment', {\n        delimiter: {\n          pattern: /^<%=?|%>$/,\n          alias: 'punctuation'\n        }\n      });\n\n      Prism.hooks.add('before-tokenize', function (env) {\n        var erbPattern = /<%=?[\\s\\S]+?%>/g;\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'erb', erbPattern);\n      });\n\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":28,"files":[{"filePath":"node_modules/reprism/es/languages/erb.js","startLine":1,"endLine":28},{"filePath":"node_modules/reprism/lib/languages/erb.js","startLine":1,"endLine":28}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'elixir',\n  init: function init(Prism) {\n    Prism.languages.elixir = {\n      comment: {\n        pattern: /#.*/m,\n        lookbehind: true\n      },\n      // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n      regex: {\n        pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n        greedy: true\n      },\n      string: [{\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n        pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }, {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }, {\n        // Multi-line strings are allowed\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }],\n      atom: {\n        // Look-behind prevents bad highlighting of the :: operator\n        pattern: /(^|[^:]):\\w+/,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      // Look-ahead prevents bad highlighting of the :: operator\n      'attr-name': /\\w+:(?!:)/,\n      capture: {\n        // Look-behind prevents bad highlighting of the && operator\n        pattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      argument: {\n        // Look-behind prevents bad highlighting of the && operator\n        pattern: /(^|[^&])&\\d+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      attribute: {\n        pattern: /@[\\S]+/,\n        alias: 'variable'\n      },\n      number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n      keyword: /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\n      boolean: /\\b(?:true|false|nil)\\b/,\n      operator: [/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/, {\n        // We don't want to match <<\n        pattern: /([^<])<(?!<)/,\n        lookbehind: true\n      }, {\n        // We don't want to match >>\n        pattern: /([^>])>(?!>)/,\n        lookbehind: true\n      }],\n      punctuation: /<<|>>|[.,%\\[\\]{}()]/\n    };\n\n    Prism.languages.elixir.string.forEach(function (o) {\n      o.inside = {\n        interpolation: {\n          pattern: /#\\{[^}]+\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^#\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.elixir\n          }\n        }\n      };\n    });\n  }\n};","nrTokens":0,"nrLines":94,"files":[{"filePath":"node_modules/reprism/es/languages/elixir.js","startLine":1,"endLine":94},{"filePath":"node_modules/reprism/lib/languages/elixir.js","startLine":1,"endLine":94}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'eiffel',\n  init: function init(Prism) {\n    Prism.languages.eiffel = {\n      comment: /--.*/,\n      string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      },\n      // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      },\n      // Single-line string\n      {\n        pattern: /\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }],\n      // normal char | special char | char code\n      char: /'(?:%.|[^%'\\r\\n])+'/,\n      keyword: /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n      boolean: /\\b(?:True|False)\\b/i,\n      // Convention: class-names are always all upper-case characters\n      'class-name': {\n        pattern: /\\b[A-Z][\\dA-Z_]*\\b/,\n        alias: 'builtin'\n      },\n      number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n      // Decimal\n      /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/i],\n      punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n      operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n    };\n  }\n};","nrTokens":0,"nrLines":45,"files":[{"filePath":"node_modules/reprism/es/languages/eiffel.js","startLine":1,"endLine":45},{"filePath":"node_modules/reprism/lib/languages/eiffel.js","startLine":1,"endLine":45}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'docker',\n  init: function init(Prism) {\n    Prism.languages.docker = {\n      keyword: {\n        pattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/im,\n        lookbehind: true\n      },\n      string: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      comment: /#.*/,\n      punctuation: /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\n    };\n\n    Prism.languages.dockerfile = Prism.languages.docker;\n  }\n};","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/es/languages/docker.js","startLine":1,"endLine":21},{"filePath":"node_modules/reprism/lib/languages/docker.js","startLine":1,"endLine":21}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'django',\n  init: function init(Prism) {\n    // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n    // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n\n    var _django_template = {\n      property: {\n        pattern: /(?:{{|{%)[\\s\\S]*?(?:%}|}})/g,\n        greedy: true,\n        inside: {\n          string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n          },\n          keyword: /\\b(?:\\||load|verbatim|widthratio|ssi|firstof|for|url|ifchanged|csrf_token|lorem|ifnotequal|autoescape|now|templatetag|debug|cycle|ifequal|regroup|comment|filter|endfilter|if|spaceless|with|extends|block|include|else|empty|endif|endfor|as|endblock|endautoescape|endverbatim|trans|endtrans|[Tt]rue|[Ff]alse|[Nn]one|in|is|static|macro|endmacro|call|endcall|set|endset|raw|endraw)\\b/,\n          operator: /[-+=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n          function: /\\b(?:_|abs|add|addslashes|attr|batch|callable|capfirst|capitalize|center|count|cut|d|date|default|default_if_none|defined|dictsort|dictsortreversed|divisibleby|e|equalto|escape|escaped|escapejs|even|filesizeformat|first|float|floatformat|force_escape|forceescape|format|get_digit|groupby|indent|int|iriencode|iterable|join|last|length|length_is|linebreaks|linebreaksbr|linenumbers|list|ljust|lower|make_list|map|mapping|number|odd|phone2numeric|pluralize|pprint|random|reject|rejectattr|removetags|replace|reverse|rjust|round|safe|safeseq|sameas|select|selectattr|sequence|slice|slugify|sort|string|stringformat|striptags|sum|time|timesince|timeuntil|title|trim|truncate|truncatechars|truncatechars_html|truncatewords|truncatewords_html|undefined|unordered_list|upper|urlencode|urlize|urlizetrunc|wordcount|wordwrap|xmlattr|yesno)\\b/,\n          important: /\\b-?\\d+(?:\\.\\d+)?\\b/,\n          variable: /\\b\\w+?\\b/,\n          punctuation: /[[\\];(),.:]/\n        }\n      }\n    };\n\n    Prism.languages.django = Prism.languages.extend('markup', {\n      comment: /(?:<!--|{#)[\\s\\S]*?(?:#}|-->)/\n    });\n    // Updated html tag pattern to allow template tags inside html tags\n    Prism.languages.django.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^>=]+))?)*\\s*\\/?>/i;\n    Prism.languages.insertBefore('django', 'entity', _django_template);\n    Prism.languages.insertBefore('inside', 'tag', _django_template, Prism.languages.django.tag);\n\n    if (Prism.languages.javascript) {\n      // Combine js code and template tags painting inside <script> blocks\n      Prism.languages.insertBefore('inside', 'string', _django_template, Prism.languages.django.script);\n      Prism.languages.django.script.inside.string.inside = _django_template;\n    }\n    if (Prism.languages.css) {\n      // Combine css code and template tags painting inside <style> blocks\n      Prism.languages.insertBefore('inside', 'atrule', { tag: _django_template.property }, Prism.languages.django.style);\n      Prism.languages.django.style.inside.string.inside = _django_template;\n    }\n\n    // Add an Jinja2 alias\n    Prism.languages.jinja2 = Prism.languages.django;\n  }\n};","nrTokens":0,"nrLines":53,"files":[{"filePath":"node_modules/reprism/es/languages/django.js","startLine":1,"endLine":53},{"filePath":"node_modules/reprism/lib/languages/django.js","startLine":1,"endLine":53}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'diff',\n  init: function init(Prism) {\n    Prism.languages.diff = {\n      coord: [\n      // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n      /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n      // Match \"@@ ... @@\" coord lines in unified diff.\n      /^@@.*@@$/m,\n      // Match coord lines in normal diff (starts with a number).\n      /^\\d+.*$/m],\n\n      // Match inserted and deleted lines. Support both +/- and >/< styles.\n      deleted: /^[-<].*$/m,\n      inserted: /^[+>].*$/m,\n\n      // Match \"different\" lines (prefixed with \"!\") in context diff.\n      diff: {\n        pattern: /^!(?!!).+$/m,\n        alias: 'important'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":29,"files":[{"filePath":"node_modules/reprism/es/languages/diff.js","startLine":1,"endLine":29},{"filePath":"node_modules/reprism/lib/languages/diff.js","startLine":1,"endLine":29}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'dart',\n  init: function init(Prism) {\n    Prism.languages.dart = Prism.languages.extend('clike', {\n      string: [{\n        pattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true\n      }, {\n        pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }],\n      keyword: [/\\b(?:async|sync|yield)\\*/, /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\\b/],\n      operator: /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n    });\n\n    Prism.languages.insertBefore('dart', 'function', {\n      metadata: {\n        pattern: /@\\w+/,\n        alias: 'symbol'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":28,"files":[{"filePath":"node_modules/reprism/es/languages/dart.js","startLine":1,"endLine":28},{"filePath":"node_modules/reprism/lib/languages/dart.js","startLine":1,"endLine":28}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'd',\n  init: function init(Prism) {\n    Prism.languages.d = Prism.languages.extend('clike', {\n      string: [\n      // r\"\", x\"\"\n      /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/,\n      // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n      /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/,\n      // q\"IDENT\n      // ...\n      // IDENT\"\n      /\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/,\n      // q\"//\", q\"||\", etc.\n      /\\bq\"(.)[\\s\\S]*?\\1\"/,\n      // Characters\n      /'(?:\\\\'|\\\\?[^']+)'/, /([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/],\n\n      number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i, {\n        pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,\n        lookbehind: true\n      }],\n\n      // In order: $, keywords and special tokens, globally defined symbols\n      keyword: /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n      operator: /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n    });\n\n    Prism.languages.d.comment = [\n    // Shebang\n    /^\\s*#!.+/,\n    // /+ +/\n    {\n      // Allow one level of nesting\n      pattern: /(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,\n      lookbehind: true\n    }].concat(Prism.languages.d.comment);\n\n    Prism.languages.insertBefore('d', 'comment', {\n      'token-string': {\n        // Allow one level of nesting\n        pattern: /\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,\n        alias: 'string'\n      }\n    });\n\n    Prism.languages.insertBefore('d', 'keyword', {\n      property: /\\B@\\w*/\n    });\n\n    Prism.languages.insertBefore('d', 'function', {\n      register: {\n        // Iasm registers\n        pattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n        alias: 'variable'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":67,"files":[{"filePath":"node_modules/reprism/es/languages/d.js","startLine":1,"endLine":67},{"filePath":"node_modules/reprism/lib/languages/d.js","startLine":1,"endLine":67}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'css',\n  init: function init(Prism) {\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n        inside: {\n          rule: /@[\\w-]+/\n          // See rest below\n        }\n      },\n      url: /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n      selector: /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n      string: {\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n      important: /\\B!important\\b/i,\n      function: /[-a-z0-9]+(?=\\()/i,\n      punctuation: /[(){};:]/\n    };\n\n    Prism.languages.css.atrule.inside.rest = Prism.languages.css;\n\n    if (Prism.languages.markup) {\n      Prism.languages.insertBefore('markup', 'tag', {\n        style: {\n          pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n          lookbehind: true,\n          inside: Prism.languages.css,\n          alias: 'language-css',\n          greedy: true\n        }\n      });\n\n      Prism.languages.insertBefore('inside', 'attr-value', {\n        'style-attr': {\n          pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n          inside: {\n            'attr-name': {\n              pattern: /^\\s*style/i,\n              inside: Prism.languages.markup.tag.inside\n            },\n            punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n            'attr-value': {\n              pattern: /.+/i,\n              inside: Prism.languages.css\n            }\n          },\n          alias: 'language-css'\n        }\n      }, Prism.languages.markup.tag);\n    }\n  }\n};","nrTokens":0,"nrLines":62,"files":[{"filePath":"node_modules/reprism/es/languages/css.js","startLine":1,"endLine":62},{"filePath":"node_modules/reprism/lib/languages/css.js","startLine":1,"endLine":62}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'css-extras',\n  init: function init(Prism) {\n    Prism.languages.css.selector = {\n      pattern: /[^{}\\s][^{}]*(?=\\s*\\{)/,\n      inside: {\n        'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+(?:\\(.*\\))?/,\n        class: /\\.[-:.\\w]+/,\n        id: /#[-:.\\w]+/,\n        attribute: /\\[[^\\]]+\\]/\n      }\n    };\n\n    Prism.languages.insertBefore('css', 'function', {\n      hexcode: /#[\\da-f]{3,8}/i,\n      entity: /\\\\[\\da-f]{1,8}/i,\n      number: /[\\d%.]+/\n    });\n  }\n};","nrTokens":0,"nrLines":26,"files":[{"filePath":"node_modules/reprism/es/languages/css-extras.js","startLine":1,"endLine":26},{"filePath":"node_modules/reprism/lib/languages/css-extras.js","startLine":1,"endLine":26}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'csp',\n  init: function init(Prism) {\n    /**\n     * Original by Scott Helme.\n     *\n     * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n     *\n     * Supports the following:\n     *  - CSP Level 1\n     *  - CSP Level 2\n     *  - CSP Level 3\n     */\n\n    Prism.languages.csp = {\n      directive: {\n        pattern: /\\b(?:(?:base-uri|form-action|frame-ancestors|plugin-types|referrer|reflected-xss|report-to|report-uri|require-sri-for|sandbox) |(?:block-all-mixed-content|disown-opener|upgrade-insecure-requests)(?: |;)|(?:child|connect|default|font|frame|img|manifest|media|object|script|style|worker)-src )/i,\n        alias: 'keyword'\n      },\n      safe: {\n        pattern: /'(?:self|none|strict-dynamic|(?:nonce-|sha(?:256|384|512)-)[a-zA-Z\\d+=/]+)'/,\n        alias: 'selector'\n      },\n      unsafe: {\n        pattern: /(?:'unsafe-inline'|'unsafe-eval'|'unsafe-hashed-attributes'|\\*)/,\n        alias: 'function'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":35,"files":[{"filePath":"node_modules/reprism/es/languages/csp.js","startLine":1,"endLine":35},{"filePath":"node_modules/reprism/lib/languages/csp.js","startLine":1,"endLine":35}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'csharp',\n  init: function init(Prism) {\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n      keyword: /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n      string: [{\n        pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      }, {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n        greedy: true\n      }],\n      'class-name': [{\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n        inside: {\n          punctuation: /\\./\n        }\n      }, {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }, {\n        // class Foo : Bar\n        pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }, {\n        // class Foo\n        pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }],\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i\n    });\n\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      'generic-method': {\n        pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n        inside: {\n          function: /^\\w+/,\n          'class-name': {\n            pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          keyword: Prism.languages.csharp.keyword,\n          punctuation: /[<>(),.:]/\n        }\n      },\n      preprocessor: {\n        pattern: /(^\\s*)#.*/m,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight preprocessor directives as keywords\n          directive: {\n            pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    });\n\n    Prism.languages.dotnet = Prism.languages.csharp;\n  }\n};","nrTokens":0,"nrLines":81,"files":[{"filePath":"node_modules/reprism/es/languages/csharp.js","startLine":1,"endLine":81},{"filePath":"node_modules/reprism/lib/languages/csharp.js","startLine":1,"endLine":81}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'crystal',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.crystal = Prism.languages.extend('ruby', {\n        keyword: [/\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/, {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }],\n\n        number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n      });\n\n      Prism.languages.insertBefore('crystal', 'string', {\n        attribute: {\n          pattern: /@\\[.+?\\]/,\n          alias: 'attr-name',\n          inside: {\n            delimiter: {\n              pattern: /^@\\[|\\]$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        },\n\n        expansion: [{\n          pattern: /\\{\\{.+?\\}\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{\\{|\\}\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        }, {\n          pattern: /\\{%.+?%\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{%|%\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        }]\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":54,"files":[{"filePath":"node_modules/reprism/es/languages/crystal.js","startLine":1,"endLine":54},{"filePath":"node_modules/reprism/lib/languages/crystal.js","startLine":1,"endLine":54}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'cpp',\n  init: function init(Prism) {\n    Prism.languages.cpp = Prism.languages.extend('c', {\n      keyword: /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: /--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n    });\n\n    Prism.languages.insertBefore('cpp', 'keyword', {\n      'class-name': {\n        pattern: /(class\\s+)\\w+/i,\n        lookbehind: true\n      }\n    });\n\n    Prism.languages.insertBefore('cpp', 'string', {\n      'raw-string': {\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n        alias: 'string',\n        greedy: true\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/es/languages/cpp.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/cpp.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'coffeescript',\n  init: function init(Prism) {\n    (function (Prism) {\n      // Ignore comments starting with { to privilege string interpolation highlighting\n      var comment = /#(?!\\{).+/,\n          interpolation = {\n        pattern: /#\\{[^}]+\\}/,\n        alias: 'variable'\n      };\n\n      Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n        comment: comment,\n        string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        }, {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }],\n        keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n        'class-member': {\n          pattern: /@(?!\\d)\\w+/,\n          alias: 'variable'\n        }\n      });\n\n      Prism.languages.insertBefore('coffeescript', 'comment', {\n        'multiline-comment': {\n          pattern: /###[\\s\\S]+?###/,\n          alias: 'comment'\n        },\n\n        // Block regexp can contain comments and interpolation\n        'block-regex': {\n          pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n          alias: 'regex',\n          inside: {\n            comment: comment,\n            interpolation: interpolation\n          }\n        }\n      });\n\n      Prism.languages.insertBefore('coffeescript', 'string', {\n        'inline-javascript': {\n          pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n          inside: {\n            delimiter: {\n              pattern: /^`|`$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n\n        // Block strings\n        'multiline-string': [{\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        }, {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }]\n      });\n\n      Prism.languages.insertBefore('coffeescript', 'keyword', {\n        // Object property\n        property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n      });\n\n      delete Prism.languages.coffeescript['template-string'];\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":91,"files":[{"filePath":"node_modules/reprism/es/languages/coffeescript.js","startLine":1,"endLine":91},{"filePath":"node_modules/reprism/lib/languages/coffeescript.js","startLine":1,"endLine":91}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'clojure',\n  init: function init(Prism) {\n    // Copied from https://github.com/jeluard/prism-clojure\n    Prism.languages.clojure = {\n      comment: /;+.*/,\n      string: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      operator: /(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i, // used for symbols and keywords\n      keyword: {\n        pattern: /([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def\\-|defn|defn\\-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|\\-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,\n        lookbehind: true\n      },\n      boolean: /\\b(?:true|false|nil)\\b/,\n      number: /\\b[0-9A-Fa-f]+\\b/,\n      punctuation: /[{}\\[\\](),]/\n    };\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/es/languages/clojure.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/clojure.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'clike',\n  init: function init(Prism) {\n    Prism.languages.clike = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }],\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      function: /[a-z0-9_]+(?=\\()/i,\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n      operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/es/languages/clike.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/clike.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'c',\n  init: function init(Prism) {\n    Prism.languages.c = Prism.languages.extend('clike', {\n      keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n      operator: /-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,\n      number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n    });\n\n    Prism.languages.insertBefore('c', 'string', {\n      macro: {\n        // allow for multiline macro definitions\n        // spaces after the # character compile fine with gcc\n        pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight the path of the include statement as a string\n          string: {\n            pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n            lookbehind: true\n          },\n          // highlight macro directives as keywords\n          directive: {\n            pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      },\n      // highlight predefined macros as constants\n      constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n    });\n\n    delete Prism.languages.c['class-name'];\n    delete Prism.languages.c.boolean;\n  }\n};","nrTokens":0,"nrLines":43,"files":[{"filePath":"node_modules/reprism/es/languages/c.js","startLine":1,"endLine":43},{"filePath":"node_modules/reprism/lib/languages/c.js","startLine":1,"endLine":43}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'bro',\n  init: function init(Prism) {\n    Prism.languages.bro = {\n      comment: {\n        pattern: /(^|[^\\\\$])#.*/,\n        lookbehind: true,\n        inside: {\n          italic: /\\b(?:TODO|FIXME|XXX)\\b/\n        }\n      },\n\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n\n      boolean: /\\b[TF]\\b/,\n\n      function: {\n        pattern: /(?:function|hook|event) \\w+(?:::\\w+)?/,\n        inside: {\n          keyword: /^(?:function|hook|event)/\n        }\n      },\n\n      variable: {\n        pattern: /(?:global|local) \\w+/i,\n        inside: {\n          keyword: /(?:global|local)/\n        }\n      },\n\n      builtin: /(?:@(?:load(?:-(?:sigs|plugin))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column))/,\n\n      constant: {\n        pattern: /const \\w+/i,\n        inside: {\n          keyword: /const/\n        }\n      },\n\n      keyword: /\\b(?:break|next|continue|alarm|using|of|add|delete|export|print|return|schedule|when|timeout|addr|any|bool|count|double|enum|file|int|interval|pattern|opaque|port|record|set|string|subnet|table|time|vector|for|if|else|in|module|function)\\b/,\n\n      operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":57,"files":[{"filePath":"node_modules/reprism/es/languages/bro.js","startLine":1,"endLine":57},{"filePath":"node_modules/reprism/lib/languages/bro.js","startLine":1,"endLine":57}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'brainfuck',\n  init: function init(Prism) {\n    Prism.languages.brainfuck = {\n      pointer: {\n        pattern: /<|>/,\n        alias: 'keyword'\n      },\n      increment: {\n        pattern: /\\+/,\n        alias: 'inserted'\n      },\n      decrement: {\n        pattern: /-/,\n        alias: 'deleted'\n      },\n      branching: {\n        pattern: /\\[|\\]/,\n        alias: 'important'\n      },\n      operator: /[.,]/,\n      comment: /\\S+/\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/es/languages/brainfuck.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/brainfuck.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'bison',\n  init: function init(Prism) {\n    Prism.languages.bison = Prism.languages.extend('c', {});\n\n    Prism.languages.insertBefore('bison', 'comment', {\n      bison: {\n        // This should match all the beginning of the file\n        // including the prologue(s), the bison declarations and\n        // the grammar rules.\n        pattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,\n        inside: {\n          c: {\n            // Allow for one level of nested braces\n            pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n            inside: {\n              delimiter: {\n                pattern: /^%?\\{|%?\\}$/,\n                alias: 'punctuation'\n              },\n              'bison-variable': {\n                pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n                alias: 'variable',\n                inside: {\n                  punctuation: /<|>/\n                }\n              },\n              rest: Prism.languages.c\n            }\n          },\n          comment: Prism.languages.c.comment,\n          string: Prism.languages.c.string,\n          property: /\\S+(?=:)/,\n          keyword: /%\\w+/,\n          number: {\n            pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n            lookbehind: true\n          },\n          punctuation: /%[%?]|[|:;\\[\\]<>]/\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":49,"files":[{"filePath":"node_modules/reprism/es/languages/bison.js","startLine":1,"endLine":49},{"filePath":"node_modules/reprism/lib/languages/bison.js","startLine":1,"endLine":49}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'batch',\n  init: function init(Prism) {\n    (function (Prism) {\n      var variable = /%%?[~:\\w]+%?|!\\S+!/;\n      var parameter = {\n        pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n        alias: 'attr-name',\n        inside: {\n          punctuation: /:/\n        }\n      };\n      var string = /\"[^\"]*\"/;\n      var number = /(?:\\b|-)\\d+\\b/;\n\n      Prism.languages.batch = {\n        comment: [/^::.*/m, {\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true\n        }],\n        label: {\n          pattern: /^:.*/m,\n          alias: 'property'\n        },\n        command: [{\n          // FOR command\n          pattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^for\\b|\\b(?:in|do)\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            punctuation: /[()',]/\n          }\n        }, {\n          // IF command\n          pattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            operator: /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n          }\n        }, {\n          // ELSE command\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^else\\b/i\n          }\n        }, {\n          // SET command\n          pattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^set\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n            number: number,\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n            punctuation: /[()',]/\n          }\n        }, {\n          // Other commands\n          pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\w+\\b/i,\n            string: string,\n            parameter: parameter,\n            label: {\n              pattern: /(^\\s*):\\S+/m,\n              lookbehind: true,\n              alias: 'property'\n            },\n            variable: variable,\n            number: number,\n            operator: /\\^/\n          }\n        }],\n        operator: /[&@]/,\n        punctuation: /[()']/\n      };\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":97,"files":[{"filePath":"node_modules/reprism/es/languages/batch.js","startLine":1,"endLine":97},{"filePath":"node_modules/reprism/lib/languages/batch.js","startLine":1,"endLine":97}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'basic',\n  init: function init(Prism) {\n    Prism.languages.basic = {\n      comment: {\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      string: {\n        pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n        greedy: true\n      },\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n      keyword: /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n      function: /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n      operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n      punctuation: /[,;:()]/\n    };\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/es/languages/basic.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/basic.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'bash',\n  init: function init(Prism) {\n    (function (Prism) {\n      var insideString = {\n        variable: [\n        // Arithmetic Environment\n        {\n          pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n          inside: {\n            // If there is a $ sign at the beginning highlight $(( and )) as variable\n            variable: [{\n              pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n              lookbehind: true\n            }, /^\\$\\(\\(/],\n            number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n            // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n            operator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n            // If there is no $ sign at the beginning highlight (( and )) as punctuation\n            punctuation: /\\(\\(?|\\)\\)?|,|;/\n          }\n        },\n        // Command Substitution\n        {\n          pattern: /\\$\\([^)]+\\)|`[^`]+`/,\n          greedy: true,\n          inside: {\n            variable: /^\\$\\(|^`|\\)$|`$/\n          }\n        }, /\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]\n      };\n\n      Prism.languages.bash = {\n        shebang: {\n          pattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n          alias: 'important'\n        },\n        comment: {\n          pattern: /(^|[^\"{\\\\])#.*/,\n          lookbehind: true\n        },\n        string: [\n        // Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\n        {\n          pattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        }, {\n          pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n          greedy: true,\n          inside: insideString\n        }],\n        variable: insideString.variable,\n        // Originally based on http://ss64.com/bash/\n        function: {\n          pattern: /(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,\n          lookbehind: true\n        },\n        keyword: {\n          pattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\n          lookbehind: true\n        },\n        boolean: {\n          pattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\n          lookbehind: true\n        },\n        operator: /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n        punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n      };\n\n      var inside = insideString.variable[1].inside;\n      inside.string = Prism.languages.bash.string;\n      inside.function = Prism.languages.bash.function;\n      inside.keyword = Prism.languages.bash.keyword;\n      inside.boolean = Prism.languages.bash.boolean;\n      inside.operator = Prism.languages.bash.operator;\n      inside.punctuation = Prism.languages.bash.punctuation;\n\n      Prism.languages.shell = Prism.languages.bash;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":88,"files":[{"filePath":"node_modules/reprism/es/languages/bash.js","startLine":1,"endLine":88},{"filePath":"node_modules/reprism/lib/languages/bash.js","startLine":1,"endLine":88}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'autoit',\n  init: function init(Prism) {\n    Prism.languages.autoit = {\n      comment: [/;.*/, {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\n        lookbehind: true\n      }],\n      url: {\n        pattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n        lookbehind: true\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          variable: /([%$@])\\w+\\1/\n        }\n      },\n      directive: {\n        pattern: /(^\\s*)#\\w+/m,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      function: /\\b\\w+(?=\\()/,\n      // Variables and macros\n      variable: /[$@]\\w+/,\n      keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n      number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n      boolean: /\\b(?:True|False)\\b/i,\n      operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n      punctuation: /[\\[\\]().,:]/\n    };\n  }\n};","nrTokens":0,"nrLines":41,"files":[{"filePath":"node_modules/reprism/es/languages/autoit.js","startLine":1,"endLine":41},{"filePath":"node_modules/reprism/lib/languages/autoit.js","startLine":1,"endLine":41}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'autohotkey',\n  init: function init(Prism) {\n    // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n    Prism.languages.autohotkey = {\n      comment: {\n        pattern: /(^[^\";\\n]*(\"[^\"\\n]*?\"[^\"\\n]*?)*)(?:;.*$|^\\s*\\/\\*[\\s\\S]*\\n\\*\\/)/m,\n        lookbehind: true\n      },\n      string: /\"(?:[^\"\\n\\r]|\"\")*\"/m,\n      function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m, // function - don't use .*\\) in the end bcoz string locks it\n      tag: /^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m, // labels\n      variable: /%\\w+%/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n      operator: /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n      punctuation: /[{}[\\]():,]/,\n      boolean: /\\b(?:true|false)\\b/,\n\n      selector: /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n\n      constant: /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|programfiles|a_programfiles|a_programs|a_programscommon|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,\n\n      builtin: /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|cos|dllcall|exp|fileexist|Fileopen|floor|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,\n\n      symbol: /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n\n      important: /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InstallKeybdHook|InstallMouseHook|KeyHistory|LTrim|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|WinActivateForce)\\b/i,\n\n      keyword: /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Type|UnCheck|underline|Unicode|Unlock|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i\n    };\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/es/languages/autohotkey.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/autohotkey.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'aspnet',\n  init: function init(Prism) {\n    Prism.languages.aspnet = Prism.languages.extend('markup', {\n      'page-directive tag': {\n        pattern: /<%\\s*@.*%>/i,\n        inside: {\n          'page-directive tag': /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          rest: Prism.languages.markup.tag.inside\n        }\n      },\n      'directive tag': {\n        pattern: /<%.*%>/i,\n        inside: {\n          'directive tag': /<%\\s*?[$=%#:]{0,2}|%>/i,\n          rest: Prism.languages.csharp\n        }\n      }\n    });\n    // Regexp copied from prism-markup, with a negative look-ahead added\n    Prism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n    // match directives of attribute value foo=\"<% Bar %>\"\n    Prism.languages.insertBefore('inside', 'punctuation', {\n      'directive tag': Prism.languages.aspnet['directive tag']\n    }, Prism.languages.aspnet.tag.inside['attr-value']);\n\n    Prism.languages.insertBefore('aspnet', 'comment', {\n      'asp comment': /<%--[\\s\\S]*?--%>/\n    });\n\n    // script runat=\"server\" contains csharp, not javascript\n    Prism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\n      'asp script': {\n        pattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        inside: Prism.languages.csharp || {}\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":46,"files":[{"filePath":"node_modules/reprism/es/languages/aspnet.js","startLine":1,"endLine":46},{"filePath":"node_modules/reprism/lib/languages/aspnet.js","startLine":1,"endLine":46}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'asm6502',\n  init: function init(Prism) {\n    Prism.languages.asm6502 = {\n      comment: /;.*/,\n      directive: {\n        pattern: /\\.\\w+(?= )/,\n        alias: 'keyword'\n      },\n      string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      opcode: {\n        pattern: /\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,\n        alias: 'property'\n      },\n      hexnumber: {\n        pattern: /#?\\$[\\da-f]{2,4}/i,\n        alias: 'string'\n      },\n      binarynumber: {\n        pattern: /#?%[01]+/,\n        alias: 'string'\n      },\n      decimalnumber: {\n        pattern: /#?\\d+/,\n        alias: 'string'\n      },\n      register: {\n        pattern: /\\b[xya]\\b/i,\n        alias: 'variable'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/es/languages/asm6502.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/asm6502.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'asciidoc',\n  init: function init(Prism) {\n    (function (Prism) {\n      var attributes = {\n        pattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\]\\\\]|\\\\.)*\\]|[^\\]\\\\]|\\\\.)*\\]/m,\n        lookbehind: true,\n        inside: {\n          quoted: {\n            pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n            inside: {\n              punctuation: /^[$`]|[$`]$/\n            }\n          },\n          interpreted: {\n            pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n            inside: {\n              punctuation: /^'|'$/\n              // See rest below\n            }\n          },\n          string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n          variable: /\\w+(?==)/,\n          punctuation: /^\\[|\\]$|,/,\n          operator: /=/,\n          // The negative look-ahead prevents blank matches\n          'attr-value': /(?!^\\s+$).+/\n        }\n      };\n      Prism.languages.asciidoc = {\n        'comment-block': {\n          pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n          alias: 'comment'\n        },\n        table: {\n          pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n          inside: {\n            specifiers: {\n              pattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\n              alias: 'attr-value'\n            },\n            punctuation: {\n              pattern: /(^|[^\\\\])[|!]=*/,\n              lookbehind: true\n            }\n            // See rest below\n          }\n        },\n\n        'passthrough-block': {\n          pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n          inside: {\n            punctuation: /^\\++|\\++$/\n            // See rest below\n          }\n        },\n        // Literal blocks and listing blocks\n        'literal-block': {\n          pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n          inside: {\n            punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/\n            // See rest below\n          }\n        },\n        // Sidebar blocks, quote blocks, example blocks and open blocks\n        'other-block': {\n          pattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n          inside: {\n            punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n            // See rest below\n          }\n        },\n\n        // list-punctuation and list-label must appear before indented-block\n        'list-punctuation': {\n          pattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n          lookbehind: true,\n          alias: 'punctuation'\n        },\n        'list-label': {\n          pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        'indented-block': {\n          pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n          lookbehind: true\n        },\n\n        comment: /^\\/\\/.*/m,\n        title: {\n          pattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} +.+|^\\.(?![\\s.]).*/m,\n          alias: 'important',\n          inside: {\n            punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n            // See rest below\n          }\n        },\n        'attribute-entry': {\n          pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n          alias: 'tag'\n        },\n        attributes: attributes,\n        hr: {\n          pattern: /^'{3,}$/m,\n          alias: 'punctuation'\n        },\n        'page-break': {\n          pattern: /^<{3,}$/m,\n          alias: 'punctuation'\n        },\n        admonition: {\n          pattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n          alias: 'keyword'\n        },\n        callout: [{\n          pattern: /(^[ \\t]*)<?\\d*>/m,\n          lookbehind: true,\n          alias: 'symbol'\n        }, {\n          pattern: /<\\d+>/,\n          alias: 'symbol'\n        }],\n        macro: {\n          pattern: /\\b[a-z\\d][a-z\\d-]*::?(?:(?:\\S+)??\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n          inside: {\n            function: /^[a-z\\d-]+(?=:)/,\n            punctuation: /^::?/,\n            attributes: {\n              pattern: /(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n              inside: attributes.inside\n            }\n          }\n        },\n        inline: {\n          /*\n          The initial look-behind prevents the highlighting of escaped quoted text.\n          Quoted text can be multi-line but cannot span an empty line.\n          All quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\n          First, we handle the constrained quotes.\n          Those must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\n          They are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\n          Then we handle the unconstrained quotes.\n          Those do not have the restrictions of the constrained quotes.\n          They are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n          */\n          pattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?: ['`]|.)+?(?:(?:\\r?\\n|\\r)(?: ['`]|.)+?)*['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n          lookbehind: true,\n          inside: {\n            attributes: attributes,\n            url: {\n              pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n              inside: {\n                punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n              }\n            },\n            'attribute-ref': {\n              pattern: /^\\{.+\\}$/,\n              inside: {\n                variable: {\n                  pattern: /(^\\{)[a-z\\d,+_-]+/,\n                  lookbehind: true\n                },\n                operator: /^[=?!#%@$]|!(?=[:}])/,\n                punctuation: /^\\{|\\}$|::?/\n              }\n            },\n            italic: {\n              pattern: /^(['_])[\\s\\S]+\\1$/,\n              inside: {\n                punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n              }\n            },\n            bold: {\n              pattern: /^\\*[\\s\\S]+\\*$/,\n              inside: {\n                punctuation: /^\\*\\*?|\\*\\*?$/\n              }\n            },\n            punctuation: /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n          }\n        },\n        replacement: {\n          pattern: /\\((?:C|TM|R)\\)/,\n          alias: 'builtin'\n        },\n        entity: /&#?[\\da-z]{1,8};/i,\n        'line-continuation': {\n          pattern: /(^| )\\+$/m,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n\n        // Allow some nesting. There is no recursion though, so cloning should not be needed.\n\n      };attributes.inside.interpreted.inside.rest = {\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity\n      };\n\n      Prism.languages.asciidoc['passthrough-block'].inside.rest = {\n        macro: Prism.languages.asciidoc.macro\n      };\n\n      Prism.languages.asciidoc['literal-block'].inside.rest = {\n        callout: Prism.languages.asciidoc.callout\n      };\n\n      Prism.languages.asciidoc.table.inside.rest = {\n        'comment-block': Prism.languages.asciidoc['comment-block'],\n        'passthrough-block': Prism.languages.asciidoc['passthrough-block'],\n        'literal-block': Prism.languages.asciidoc['literal-block'],\n        'other-block': Prism.languages.asciidoc['other-block'],\n        'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\n        'indented-block': Prism.languages.asciidoc['indented-block'],\n        comment: Prism.languages.asciidoc.comment,\n        title: Prism.languages.asciidoc.title,\n        'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\n        attributes: Prism.languages.asciidoc.attributes,\n        hr: Prism.languages.asciidoc.hr,\n        'page-break': Prism.languages.asciidoc['page-break'],\n        admonition: Prism.languages.asciidoc.admonition,\n        'list-label': Prism.languages.asciidoc['list-label'],\n        callout: Prism.languages.asciidoc.callout,\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity,\n        'line-continuation': Prism.languages.asciidoc['line-continuation']\n      };\n\n      Prism.languages.asciidoc['other-block'].inside.rest = {\n        table: Prism.languages.asciidoc.table,\n        'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\n        'indented-block': Prism.languages.asciidoc['indented-block'],\n        comment: Prism.languages.asciidoc.comment,\n        'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\n        attributes: Prism.languages.asciidoc.attributes,\n        hr: Prism.languages.asciidoc.hr,\n        'page-break': Prism.languages.asciidoc['page-break'],\n        admonition: Prism.languages.asciidoc.admonition,\n        'list-label': Prism.languages.asciidoc['list-label'],\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity,\n        'line-continuation': Prism.languages.asciidoc['line-continuation']\n      };\n\n      Prism.languages.asciidoc.title.inside.rest = {\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity\n\n        // Plugin to make entity title show the real entity, idea by Roman Komarov\n      };Prism.hooks.add('wrap', function (env) {\n        if (env.type === 'entity') {\n          env.attributes.title = env.content.replace(/&amp;/, '&');\n        }\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":271,"files":[{"filePath":"node_modules/reprism/es/languages/asciidoc.js","startLine":1,"endLine":271},{"filePath":"node_modules/reprism/lib/languages/asciidoc.js","startLine":1,"endLine":271}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'arff',\n  init: function init(Prism) {\n    Prism.languages.arff = {\n      comment: /%.*/,\n      string: {\n        pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      keyword: /@(?:attribute|data|end|relation)\\b/i,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      punctuation: /[{},]/\n    };\n  }\n};","nrTokens":0,"nrLines":20,"files":[{"filePath":"node_modules/reprism/es/languages/arff.js","startLine":1,"endLine":20},{"filePath":"node_modules/reprism/lib/languages/arff.js","startLine":1,"endLine":20}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'arduino',\n  init: function init(Prism) {\n    Prism.languages.arduino = Prism.languages.extend('cpp', {\n      keyword: /\\b(?:setup|if|else|while|do|for|return|in|instanceof|default|function|loop|goto|switch|case|new|try|throw|catch|finally|null|break|continue|boolean|bool|void|byte|word|string|String|array|int|long|integer|double)\\b/,\n      builtin: /\\b(?:KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|LiquidCrystal_I2C|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD|runShellCommandAsynchronously|analogWriteResolution|retrieveCallingNumber|printFirmwareVersion|analogReadResolution|sendDigitalPortPair|noListenOnLocalhost|readJoystickButton|setFirmwareVersion|readJoystickSwitch|scrollDisplayRight|getVoiceCallStatus|scrollDisplayLeft|writeMicroseconds|delayMicroseconds|beginTransmission|getSignalStrength|runAsynchronously|getAsynchronously|listenOnLocalhost|getCurrentCarrier|readAccelerometer|messageAvailable|sendDigitalPorts|lineFollowConfig|countryNameWrite|runShellCommand|readStringUntil|rewindDirectory|readTemperature|setClockDivider|readLightSensor|endTransmission|analogReference|detachInterrupt|countryNameRead|attachInterrupt|encryptionType|readBytesUntil|robotNameWrite|readMicrophone|robotNameRead|cityNameWrite|userNameWrite|readJoystickY|readJoystickX|mouseReleased|openNextFile|scanNetworks|noInterrupts|digitalWrite|beginSpeaker|mousePressed|isActionDone|mouseDragged|displayLogos|noAutoscroll|addParameter|remoteNumber|getModifiers|keyboardRead|userNameRead|waitContinue|processInput|parseCommand|printVersion|readNetworks|writeMessage|blinkVersion|cityNameRead|readMessage|setDataMode|parsePacket|isListening|setBitOrder|beginPacket|isDirectory|motorsWrite|drawCompass|digitalRead|clearScreen|serialEvent|rightToLeft|setTextSize|leftToRight|requestFrom|keyReleased|compassRead|analogWrite|interrupts|WiFiServer|disconnect|playMelody|parseFloat|autoscroll|getPINUsed|setPINUsed|setTimeout|sendAnalog|readSlider|analogRead|beginWrite|createChar|motorsStop|keyPressed|tempoWrite|readButton|subnetMask|debugPrint|macAddress|writeGreen|randomSeed|attachGPRS|readString|sendString|remotePort|releaseAll|mouseMoved|background|getXChange|getYChange|answerCall|getResult|voiceCall|endPacket|constrain|getSocket|writeJSON|getButton|available|connected|findUntil|readBytes|exitValue|readGreen|writeBlue|startLoop|IPAddress|isPressed|sendSysex|pauseMode|gatewayIP|setCursor|getOemKey|tuneWrite|noDisplay|loadImage|switchPIN|onRequest|onReceive|changePIN|playFile|noBuffer|parseInt|overflow|checkPIN|knobRead|beginTFT|bitClear|updateIR|bitWrite|position|writeRGB|highByte|writeRed|setSpeed|readBlue|noStroke|remoteIP|transfer|shutdown|hangCall|beginSMS|endWrite|attached|maintain|noCursor|checkReg|checkPUK|shiftOut|isValid|shiftIn|pulseIn|connect|println|localIP|pinMode|getIMEI|display|noBlink|process|getBand|running|beginSD|drawBMP|lowByte|setBand|release|bitRead|prepare|pointTo|readRed|setMode|noFill|remove|listen|stroke|detach|attach|noTone|exists|buffer|height|bitSet|circle|config|cursor|random|IRread|setDNS|endSMS|getKey|micros|millis|begin|print|write|ready|flush|width|isPIN|blink|clear|press|mkdir|rmdir|close|point|yield|image|BSSID|click|delay|read|text|move|peek|beep|rect|line|open|seek|fill|size|turn|stop|home|find|step|tone|sqrt|RSSI|SSID|end|bit|tan|cos|sin|pow|map|abs|max|min|get|run|put)\\b/,\n      constant: /\\b(?:DIGITAL_MESSAGE|FIRMATA_STRING|ANALOG_MESSAGE|REPORT_DIGITAL|REPORT_ANALOG|INPUT_PULLUP|SET_PIN_MODE|INTERNAL2V56|SYSTEM_RESET|LED_BUILTIN|INTERNAL1V1|SYSEX_START|INTERNAL|EXTERNAL|DEFAULT|OUTPUT|INPUT|HIGH|LOW)\\b/\n    });\n  }\n};","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/reprism/es/languages/arduino.js","startLine":1,"endLine":15},{"filePath":"node_modules/reprism/lib/languages/arduino.js","startLine":1,"endLine":15}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'applescript',\n  init: function init(Prism) {\n    Prism.languages.applescript = {\n      comment: [\n      // Allow one level of nesting\n      /\\(\\*(?:\\(\\*[\\s\\S]*?\\*\\)|[\\s\\S])*?\\*\\)/, /--.+/, /#.+/],\n      string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n      operator: [/[&=?????????*+\\-\\/??^]|[<>]=?/, /\\b(?:(?:start|begin|end)s? with|(?:(?:does not|doesn't) contain|contains?)|(?:is|isn't|is not) (?:in|contained by)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:(?:does not|doesn't) come|comes) (?:before|after)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equals|equal to|isn't|is not)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|or|div|mod|as|not))\\b/],\n      keyword: /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n      class: {\n        pattern: /\\b(?:alias|application|boolean|class|constant|date|file|integer|list|number|POSIX file|real|record|reference|RGB color|script|text|centimetres|centimeters|feet|inches|kilometres|kilometers|metres|meters|miles|yards|square feet|square kilometres|square kilometers|square metres|square meters|square miles|square yards|cubic centimetres|cubic centimeters|cubic feet|cubic inches|cubic metres|cubic meters|cubic yards|gallons|litres|liters|quarts|grams|kilograms|ounces|pounds|degrees Celsius|degrees Fahrenheit|degrees Kelvin)\\b/,\n        alias: 'builtin'\n      },\n      punctuation: /[{}():,????????????]/\n    };\n  }\n};","nrTokens":0,"nrLines":24,"files":[{"filePath":"node_modules/reprism/es/languages/applescript.js","startLine":1,"endLine":24},{"filePath":"node_modules/reprism/lib/languages/applescript.js","startLine":1,"endLine":24}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'apl',\n  init: function init(Prism) {\n    Prism.languages.apl = {\n      comment: /(?:???|#[! ]).*$/m,\n      string: {\n        pattern: /'(?:[^'\\r\\n]|'')*'/,\n        greedy: true\n      },\n      number: /???(?:\\d*\\.?\\d+(?:e[+??]?\\d+)?|??|???)(?:j???(?:\\d*\\.?\\d+(?:e[+??]?\\d+)?|??|???))?/i,\n      statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n      'system-function': {\n        pattern: /???[A-Z]+/i,\n        alias: 'function'\n      },\n      constant: /[??????#??????]/,\n      function: /[-+?????????????|???????*??????!???<???=>????????????????????????~???????????????,?????????????????????????????????????????????????????????????????????????????]/,\n      'monadic-operator': {\n        pattern: /[\\\\\\/??????????????&???]/,\n        alias: 'operator'\n      },\n      'dyadic-operator': {\n        pattern: /[.???????????????@???]/,\n        alias: 'operator'\n      },\n      assignment: {\n        pattern: /???/,\n        alias: 'keyword'\n      },\n      punctuation: /[\\[;\\]()??????]/,\n      dfn: {\n        pattern: /[{}??????????????????:]/,\n        alias: 'builtin'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":42,"files":[{"filePath":"node_modules/reprism/es/languages/apl.js","startLine":1,"endLine":42},{"filePath":"node_modules/reprism/lib/languages/apl.js","startLine":1,"endLine":42}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'apacheconf',\n  init: function init(Prism) {\n    Prism.languages.apacheconf = {\n      comment: /#.*/,\n      'directive-inline': {\n        pattern: /^(\\s*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|AddAlt|AddAltByEncoding|AddAltByType|AddCharset|AddDefaultCharset|AddDescription|AddEncoding|AddHandler|AddIcon|AddIconByEncoding|AddIconByType|AddInputFilter|AddLanguage|AddModuleInfo|AddOutputFilter|AddOutputFilterByType|AddType|Alias|AliasMatch|Allow|AllowCONNECT|AllowEncodedSlashes|AllowMethods|AllowOverride|AllowOverrideList|Anonymous|Anonymous_LogEmail|Anonymous_MustGiveEmail|Anonymous_NoUserID|Anonymous_VerifyEmail|AsyncRequestWorkerFactor|AuthBasicAuthoritative|AuthBasicFake|AuthBasicProvider|AuthBasicUseDigestAlgorithm|AuthDBDUserPWQuery|AuthDBDUserRealmQuery|AuthDBMGroupFile|AuthDBMType|AuthDBMUserFile|AuthDigestAlgorithm|AuthDigestDomain|AuthDigestNonceLifetime|AuthDigestProvider|AuthDigestQop|AuthDigestShmemSize|AuthFormAuthoritative|AuthFormBody|AuthFormDisableNoStore|AuthFormFakeBasicAuth|AuthFormLocation|AuthFormLoginRequiredLocation|AuthFormLoginSuccessLocation|AuthFormLogoutLocation|AuthFormMethod|AuthFormMimetype|AuthFormPassword|AuthFormProvider|AuthFormSitePassphrase|AuthFormSize|AuthFormUsername|AuthGroupFile|AuthLDAPAuthorizePrefix|AuthLDAPBindAuthoritative|AuthLDAPBindDN|AuthLDAPBindPassword|AuthLDAPCharsetConfig|AuthLDAPCompareAsUser|AuthLDAPCompareDNOnServer|AuthLDAPDereferenceAliases|AuthLDAPGroupAttribute|AuthLDAPGroupAttributeIsDN|AuthLDAPInitialBindAsUser|AuthLDAPInitialBindPattern|AuthLDAPMaxSubGroupDepth|AuthLDAPRemoteUserAttribute|AuthLDAPRemoteUserIsDN|AuthLDAPSearchAsUser|AuthLDAPSubGroupAttribute|AuthLDAPSubGroupClass|AuthLDAPUrl|AuthMerging|AuthName|AuthnCacheContext|AuthnCacheEnable|AuthnCacheProvideFor|AuthnCacheSOCache|AuthnCacheTimeout|AuthnzFcgiCheckAuthnProvider|AuthnzFcgiDefineProvider|AuthType|AuthUserFile|AuthzDBDLoginToReferer|AuthzDBDQuery|AuthzDBDRedirectQuery|AuthzDBMType|AuthzSendForbiddenOnFailure|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|CacheDefaultExpire|CacheDetailHeader|CacheDirLength|CacheDirLevels|CacheDisable|CacheEnable|CacheFile|CacheHeader|CacheIgnoreCacheControl|CacheIgnoreHeaders|CacheIgnoreNoLastMod|CacheIgnoreQueryString|CacheIgnoreURLSessionIdentifiers|CacheKeyBaseURL|CacheLastModifiedFactor|CacheLock|CacheLockMaxAge|CacheLockPath|CacheMaxExpire|CacheMaxFileSize|CacheMinExpire|CacheMinFileSize|CacheNegotiatedDocs|CacheQuickHandler|CacheReadSize|CacheReadTime|CacheRoot|CacheSocache|CacheSocacheMaxSize|CacheSocacheMaxTime|CacheSocacheMinTime|CacheSocacheReadSize|CacheSocacheReadTime|CacheStaleOnError|CacheStoreExpired|CacheStoreNoStore|CacheStorePrivate|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|DeflateBufferSize|DeflateCompressionLevel|DeflateFilterNote|DeflateInflateLimitRequestBody|DeflateInflateRatioBurst|DeflateInflateRatioLimit|DeflateMemLevel|DeflateWindowSize|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|HeartbeatAddress|HeartbeatListen|HeartbeatMaxServers|HeartbeatStorage|HeartbeatStorage|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|IndexHeadInsert|IndexIgnore|IndexIgnoreReset|IndexOptions|IndexOrderDefault|IndexStyleSheet|InputSed|ISAPIAppendLogToErrors|ISAPIAppendLogToQuery|ISAPICacheFile|ISAPIFakeAsync|ISAPILogNotSupported|ISAPIReadAheadBuffer|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAPCacheEntries|LDAPCacheTTL|LDAPConnectionPoolTTL|LDAPConnectionTimeout|LDAPLibraryDebug|LDAPOpCacheEntries|LDAPOpCacheTTL|LDAPReferralHopLimit|LDAPReferrals|LDAPRetries|LDAPRetryDelay|LDAPSharedCacheFile|LDAPSharedCacheSize|LDAPTimeout|LDAPTrustedClientCert|LDAPTrustedGlobalCert|LDAPTrustedMode|LDAPVerifyServerCert|LimitInternalRecursion|LimitRequestBody|LimitRequestFields|LimitRequestFieldSize|LimitRequestLine|LimitXMLRequestBody|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|LuaHookAccessChecker|LuaHookAuthChecker|LuaHookCheckUserID|LuaHookFixups|LuaHookInsertFilter|LuaHookLog|LuaHookMapToStorage|LuaHookTranslateName|LuaHookTypeChecker|LuaInherit|LuaInputFilter|LuaMapHandler|LuaOutputFilter|LuaPackageCPath|LuaPackagePath|LuaQuickHandler|LuaRoot|LuaScope|MaxConnectionsPerChild|MaxKeepAliveRequests|MaxMemFree|MaxRangeOverlaps|MaxRangeReversals|MaxRanges|MaxRequestWorkers|MaxSpareServers|MaxSpareThreads|MaxThreads|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|ProxyAddHeaders|ProxyBadHeader|ProxyBlock|ProxyDomain|ProxyErrorOverride|ProxyExpressDBMFile|ProxyExpressDBMType|ProxyExpressEnable|ProxyFtpDirCharset|ProxyFtpEscapeWildcards|ProxyFtpListOnWildcard|ProxyHTMLBufSize|ProxyHTMLCharsetOut|ProxyHTMLDocType|ProxyHTMLEnable|ProxyHTMLEvents|ProxyHTMLExtended|ProxyHTMLFixups|ProxyHTMLInterp|ProxyHTMLLinks|ProxyHTMLMeta|ProxyHTMLStripComments|ProxyHTMLURLMap|ProxyIOBufferSize|ProxyMaxForwards|ProxyPass|ProxyPassInherit|ProxyPassInterpolateEnv|ProxyPassMatch|ProxyPassReverse|ProxyPassReverseCookieDomain|ProxyPassReverseCookiePath|ProxyPreserveHost|ProxyReceiveBufferSize|ProxyRemote|ProxyRemoteMatch|ProxyRequests|ProxySCGIInternalRedirect|ProxySCGISendfile|ProxySet|ProxySourceAddress|ProxyStatus|ProxyTimeout|ProxyVia|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIPHeader|RemoteIPInternalProxy|RemoteIPInternalProxyList|RemoteIPProxiesHeader|RemoteIPTrustedProxy|RemoteIPTrustedProxyList|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|RewriteBase|RewriteCond|RewriteEngine|RewriteMap|RewriteOptions|RewriteRule|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script|ScriptAlias|ScriptAliasMatch|ScriptInterpreterSource|ScriptLog|ScriptLogBuffer|ScriptLogLength|ScriptSock|SecureListen|SeeRequestTail|SendBufferSize|ServerAdmin|ServerAlias|ServerLimit|ServerName|ServerPath|ServerRoot|ServerSignature|ServerTokens|Session|SessionCookieName|SessionCookieName2|SessionCookieRemove|SessionCryptoCipher|SessionCryptoDriver|SessionCryptoPassphrase|SessionCryptoPassphraseFile|SessionDBDCookieName|SessionDBDCookieName2|SessionDBDCookieRemove|SessionDBDDeleteLabel|SessionDBDInsertLabel|SessionDBDPerUser|SessionDBDSelectLabel|SessionDBDUpdateLabel|SessionEnv|SessionExclude|SessionHeader|SessionInclude|SessionMaxAge|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSLCACertificateFile|SSLCACertificatePath|SSLCADNRequestFile|SSLCADNRequestPath|SSLCARevocationCheck|SSLCARevocationFile|SSLCARevocationPath|SSLCertificateChainFile|SSLCertificateFile|SSLCertificateKeyFile|SSLCipherSuite|SSLCompression|SSLCryptoDevice|SSLEngine|SSLFIPS|SSLHonorCipherOrder|SSLInsecureRenegotiation|SSLOCSPDefaultResponder|SSLOCSPEnable|SSLOCSPOverrideResponder|SSLOCSPResponderTimeout|SSLOCSPResponseMaxAge|SSLOCSPResponseTimeSkew|SSLOCSPUseRequestNonce|SSLOpenSSLConfCmd|SSLOptions|SSLPassPhraseDialog|SSLProtocol|SSLProxyCACertificateFile|SSLProxyCACertificatePath|SSLProxyCARevocationCheck|SSLProxyCARevocationFile|SSLProxyCARevocationPath|SSLProxyCheckPeerCN|SSLProxyCheckPeerExpire|SSLProxyCheckPeerName|SSLProxyCipherSuite|SSLProxyEngine|SSLProxyMachineCertificateChainFile|SSLProxyMachineCertificateFile|SSLProxyMachineCertificatePath|SSLProxyProtocol|SSLProxyVerify|SSLProxyVerifyDepth|SSLRandomSeed|SSLRenegBufferSize|SSLRequire|SSLRequireSSL|SSLSessionCache|SSLSessionCacheTimeout|SSLSessionTicketKeyFile|SSLSRPUnknownUserSeed|SSLSRPVerifierFile|SSLStaplingCache|SSLStaplingErrorCacheTimeout|SSLStaplingFakeTryLater|SSLStaplingForceURL|SSLStaplingResponderTimeout|SSLStaplingResponseMaxAge|SSLStaplingResponseTimeSkew|SSLStaplingReturnResponderErrors|SSLStaplingStandardCacheTimeout|SSLStrictSNIVHostCheck|SSLUserName|SSLUseStapling|SSLVerifyClient|SSLVerifyDepth|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|VirtualDocumentRoot|VirtualDocumentRootIP|VirtualScriptAlias|VirtualScriptAliasIP|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'directive-block': {\n        pattern: /<\\/?\\b(?:AuthnProviderAlias|AuthzProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|RequireAll|RequireAny|RequireNone|VirtualHost)\\b *.*>/i,\n        inside: {\n          'directive-block': {\n            pattern: /^<\\/?\\w+/,\n            inside: {\n              punctuation: /^<\\/?/\n            },\n            alias: 'tag'\n          },\n          'directive-block-parameter': {\n            pattern: /.*[^>]/,\n            inside: {\n              punctuation: /:/,\n              string: {\n                pattern: /(\"|').*\\1/,\n                inside: {\n                  variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n                }\n              }\n            },\n            alias: 'attr-value'\n          },\n          punctuation: />/\n        },\n        alias: 'tag'\n      },\n      'directive-flags': {\n        pattern: /\\[(?:\\w,?)+\\]/,\n        alias: 'keyword'\n      },\n      string: {\n        pattern: /(\"|').*\\1/,\n        inside: {\n          variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n        }\n      },\n      variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n      regex: /\\^?.*\\$|\\^.*\\$?/\n    };\n  }\n};","nrTokens":0,"nrLines":57,"files":[{"filePath":"node_modules/reprism/es/languages/apacheconf.js","startLine":1,"endLine":57},{"filePath":"node_modules/reprism/lib/languages/apacheconf.js","startLine":1,"endLine":57}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ada',\n  init: function init(Prism) {\n    Prism.languages.ada = {\n      comment: /--.*/,\n      string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\n      number: [{\n        pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      }, {\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n      }],\n      'attr-name': /\\b'\\w+/i,\n      keyword: /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n      boolean: /\\b(?:true|false)\\b/i,\n      operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n      punctuation: /\\.\\.?|[,;():]/,\n      char: /'.'/,\n      variable: /\\b[a-z](?:[_a-z\\d])*\\b/i\n    };\n  }\n};","nrTokens":0,"nrLines":26,"files":[{"filePath":"node_modules/reprism/es/languages/ada.js","startLine":1,"endLine":26},{"filePath":"node_modules/reprism/lib/languages/ada.js","startLine":1,"endLine":26}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'actionscript',\n  init: function init(Prism) {\n    Prism.languages.actionscript = Prism.languages.extend('javascript', {\n      keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n      operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n    });\n    Prism.languages.actionscript['class-name'].alias = 'function';\n\n    if (Prism.languages.markup) {\n      Prism.languages.insertBefore('actionscript', 'string', {\n        xml: {\n          pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.markup\n          }\n        }\n      });\n    }\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/es/languages/actionscript.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/actionscript.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'abap',\n  init: function init(Prism) {\n    Prism.languages.abap = {\n      comment: /^\\*.*/m,\n      string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n      'string-template': {\n        pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n        lookbehind: true,\n        alias: 'string'\n      },\n      /* End Of Line comments should not interfere with strings when the\n      quote character occurs within them. We assume a string being highlighted\n      inside an EOL comment is more acceptable than the opposite.\n      */\n      'eol-comment': {\n        pattern: /(^|\\s)\".*/m,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      keyword: {\n        pattern: /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|SELECTOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n        lookbehind: true\n      },\n      /* Numbers can be only integers. Decimal or Hex appear only as strings */\n      number: /\\b\\d+\\b/,\n      /* Operators must always be surrounded by whitespace, they cannot be put\n      adjacent to operands.\n      */\n      operator: {\n        pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n        lookbehind: true\n      },\n      'string-operator': {\n        pattern: /(\\s)&&?(?=\\s)/,\n        lookbehind: true,\n        /* The official editor highlights */\n        alias: 'keyword'\n      },\n      'token-operator': [{\n        /* Special operators used to access structure components, class methods/attributes, etc. */\n        pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }, {\n        /* Special tokens used do delimit string templates */\n        pattern: /[|{}]/,\n        alias: 'punctuation'\n      }],\n      punctuation: /[,.:()]/\n    };\n  }\n};","nrTokens":0,"nrLines":58,"files":[{"filePath":"node_modules/reprism/es/languages/abap.js","startLine":1,"endLine":58},{"filePath":"node_modules/reprism/lib/languages/abap.js","startLine":1,"endLine":58}]}
{"cloneLines":"'use strict';\n\nvar _ = require('../');\n\nvar _2 = _interopRequireDefault(_);\n\nvar _markup = require('./snippets/markup');\n\nvar _markup2 = _interopRequireDefault(_markup);\n\nvar _css = require('./snippets/css');\n\nvar _css2 = _interopRequireDefault(_css);\n\nvar _clike = require('./snippets/clike');\n\nvar _clike2 = _interopRequireDefault(_clike);\n\nvar _javascript = require('./snippets/javascript');\n\nvar _javascript2 = _interopRequireDefault(_javascript);\n\nvar _elixir = require('./snippets/elixir');\n\nvar _elixir2 = _interopRequireDefault(_elixir);\n\nvar _ruby = require('./snippets/ruby');\n\nvar _ruby2 = _interopRequireDefault(_ruby);\n\nvar _jsx = require('../languages/jsx');\n\nvar _jsx2 = _interopRequireDefault(_jsx);\n\nvar _elixir3 = require('../languages/elixir');\n\nvar _elixir4 = _interopRequireDefault(_elixir3);\n\nvar _ruby3 = require('../languages/ruby');\n\nvar _ruby4 = _interopRequireDefault(_ruby3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _.loadLanguages)(_jsx2.default, _elixir4.default, _ruby4.default);\n\ndescribe('Prism', function () {\n  it('should export a global', function () {\n    expect(_2.default).toBeDefined();\n  });\n  it('should highlight markup', function () {\n    var res = (0, _.highlight)(_markup2.default, 'markup');\n    expect(res).toMatchSnapshot();\n  });\n  it('should highlight css', function () {\n    var res = (0, _.highlight)(_css2.default, 'css');\n    expect(res).toMatchSnapshot();\n  });\n  it('should highlight clike', function () {\n    var res = (0, _.highlight)(_clike2.default, 'clike');\n    expect(res).toMatchSnapshot();\n  });\n  it('should highlight javascript', function () {\n    var res = (0, _.highlight)(_javascript2.default, 'javascript');\n    expect(res).toMatchSnapshot();\n  });\n  it('should highlight jsx', function () {\n    var res = (0, _.highlight)(_javascript2.default, 'jsx');\n    expect(res).toMatchSnapshot();\n  });\n  it('should highlight elixir', function () {\n    var res = (0, _.highlight)(_elixir2.default, 'elixir');\n    expect(res).toMatchSnapshot();\n  });\n  it('should highlight ruby', function () {\n    var res = (0, _.highlight)(_ruby2.default, 'ruby');\n    expect(res).toMatchSnapshot();\n  });\n});","nrTokens":0,"nrLines":79,"files":[{"filePath":"node_modules/reprism/es/__tests__/index.test.js","startLine":1,"endLine":79},{"filePath":"node_modules/reprism/lib/__tests__/index.test.js","startLine":1,"endLine":79}]}
{"cloneLines":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./files\"","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/jscpd/dist/print/index.js","startLine":1,"endLine":6},{"filePath":"node_modules/@jscpd/finder/dist/validators/index.js","startLine":1,"endLine":6}]}
{"cloneLines":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./cli\"","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/jscpd/dist/init/index.js","startLine":1,"endLine":6},{"filePath":"node_modules/@jscpd/finder/dist/validators/index.js","startLine":1,"endLine":6}]}
{"cloneLines":", 'symbol');\n\t\tt.end();\n\t});\n\treturn;\n}\n\nvar hasSymbolToStringTag = require('../../shams');\n\ntest('polyfilled Symbols', function (t) {\n\t/* eslint-disable global-require */\n\tt.equal(hasSymbolToStringTag(), false, 'hasSymbolToStringTag is false before polyfilling');\n\trequire('core-js/fn/symbol'","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/has-tostringtag/test/shams/core-js.js","startLine":8,"endLine":19},{"filePath":"node_modules/has-tostringtag/test/shams/get-own-property-symbols.js","startLine":8,"endLine":20}]}
{"cloneLines":"'use strict';\n\nvar test = require('tape');\n\nif (typeof Symbol === 'function' && typeof Symbol() === 'symbol') {\n\ttest('has native Symbol support', function (t) {\n\t\tt.equal(typeof Symbol, 'function');\n\t\tt.equal(typeof Symbol(), 'symbol');\n\t\tt.end();\n\t});\n\treturn;\n}\n\nvar hasSymbols","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/has-symbols/test/shams/get-own-property-symbols.js","startLine":1,"endLine":14},{"filePath":"node_modules/has-tostringtag/test/shams/get-own-property-symbols.js","startLine":1,"endLine":14}]}
{"cloneLines":"'use strict';\n\nvar test = require('tape');\n\nif (typeof Symbol === 'function' && typeof Symbol() === 'symbol') {\n\ttest('has native Symbol support', function (t) {\n\t\tt.equal(typeof Symbol, 'function');\n\t\tt.equal(typeof Symbol(), 'symbol');\n\t\tt.end();\n\t});\n\treturn;\n}\n\nvar hasSymbols = require('../../shams');\n\ntest('polyfilled Symbols', function (t) {\n\t/* eslint-disable global-require */\n\tt.equal(hasSymbols(), false, 'hasSymbols is false before polyfilling');\n\trequire('core-js/fn/symbol'","nrTokens":0,"nrLines":19,"files":[{"filePath":"node_modules/has-symbols/test/shams/core-js.js","startLine":1,"endLine":19},{"filePath":"node_modules/has-tostringtag/test/shams/get-own-property-symbols.js","startLine":1,"endLine":20}]}
{"cloneLines":"(pth, options.mode)\n    } catch (error) {\n      if (error.code === 'EPERM') {\n        throw error\n      }\n\n      if (error.code === 'ENOENT') {\n        if (path.dirname(pth) === pth) {\n          throw permissionError(pth)\n        }\n\n        if (error.message.includes('null bytes')) {\n          throw error\n        }\n\n        make","nrTokens":0,"nrLines":16,"files":[{"filePath":"node_modules/fs-extra/lib/mkdirs/make-dir.js","startLine":109,"endLine":124},{"filePath":"node_modules/fs-extra/lib/mkdirs/make-dir.js","startLine":59,"endLine":74}]}
{"cloneLines":"{\n        return fs.lstat(srcpath, (err) => {\n          if (err) {\n            err.message = err.message.replace('lstat', 'ensureSymlink')\n            return callback(err)\n          }\n          return callback(null, {\n            toCwd: srcpath,\n            toDst: path","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/fs-extra/lib/ensure/symlink-paths.js","startLine":51,"endLine":59},{"filePath":"node_modules/fs-extra/lib/ensure/symlink-paths.js","startLine":30,"endLine":38}]}
{"cloneLines":"}\n  opts = opts || {}\n\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  stat","nrTokens":0,"nrLines":13,"files":[{"filePath":"node_modules/fs-extra/lib/copy/copy.js","startLine":18,"endLine":30},{"filePath":"node_modules/fs-extra/lib/copy-sync/copy-sync.js","startLine":12,"endLine":24}]}
{"cloneLines":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDirentFromStats = void 0;\nclass DirentFromStats {\n    constructor(name, stats) {\n        this.name = name;\n        this.isBlockDevice = stats.isBlockDevice.bind(stats);\n        this.isCharacterDevice = stats.isCharacterDevice.bind(stats);\n        this.isDirectory = stats.isDirectory.bind(stats);\n        this.isFIFO = stats.isFIFO.bind(stats);\n        this.isFile = stats.isFile.bind(stats);\n        this.isSocket = stats.isSocket.bind(stats);\n        this.isSymbolicLink = stats.isSymbolicLink.bind(stats);\n    }\n}\nfunction createDirentFromStats(name, stats) {\n    return new DirentFromStats(name, stats);\n}\nexports.createDirentFromStats = createDirentFromStats;","nrTokens":0,"nrLines":19,"files":[{"filePath":"node_modules/fast-glob/out/utils/fs.js","startLine":1,"endLine":19},{"filePath":"node_modules/@nodelib/fs.scandir/out/utils/fs.js","startLine":1,"endLine":19}]}
{"cloneLines":";\n    }\n    api(root, task, options) {\n        if (task.dynamic) {\n            return this._reader.dynamic(root, options);\n        }\n        return this._reader.static(task.patterns, options);\n    }\n}\nexports.default = ProviderStream","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/fast-glob/out/providers/stream.js","startLine":22,"endLine":31},{"filePath":"node_modules/fast-glob/out/providers/sync.js","startLine":14,"endLine":23}]}
{"cloneLines":");\n    }\n    api(root, task, options) {\n        if (task.dynamic) {\n            return this._reader.dynamic(root, options);\n        }\n        return this._reader.static(task.patterns, options);\n    }\n}\nexports.default = ProviderAsync","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/fast-glob/out/providers/async.js","startLine":14,"endLine":23},{"filePath":"node_modules/fast-glob/out/providers/sync.js","startLine":14,"endLine":23}]}
{"cloneLines":"/*\nThe MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\n'use strict';\n\nvar os = require('os');\nvar hasFlag = require('./has-flag.js');\n\nvar env = process.env;\n\nvar forceColor = void 0;\nif (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {\n  forceColor = false;\n} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true')\n           || hasFlag('color=always')) {\n  forceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n  forceColor = env.FORCE_COLOR.length === 0\n    || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n  if (level === 0) {\n    return false;\n  }\n\n  return {\n    level: level,\n    hasBasic: true,\n    has256: level >= 2,\n    has16m: level >= 3,\n  };\n}\n\nfunction supportsColor(stream) {\n  if (forceColor === false) {\n    return 0;\n  }\n\n  if (hasFlag('color=16m') || hasFlag('color=full')\n      || hasFlag('color=truecolor')) {\n    return 3;\n  }\n\n  if (hasFlag('color=256')) {\n    return 2;\n  }\n\n  if (stream && !stream.isTTY && forceColor !== true) {\n    return 0;\n  }\n\n  var min = forceColor ? 1 : 0;\n\n  if (process.platform === 'win32') {\n    // Node.js 7.5.0 is the first version of Node.js to include a patch to\n    // libuv that enables 256 color output on Windows. Anything earlier and it\n    // won't work. However, here we target Node.js 8 at minimum as it is an LTS\n    // release, and Node.js 7 is not. Windows 10 build 10586 is the first\n    // Windows release that supports 256 colors. Windows 10 build 14931 is the\n    // first release that supports 16m/TrueColor.\n    var osRelease = os.release().split('.');\n    if (Number(process.versions.node.split('.')[0]) >= 8\n        && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\n      return Number(osRelease[2]) >= 14931 ? 3 : 2;\n    }\n\n    return 1;\n  }\n\n  if ('CI' in env) {\n    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(function(sign) {\n      return sign in env;\n    }) || env.CI_NAME === 'codeship') {\n      return 1;\n    }\n\n    return min;\n  }\n\n  if ('TEAMCITY_VERSION' in env) {\n    return (/^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0\n    );\n  }\n\n  if ('TERM_PROGRAM' in env) {\n    var version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n    switch (env.TERM_PROGRAM) {\n      case 'iTerm.app':\n        return version >= 3 ? 3 : 2;\n      case 'Hyper':\n        return 3;\n      case 'Apple_Terminal':\n        return 2;\n      // No default\n    }\n  }\n\n  if (/-256(color)?$/i.test(env.TERM)) {\n    return 2;\n  }\n\n  if (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n    return 1;\n  }\n\n  if ('COLORTERM' in env) {\n    return 1;\n  }\n\n  if (env.TERM === 'dumb') {\n    return min;\n  }\n\n  return min;\n}\n\nfunction getSupportLevel(stream) {\n  var level = supportsColor(stream);\n  return translateLevel(level);\n}\n\nmodule.exports = {\n  supportsColor: getSupportLevel,\n  stdout: getSupportLevel(process.stdout),\n  stderr: getSupportLevel(process.stderr),\n};","nrTokens":0,"nrLines":151,"files":[{"filePath":"node_modules/colors/lib/system/supports-colors.js","startLine":1,"endLine":151},{"filePath":"node_modules/@colors/colors/lib/system/supports-colors.js","startLine":1,"endLine":151}]}
{"cloneLines":"/*\nMIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n'use strict';\n\nmodule.exports = function(flag, argv) {\n  argv = argv || process.argv;\n\n  var terminatorPos = argv.indexOf('--');\n  var prefix = /^-{1,2}/.test(flag) ? '' : '--';\n  var pos = argv.indexOf(prefix + flag);\n\n  return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};","nrTokens":0,"nrLines":35,"files":[{"filePath":"node_modules/colors/lib/system/has-flag.js","startLine":1,"endLine":35},{"filePath":"node_modules/@colors/colors/lib/system/has-flag.js","startLine":1,"endLine":35}]}
{"cloneLines":"module['exports'] = function(colors) {\n  var available = ['underline', 'inverse', 'grey', 'yellow', 'red', 'green',\n    'blue', 'white', 'cyan', 'magenta', 'brightYellow', 'brightRed',\n    'brightGreen', 'brightBlue', 'brightWhite', 'brightCyan', 'brightMagenta'];\n  return function(letter, i, exploded) {\n    return letter === ' ' ? letter :\n      colors[\n          available[Math.round(Math.random() * (available.length - 2))]\n      ](letter);\n  };\n};","nrTokens":0,"nrLines":11,"files":[{"filePath":"node_modules/colors/lib/maps/random.js","startLine":1,"endLine":11},{"filePath":"node_modules/@colors/colors/lib/maps/random.js","startLine":1,"endLine":11}]}
{"cloneLines":"module['exports'] = function(colors) {\n  // RoY G BiV\n  var rainbowColors = ['red', 'yellow', 'green', 'blue', 'magenta'];\n  return function(letter, i, exploded) {\n    if (letter === ' ') {\n      return letter;\n    } else {\n      return colors[rainbowColors[i++ % rainbowColors.length]](letter);\n    }\n  };\n};","nrTokens":0,"nrLines":11,"files":[{"filePath":"node_modules/colors/lib/maps/rainbow.js","startLine":1,"endLine":11},{"filePath":"node_modules/@colors/colors/lib/maps/rainbow.js","startLine":1,"endLine":11}]}
{"cloneLines":"module['exports'] = function(colors) {\n  return function(letter, i, exploded) {\n    if (letter === ' ') return letter;\n    switch (i%3) {\n      case 0: return colors.red(letter);\n      case 1: return colors.white(letter);\n      case 2: return colors.blue(letter);\n    }\n  };\n};","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/colors/lib/maps/america.js","startLine":1,"endLine":10},{"filePath":"node_modules/@colors/colors/lib/maps/america.js","startLine":1,"endLine":10}]}
{"cloneLines":"// please no\nmodule['exports'] = function zalgo(text, options) {\n  text = text || '   he is here   ';\n  var soul = {\n    'up': [\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??',\n    ],\n    'down': [\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n    ],\n    'mid': [\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', '??',\n      '??', '??', '??', '??',\n      '??', '??', ' ??',\n    ],\n  };\n  var all = [].concat(soul.up, soul.down, soul.mid);\n\n  function randomNumber(range) {\n    var r = Math.floor(Math.random() * range);\n    return r;\n  }\n\n  function isChar(character) {\n    var bool = false;\n    all.filter(function(i) {\n      bool = (i === character);\n    });\n    return bool;\n  }\n\n\n  function heComes(text, options) {\n    var result = '';\n    var counts;\n    var l;\n    options = options || {};\n    options['up'] =\n      typeof options['up'] !== 'undefined' ? options['up'] : true;\n    options['mid'] =\n      typeof options['mid'] !== 'undefined' ? options['mid'] : true;\n    options['down'] =\n      typeof options['down'] !== 'undefined' ? options['down'] : true;\n    options['size'] =\n      typeof options['size'] !== 'undefined' ? options['size'] : 'maxi';\n    text = text.split('');\n    for (l in text) {\n      if (isChar(l)) {\n        continue;\n      }\n      result = result + text[l];\n      counts = {'up': 0, 'down': 0, 'mid': 0};\n      switch (options.size) {\n        case 'mini':\n          counts.up = randomNumber(8);\n          counts.mid = randomNumber(2);\n          counts.down = randomNumber(8);\n          break;\n        case 'maxi':\n          counts.up = randomNumber(16) + 3;\n          counts.mid = randomNumber(4) + 1;\n          counts.down = randomNumber(64) + 3;\n          break;\n        default:\n          counts.up = randomNumber(8) + 1;\n          counts.mid = randomNumber(6) / 2;\n          counts.down = randomNumber(8) + 1;\n          break;\n      }\n\n      var arr = ['up', 'mid', 'down'];\n      for (var d in arr) {\n        var index = arr[d];\n        for (var i = 0; i <= counts[index]; i++) {\n          if (options[index]) {\n            result = result + soul[index][randomNumber(soul[index].length)];\n          }\n        }\n      }\n    }\n    return result;\n  }\n  // don't summon him\n  return heComes(text, options);\n};","nrTokens":0,"nrLines":109,"files":[{"filePath":"node_modules/colors/lib/custom/zalgo.js","startLine":1,"endLine":109},{"filePath":"node_modules/@colors/colors/lib/custom/zalgo.js","startLine":1,"endLine":109}]}
{"cloneLines":"module['exports'] = function runTheTrap(text, options) {\n  var result = '';\n  text = text || 'Run the trap, drop the bass';\n  text = text.split('');\n  var trap = {\n    a: ['\\u0040', '\\u0104', '\\u023a', '\\u0245', '\\u0394', '\\u039b', '\\u0414'],\n    b: ['\\u00df', '\\u0181', '\\u0243', '\\u026e', '\\u03b2', '\\u0e3f'],\n    c: ['\\u00a9', '\\u023b', '\\u03fe'],\n    d: ['\\u00d0', '\\u018a', '\\u0500', '\\u0501', '\\u0502', '\\u0503'],\n    e: ['\\u00cb', '\\u0115', '\\u018e', '\\u0258', '\\u03a3', '\\u03be', '\\u04bc',\n      '\\u0a6c'],\n    f: ['\\u04fa'],\n    g: ['\\u0262'],\n    h: ['\\u0126', '\\u0195', '\\u04a2', '\\u04ba', '\\u04c7', '\\u050a'],\n    i: ['\\u0f0f'],\n    j: ['\\u0134'],\n    k: ['\\u0138', '\\u04a0', '\\u04c3', '\\u051e'],\n    l: ['\\u0139'],\n    m: ['\\u028d', '\\u04cd', '\\u04ce', '\\u0520', '\\u0521', '\\u0d69'],\n    n: ['\\u00d1', '\\u014b', '\\u019d', '\\u0376', '\\u03a0', '\\u048a'],\n    o: ['\\u00d8', '\\u00f5', '\\u00f8', '\\u01fe', '\\u0298', '\\u047a', '\\u05dd',\n      '\\u06dd', '\\u0e4f'],\n    p: ['\\u01f7', '\\u048e'],\n    q: ['\\u09cd'],\n    r: ['\\u00ae', '\\u01a6', '\\u0210', '\\u024c', '\\u0280', '\\u042f'],\n    s: ['\\u00a7', '\\u03de', '\\u03df', '\\u03e8'],\n    t: ['\\u0141', '\\u0166', '\\u0373'],\n    u: ['\\u01b1', '\\u054d'],\n    v: ['\\u05d8'],\n    w: ['\\u0428', '\\u0460', '\\u047c', '\\u0d70'],\n    x: ['\\u04b2', '\\u04fe', '\\u04fc', '\\u04fd'],\n    y: ['\\u00a5', '\\u04b0', '\\u04cb'],\n    z: ['\\u01b5', '\\u0240'],\n  };\n  text.forEach(function(c) {\n    c = c.toLowerCase();\n    var chars = trap[c] || [' '];\n    var rand = Math.floor(Math.random() * chars.length);\n    if (typeof trap[c] !== 'undefined') {\n      result += trap[c][rand];\n    } else {\n      result += c;\n    }\n  });\n  return result;\n};","nrTokens":0,"nrLines":46,"files":[{"filePath":"node_modules/colors/lib/custom/trap.js","startLine":1,"endLine":46},{"filePath":"node_modules/@colors/colors/lib/custom/trap.js","startLine":1,"endLine":46}]}
{"cloneLines":"export interface BlamedLine {\n    rev: string;\n    author: string;\n    date: string;\n    line: string;\n}\nexport interface BlameResult {\n    [path: string]: {\n        [line: string]: BlamedLine;\n    };\n}","nrTokens":0,"nrLines":11,"files":[{"filePath":"node_modules/blamer/build/main/blame-result.interface.d.ts","startLine":1,"endLine":11},{"filePath":"node_modules/blamer/build/module/blame-result.interface.d.ts","startLine":1,"endLine":11}]}
{"cloneLines":"(path, optionsOrSettingsOrCallback, callback) {\n    if (typeof optionsOrSettingsOrCallback === 'function') {\n        async.read(path, getSettings(), optionsOrSettingsOrCallback);\n        return;\n    }\n    async.read(path, getSettings(optionsOrSettingsOrCallback), callback);\n}\nexports.scandir","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/@nodelib/fs.scandir/out/index.js","startLine":8,"endLine":15},{"filePath":"node_modules/@nodelib/fs.stat/out/index.js","startLine":8,"endLine":15}]}
{"cloneLines":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@jscpd/tokenizer/dist/index.js","startLine":1,"endLine":6},{"filePath":"node_modules/@jscpd/finder/dist/validators/index.js","startLine":1,"endLine":6}]}
{"cloneLines":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./in-files-detector\"","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@jscpd/finder/dist/index.js","startLine":1,"endLine":6},{"filePath":"node_modules/@jscpd/finder/dist/validators/index.js","startLine":1,"endLine":6}]}
{"cloneLines":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validators_1","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/@jscpd/core/dist/rabin-karp.js","startLine":1,"endLine":12},{"filePath":"node_modules/@jscpd/finder/dist/hooks/blamer.js","startLine":1,"endLine":12}]}
{"cloneLines":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./detector\"","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@jscpd/core/dist/index.js","startLine":1,"endLine":6},{"filePath":"node_modules/@jscpd/finder/dist/validators/index.js","startLine":1,"endLine":6}]}
{"cloneLines":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst rabin_karp_1","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/@jscpd/core/dist/detector.js","startLine":1,"endLine":12},{"filePath":"node_modules/@jscpd/finder/dist/hooks/blamer.js","startLine":1,"endLine":12}]}
{"cloneLines":"{\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red',\n})","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/@colors/colors/examples/normal-usage.js","startLine":42,"endLine":53},{"filePath":"node_modules/@colors/colors/themes/generic-logging.js","startLine":1,"endLine":12}]}
{"cloneLines":",\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red',\n});\n\n// outputs red text\nconsole.log('this is an error'","nrTokens":0,"nrLines":13,"files":[{"filePath":"node_modules/@colors/colors/examples/normal-usage.js","startLine":44,"endLine":56},{"filePath":"node_modules/@colors/colors/examples/safe-string.js","startLine":43,"endLine":55}]}
{"cloneLines":";\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/@babel/helper-validator-identifier/lib/identifier.js","startLine":39,"endLine":44},{"filePath":"node_modules/@babel/helper-validator-identifier/lib/identifier.js","startLine":27,"endLine":32}]}
{"cloneLines":"= {\n  'a': [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'v',\n    'z',\n  ]\n}","nrTokens":0,"nrLines":24,"files":[{"filePath":"docs/duplication-tests/ts-with-results/src/file1.ts","startLine":1,"endLine":24},{"filePath":"docs/duplication-tests/ts-with-results/src/file2.ts","startLine":1,"endLine":23}]}
{"cloneLines":") {\n    for (let i = parents.length - 2; i >= 0; i--) {\n      if (isScope(parents[i])) {\n        setLocal(parents[i], node.id.name);\n        return;\n      }\n    }\n  },","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/with/src/globals.ts","startLine":115,"endLine":122},{"filePath":"node_modules/with/src/globals.ts","startLine":80,"endLine":113}]}
{"cloneLines":");\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/with/lib/reference.js","startLine":4,"endLine":9},{"filePath":"node_modules/blamer/build/main/index.js","startLine":8,"endLine":13}]}
{"cloneLines":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/with/lib/index.js","startLine":1,"endLine":21},{"filePath":"node_modules/blamer/build/main/index.js","startLine":1,"endLine":21}]}
{"cloneLines":";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/with/lib/index.js","startLine":20,"endLine":25},{"filePath":"node_modules/blamer/build/main/vcs/git.js","startLine":1,"endLine":6}]}
{"cloneLines":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert_never_1","nrTokens":0,"nrLines":25,"files":[{"filePath":"node_modules/with/lib/globals.js","startLine":1,"endLine":25},{"filePath":"node_modules/blamer/build/main/index.js","startLine":1,"endLine":25}]}
{"cloneLines":"(node, _state, parents) {\n        for (let i = parents.length - 2; i >= 0; i--) {\n            if (isScope(parents[i])) {\n                setLocal(parents[i], node.id.name);\n                return;\n            }\n        }\n    },","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/with/lib/globals.js","startLine":116,"endLine":123},{"filePath":"node_modules/with/lib/globals.js","startLine":84,"endLine":114}]}
{"cloneLines":"()\n}\n\nvar time = Date.now() - start\nconsole.log('Total time', time)\nconsole.log('Total iterations', max)\nconsole.log('Iteration/s', max / time * 1000)","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/reusify/benchmarks/createNoCodeFunction.js","startLine":24,"endLine":30},{"filePath":"node_modules/reusify/benchmarks/reuseNoCodeFunction.js","startLine":32,"endLine":38}]}
{"cloneLines":"}, function (err, res) {\n        t.ifError(err);\n        t.equal(res, path.join(__dirname, 'shadowed_core/node_modules/util/index.js'));\n    });\n});\n\ntest('shadowed core modules return shadow with `includeCoreModules: false` [sync]'","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/shadowed_core.js","startLine":42,"endLine":48},{"filePath":"node_modules/resolve/test/shadowed_core.js","startLine":25,"endLine":31}]}
{"cloneLines":"try {\n            resolve.sync('./missing_main', { basedir: resolverDir });\n            t.fail('require.resolve did not fail');\n        } catch (err) {\n            t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n        }\n    }","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/resolver_sync.js","startLine":342,"endLine":348},{"filePath":"node_modules/resolve/test/resolver_sync.js","startLine":335,"endLine":341}]}
{"cloneLines":", { basedir: resolverDir });\n        t.fail('require.resolve did not fail');\n    } catch (err) {\n        t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n    }\n    if (requireResolveSupportsPaths) {\n        try {\n            resolve.sync('./null_main'","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/resolve/test/resolver_sync.js","startLine":357,"endLine":364},{"filePath":"node_modules/resolve/test/resolver_sync.js","startLine":336,"endLine":343}]}
{"cloneLines":"try {\n            resolve.sync('./null_main', { basedir: resolverDir });\n            t.fail('require.resolve did not fail');\n        } catch (err) {\n            t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n        }\n    }","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/resolver_sync.js","startLine":363,"endLine":369},{"filePath":"node_modules/resolve/test/resolver_sync.js","startLine":356,"endLine":362}]}
{"cloneLines":", { basedir: resolverDir });\n            t.fail('require.resolve did not fail');\n        } catch (err) {\n            t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n        }\n    }\n\n    t.end();\n});\n\ntest('main: false'","nrTokens":0,"nrLines":11,"files":[{"filePath":"node_modules/resolve/test/resolver_sync.js","startLine":364,"endLine":374},{"filePath":"node_modules/resolve/test/resolver_sync.js","startLine":343,"endLine":353}]}
{"cloneLines":");\n    }\n    t.end();\n});\n\ntest('non-string \"main\" field in package.json', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n    try {\n        var result = resolve.sync('./invalid_main', { basedir: dir });\n        t.equal(result, undefined, 'result should not exist');\n        t.fail('should not get here');\n    } catch (err) {\n        t.ok(err, 'errors on non-string main');\n        t.equal(err.message, 'package ???invalid_main??? `main` must be a string');\n        t.equal(err.code, 'INVALID_PACKAGE_MAIN');\n    }\n    t.end();\n});\n\ntest('browser field in package.json'","nrTokens":0,"nrLines":20,"files":[{"filePath":"node_modules/resolve/test/resolver_sync.js","startLine":581,"endLine":600},{"filePath":"node_modules/resolve/test/resolver_sync.js","startLine":567,"endLine":586}]}
{"cloneLines":", { basedir: dir }, function (err, res, pkg) {\n        if (err) t.fail(err);\n        t.equal(res, path.join(dir, 'foo.js'));\n        t.equal(pkg && pkg.name, 'resolve');\n    });\n\n    resolve('./foo'","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":21,"endLine":27},{"filePath":"node_modules/resolve/test/resolver.js","startLine":15,"endLine":21}]}
{"cloneLines":");\n\n    resolve('foo', { basedir: dir + '/bar' }, function (err, res, pkg) {\n        if (err) t.fail(err);\n        t.equal(res, path.join(dir, 'bar/node_modules/foo/index.js'));\n        t.equal(pkg, undefined);\n    });\n\n    resolve('foo', { basedir: dir + '/bar',","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":63,"endLine":71},{"filePath":"node_modules/resolve/test/resolver.js","startLine":57,"endLine":65}]}
{"cloneLines":"}, function (err, res, pkg) {\n        if (err) t.fail(err);\n        t.equal(res, path.join(dir, 'baz/quux.js'));\n        t.equal(pkg.main, 'quux.js');\n    });\n}","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":88,"endLine":93},{"filePath":"node_modules/resolve/test/resolver.js","startLine":82,"endLine":88}]}
{"cloneLines":"}, function (err, res, pkg) {\n        if (err) t.fail(err);\n        t.equal(res, path.join(dir, 'garply/lib/index.js'));\n        t.equal(pkg.main, './lib');\n    });\n\n    resolve('tiv'","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":117,"endLine":123},{"filePath":"node_modules/resolve/test/resolver.js","startLine":111,"endLine":117}]}
{"cloneLines":"}, function (err, res, pkg) {\n        if (err) t.fail(err);\n        t.equal(res, path.join(dir, 'tiv/index.js'));\n        t.equal(pkg, undefined);\n    });\n\n    resolve('tiv', { basedir: dir + '/garply'","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":135,"endLine":141},{"filePath":"node_modules/resolve/test/resolver.js","startLine":123,"endLine":129}]}
{"cloneLines":"}, function (err, res, pkg) {\n        if (err) t.fail(err);\n        t.equal(res, path.join(dir, 'grux/index.js'));\n        t.equal(pkg, undefined);\n    });\n\n    resolve('grux'","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":147,"endLine":153},{"filePath":"node_modules/resolve/test/resolver.js","startLine":99,"endLine":105}]}
{"cloneLines":"}, function (err, res, pkg) {\n        if (err) t.fail(err);\n        t.equal(res, path.join(dir, 'garply/lib/index.js'));\n        t.equal(pkg.main, './lib');\n    });\n\n    resolve('garply'","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":159,"endLine":165},{"filePath":"node_modules/resolve/test/resolver.js","startLine":111,"endLine":117}]}
{"cloneLines":"} }, function (err, res, pkg) {\n        if (err) t.fail(err);\n        t.equal(res, path.join(dir, 'garply/lib/index.js'));\n        t.equal(pkg.main, './lib');\n    });\n}","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":165,"endLine":170},{"filePath":"node_modules/resolve/test/resolver.js","startLine":117,"endLine":117}]}
{"cloneLines":"}, function (err, res) {\n        if (err) t.fail(err);\n        t.equal(res, path.join(dir, 'cup.coffee'));\n    });\n\n    resolve('./cup'","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":203,"endLine":208},{"filePath":"node_modules/resolve/test/resolver.js","startLine":198,"endLine":203}]}
{"cloneLines":"var resolverDir = path.join(__dirname, 'resolver');\n\n    var exactIterator = function (x, start, getPackageCandidates, opts) {\n        return [path.join(resolverDir, x)];\n    };\n\n    resolve","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":268,"endLine":274},{"filePath":"node_modules/resolve/test/resolver_sync.js","startLine":279,"endLine":285}]}
{"cloneLines":") }, function (err, res, pkg) {\n        if (err) t.fail(err);\n        t.equal(res, path.join(dir, 'same_names/foo/index.js'));\n    });\n\n    resolve","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":378,"endLine":383},{"filePath":"node_modules/resolve/test/resolver.js","startLine":367,"endLine":371}]}
{"cloneLines":", { basedir: path.join(dir, 'same_names/foo') }, function (err, res, pkg) {\n        if (err) t.fail(err);\n        t.equal(res, path.join(dir, 'same_names/foo/index.js'));\n    });\n});\n\ntest('async: #121 - treating an existing file as a dir when no basedir'","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":383,"endLine":389},{"filePath":"node_modules/resolve/test/resolver.js","startLine":378,"endLine":373}]}
{"cloneLines":");\n    });\n});\n\ntest('non-string \"main\" field in package.json', function (t) {\n    t.plan(5);\n\n    var dir = path.join(__dirname, 'resolver');\n    resolve('./invalid_main', { basedir: dir }, function (err, res, pkg) {\n        t.ok(err, 'errors on non-string main');\n        t.equal(err.message, 'package ???invalid_main??? `main` must be a string');\n        t.equal(err.code, 'INVALID_PACKAGE_MAIN');\n        t.equal(res, undefined, 'res is undefined');\n        t.equal(pkg, undefined, 'pkg is undefined');\n    });\n});\n\ntest('browser field in package.json'","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":465,"endLine":482},{"filePath":"node_modules/resolve/test/resolver.js","startLine":452,"endLine":469}]}
{"cloneLines":"(\n        './browser_field',\n        {\n            basedir: dir,\n            packageFilter: function packageFilter(pkg) {\n                if (pkg.browser) {\n                    pkg.main = pkg.browser; // eslint-disable-line no-param-reassign\n                    delete pkg.browser; // eslint-disable-line no-param-reassign\n                }\n                return pkg;\n            }\n        },","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/resolve/test/resolver.js","startLine":486,"endLine":497},{"filePath":"node_modules/resolve/test/resolver_sync.js","startLine":602,"endLine":611}]}
{"cloneLines":", {\n        paths: [\n            path.join(__dirname, '/node_path/x'),\n            path.join(__dirname, '/node_path/y')\n        ],\n        basedir: __dirname,\n        isDirectory: isDir\n    }, function (err, res) {\n        t.error(err);\n        t.equal(res, path.join(__dirname, '/node_path/y/bbb/index.js'","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/resolve/test/node_path.js","startLine":34,"endLine":43},{"filePath":"node_modules/resolve/test/node_path.js","startLine":22,"endLine":31}]}
{"cloneLines":", {\n        paths: [\n            path.join(__dirname, '/node_path/x'),\n            path.join(__dirname, '/node_path/y')\n        ],\n        basedir: __dirname,\n        isDirectory: isDir\n    }, function (err, res) {\n        t.error(err);\n        t.equal(res, path.join(__dirname, '/node_path/x/ccc/index.js'","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/resolve/test/node_path.js","startLine":46,"endLine":55},{"filePath":"node_modules/resolve/test/node_path.js","startLine":22,"endLine":31}]}
{"cloneLines":"];\n        var dirs = nodeModulesPaths(start, { paths: paths, moduleDirectory: moduleDirectories });\n\n        t.equal(dirs.indexOf(path.resolve(start)) > -1, true, 'should contain start dir');\n\n        t.end();\n    });\n}","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/resolve/test/node-modules-paths.js","startLine":136,"endLine":143},{"filePath":"node_modules/resolve/test/node-modules-paths.js","startLine":125,"endLine":133}]}
{"cloneLines":")] = true;\n\n    function opts(basedir) {\n        return {\n            basedir: path.resolve(basedir),\n            isFile: function (file) {\n                return Object.prototype.hasOwnProperty.call(files, path.resolve(file));\n            },\n            isDirectory: function (dir) {\n                return !!dirs[path.resolve(dir)];\n            },\n            readFileSync: function (file) {\n                return files[path.resolve(file)];\n            },\n            realpathSync: function (file) {\n                return file;\n            }\n        };\n    }\n\n    t.equal(\n        resolve.sync('bar'","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/resolve/test/mock_sync.js","startLine":62,"endLine":83},{"filePath":"node_modules/resolve/test/mock_sync.js","startLine":12,"endLine":33}]}
{"cloneLines":"basedir: path.resolve(basedir),\n            isFile: function (file) {\n                return Object.prototype.hasOwnProperty.call(files, path.resolve(file));\n            },\n            isDirectory: function (dir) {\n                return !!dirs[path.resolve(dir)];\n            },\n            readFileSync: function (file) {\n                return files[path.resolve(file)];\n            },\n            realpathSync: function (file) {\n                var","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/resolve/test/mock_sync.js","startLine":102,"endLine":113},{"filePath":"node_modules/resolve/test/mock_sync.js","startLine":16,"endLine":27}]}
{"cloneLines":") {\n        return {\n            basedir: path.resolve(basedir),\n            isFile: function (file) {\n                return Object.prototype.hasOwnProperty.call(files, path.resolve(file));\n            },\n            isDirectory: function (dir) {\n                return !!dirs[path.resolve(dir)];\n            },\n            readFileSync: useReadPackage","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/resolve/test/mock_sync.js","startLine":156,"endLine":165},{"filePath":"node_modules/resolve/test/mock_sync.js","startLine":14,"endLine":23}]}
{"cloneLines":");\n\n    var files = {};\n    files[path.resolve('/foo/bar/baz.js')] = 'beep';\n\n    var dirs = {};\n    dirs[path.resolve('/foo/bar')] = true;\n\n    function opts(basedir) {\n        return {\n            basedir: path.resolve(basedir),\n            isFile: function (file,","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":6,"endLine":17},{"filePath":"node_modules/resolve/test/mock_sync.js","startLine":6,"endLine":17}]}
{"cloneLines":", opts('/foo/bar'), function (err, res, pkg) {\n        if (err) return t.fail(err);\n        t.equal(res, path.resolve('/foo/bar/baz.js'));\n        t.equal(pkg, undefined);\n    });\n\n    resolve('baz'","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":38,"endLine":44},{"filePath":"node_modules/resolve/test/mock.js","startLine":32,"endLine":38}]}
{"cloneLines":", function (t) {\n    t.plan(8);\n\n    var files = {};\n    files[path.resolve('/foo/bar/baz.js')] = 'beep';\n\n    var dirs = {};\n    dirs[path.resolve('/foo/bar')] = true;\n\n    function opts(basedir) {\n        return {\n            basedir: path.resolve(basedir),\n            isFile: function (file, cb) {\n                cb(null, Object.prototype.hasOwnProperty.call(files, file","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":55,"endLine":68},{"filePath":"node_modules/resolve/test/mock.js","startLine":5,"endLine":18}]}
{"cloneLines":"]);\n            },\n            realpath: function (file, cb) {\n                cb(null, file);\n            }\n        };\n    }\n\n    resolve('./baz', opts('/foo/bar'), function (err, res, pkg) {\n        if (err) return t.fail(err);\n        t.equal(res, path.resolve('/foo/bar/baz.js'));\n        t.equal(pkg &&","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":75,"endLine":86},{"filePath":"node_modules/resolve/test/mock.js","startLine":24,"endLine":35}]}
{"cloneLines":");\n    });\n\n    resolve('./baz.js', opts('/foo/bar'), function (err, res, pkg) {\n        if (err) return t.fail(err);\n        t.equal(res, path.resolve('/foo/bar/baz.js'));\n        t.equal(pkg && pkg.main, 'bar');\n    });\n\n    resolve('baz'","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":86,"endLine":95},{"filePath":"node_modules/resolve/test/mock.js","startLine":35,"endLine":89}]}
{"cloneLines":");\n    });\n\n    resolve('baz', opts('/foo/bar'), function (err, res) {\n        t.equal(err.message, \"Cannot find module 'baz' from '\" + path.resolve('/foo/bar') + \"'\");\n        t.equal(err.code, 'MODULE_NOT_FOUND');\n    });\n\n    resolve('../baz', opts('/foo/bar'), function (err, res) {\n        t.equal(err.message, \"Cannot find module '../baz' from '\" + path.resolve('/foo/bar') + \"'\");\n        t.equal(err.code, 'MODULE_NOT_FOUND');\n    });\n});\n\ntest('mock package'","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":92,"endLine":106},{"filePath":"node_modules/resolve/test/mock.js","startLine":41,"endLine":55}]}
{"cloneLines":");\n\n    var files = {};\n    files[path.resolve('/foo/node_modules/bar/baz.js')] = 'beep';\n    files[path.resolve('/foo/node_modules/bar/package.json')] = JSON.stringify({\n        main: './baz.js'\n    });\n\n    var dirs = {};\n    dirs[path.resolve('/foo')] = true;\n    dirs[path.resolve('/foo/node_modules')] = true;\n\n    function opts(basedir) {\n        return {\n            basedir: path.resolve(basedir),\n            isFile: function (file,","nrTokens":0,"nrLines":16,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":107,"endLine":122},{"filePath":"node_modules/resolve/test/mock_sync.js","startLine":52,"endLine":67}]}
{"cloneLines":")] = true;\n\n    function opts(basedir) {\n        return {\n            basedir: path.resolve(basedir),\n            isFile: function (file, cb) {\n                cb(null, Object.prototype.hasOwnProperty.call(files, path.resolve(file)));\n            },\n            isDirectory: function (dir, cb) {\n                cb(null, !!dirs[path.resolve(dir)]);\n            },\n            readFile: function (file, cb) {\n                cb(null, files[path.resolve(file)]);\n            },\n            realpath: function (file, cb) {\n                cb(null, file);\n            }\n        };\n    }\n\n    resolve('bar'","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":117,"endLine":137},{"filePath":"node_modules/resolve/test/mock.js","startLine":12,"endLine":32}]}
{"cloneLines":", function (t) {\n    t.plan(2);\n\n    var files = {};\n    files[path.resolve('/foo/node_modules/bar/baz.js')] = 'beep';\n    files[path.resolve('/foo/node_modules/bar/package.json')] = JSON.stringify({\n        main: './baz.js'\n    });\n\n    var dirs = {};\n    dirs[path.resolve('/foo')] = true;\n    dirs[path.resolve('/foo/node_modules')] = true;\n\n    function opts(basedir) {\n        return {\n            basedir: path.resolve(basedir),\n            isFile: function (file, cb) {\n                cb(null, Object.prototype.hasOwnProperty.call(files, path.resolve(file)));\n            },\n            isDirectory: function (dir, cb) {\n                cb(null, !!dirs[path.resolve(dir)]);\n            },\n            'package'","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":144,"endLine":166},{"filePath":"node_modules/resolve/test/mock.js","startLine":106,"endLine":23}]}
{"cloneLines":"));\n            },\n            isDirectory: function (dir, cb) {\n                cb(null, !!dirs[path.resolve(dir)]);\n            },\n            'package': { main: 'bar' },\n            readFile: function (file, cb) {\n                cb(null, files[path","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":161,"endLine":168},{"filePath":"node_modules/resolve/test/mock.js","startLine":68,"endLine":75}]}
{"cloneLines":"},\n            readFile: function (file, cb) {\n                cb(null, files[path.resolve(file)]);\n            },\n            realpath: function (file, cb) {\n                cb(null, file);\n            }\n        };\n    }\n\n    resolve('bar', opts('/foo'), function (err, res, pkg) {\n        if (err) return t.fail(err);\n        t.equal(res, path.resolve('/foo/node_modules/bar/baz.js'));\n        t.equal(pkg && pkg.main, './baz.js');\n    });\n});\n\ntest('symlinked'","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":166,"endLine":183},{"filePath":"node_modules/resolve/test/mock.js","startLine":22,"endLine":144}]}
{"cloneLines":");\n\n    var files = {};\n    files[path.resolve('/foo/bar/baz.js')] = 'beep';\n    files[path.resolve('/foo/bar/symlinked/baz.js')] = 'beep';\n\n    var dirs = {};\n    dirs[path.resolve('/foo/bar')] = true;\n    dirs[path.resolve('/foo/bar/symlinked')] = true;\n\n    function opts(basedir) {\n        return {\n            preserveSymlinks: false,\n            basedir: path.resolve(basedir),\n            isFile: function (file,","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":184,"endLine":198},{"filePath":"node_modules/resolve/test/mock_sync.js","startLine":89,"endLine":103}]}
{"cloneLines":"basedir: path.resolve(basedir),\n            isFile: function (file, cb) {\n                cb(null, Object.prototype.hasOwnProperty.call(files, path.resolve(file)));\n            },\n            isDirectory: function (dir, cb) {\n                cb(null, !!dirs[path.resolve(dir)]);\n            },\n            readFile: function (file, cb) {\n                cb(null, files[path.resolve(file)]);\n            },\n            realpath: function (file, cb) {\n                var","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":197,"endLine":208},{"filePath":"node_modules/resolve/test/mock.js","startLine":16,"endLine":27}]}
{"cloneLines":"}\n        };\n    }\n\n    resolve('./baz', opts('/foo/bar'), function (err, res, pkg) {\n        if (err) return t.fail(err);\n        t.equal(res, path.resolve('/foo/bar/symlinked/baz.js'","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":224,"endLine":230},{"filePath":"node_modules/resolve/test/mock.js","startLine":28,"endLine":34}]}
{"cloneLines":"));\n        t.equal(pkg, undefined);\n    });\n\n    resolve('./baz.js', opts('/foo/bar'), function (err, res, pkg) {\n        if (err) return t.fail(err);\n        t.equal(res, path.resolve('/foo/bar/symlinked/baz.js'","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":230,"endLine":236},{"filePath":"node_modules/resolve/test/mock.js","startLine":34,"endLine":40}]}
{"cloneLines":", opts('/foo/bar'), function (err, res, pkg) {\n        if (err) return t.fail(err);\n        t.equal(res, path.resolve('/foo/bar/symlinked/baz.js'));\n        t.equal(pkg, undefined);\n    });\n}","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":234,"endLine":239},{"filePath":"node_modules/resolve/test/mock.js","startLine":228,"endLine":234}]}
{"cloneLines":", function (t) {\n    t.plan(3);\n\n    var files = {};\n    files[path.resolve('/foo/node_modules/bar/something-else.js')] = 'beep';\n    files[path.resolve('/foo/node_modules/bar/package.json')] = JSON.stringify({\n        main: './baz.js'\n    });\n    files[path.resolve('/foo/node_modules/bar/baz.js')] = 'boop';\n\n    var dirs = {};\n    dirs[path.resolve('/foo')] = true;\n    dirs[path.resolve('/foo/node_modules')] = true;\n\n    function opts(basedir)","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":241,"endLine":255},{"filePath":"node_modules/resolve/test/mock_sync.js","startLine":142,"endLine":156}]}
{"cloneLines":";\n\n    var dirs = {};\n    dirs[path.resolve('/foo')] = true;\n    dirs[path.resolve('/foo/node_modules')] = true;\n\n    function opts(basedir) {\n        return {\n            basedir: path.resolve(basedir),\n            isFile: function (file, cb) {\n                cb(null, Object.prototype.hasOwnProperty.call(files, path.resolve(file)));\n            },\n            isDirectory: function (dir, cb) {\n                cb(null, !!dirs[path.resolve(dir)]);\n            },\n            'package': { main: 'bar' },\n            readFile: function (file, cb) {\n                cb(null, files[path.resolve(file)]);\n            },\n            realpath: function (file, cb) {\n                cb(null, file);\n            }\n        };\n    }\n\n    t","nrTokens":0,"nrLines":26,"files":[{"filePath":"node_modules/resolve/test/mock.js","startLine":249,"endLine":274},{"filePath":"node_modules/resolve/test/mock_sync.js","startLine":58,"endLine":32}]}
{"cloneLines":"'use strict';\n\nvar fs = require('fs');\nvar homedir = require('../lib/homedir');\nvar path = require('path');\n\nvar test = require('tape');\nvar mkdirp = require('mkdirp');\nvar rimraf = require('rimraf');\nvar mv = require('mv');\nvar copyDir = require('copy-dir');\nvar tmp = require('tmp');\n\nvar HOME = homedir();\n\nvar hnm = path.join(HOME, '.node_modules');\nvar hnl = path.join(HOME, '.node_libraries');\n\nvar resolve = require('../async'","nrTokens":0,"nrLines":19,"files":[{"filePath":"node_modules/resolve/test/home_paths.js","startLine":1,"endLine":19},{"filePath":"node_modules/resolve/test/home_paths_sync.js","startLine":1,"endLine":19}]}
{"cloneLines":");\n\nfunction makeDir(t, dir, cb) {\n    mkdirp(dir, function (err) {\n        if (err) {\n            cb(err);\n        } else {\n            t.teardown(function cleanup() {\n                rimraf.sync(dir);\n            });\n            cb();\n        }\n    });\n}\n\nfunction makeTempDir(t, dir, cb) {\n    if (fs.existsSync(dir)) {\n        var tmpResult = tmp.dirSync();\n        t.teardown(tmpResult.removeCallback);\n        var backup = path.join(tmpResult.name, path.basename(dir));\n        mv(dir, backup, function (err) {\n            if (err) {\n                cb(err);\n            } else {\n                t.teardown(function () {\n                    mv(backup, dir, cb);\n                });\n                makeDir(t, dir, cb);\n            }\n        });\n    } else {\n        makeDir(t, dir, cb);\n    }\n}\n\ntest('homedir module paths', function (t) {\n    t.plan(7);\n\n    makeTempDir(t, hnm, function (err) {\n        t.error(err, 'no error with HNM temp dir');\n        if (err) {\n            return t.end();\n        }\n\n        var bazHNMDir = path.join(hnm, 'baz');\n        var dotMainDir = path.join(hnm, 'dot_main');\n        copyDir.sync(path.join(__dirname, 'resolver/baz'), bazHNMDir);\n        copyDir.sync(path.join(__dirname, 'resolver/dot_main'), dotMainDir);\n\n        var bazPkg","nrTokens":0,"nrLines":50,"files":[{"filePath":"node_modules/resolve/test/home_paths.js","startLine":19,"endLine":68},{"filePath":"node_modules/resolve/test/home_paths_sync.js","startLine":19,"endLine":68}]}
{"cloneLines":";\n\n        var bazHNMmain = path.join(bazHNMDir, 'quux.js');\n        t.equal(require.resolve('baz'), bazHNMmain, 'sanity check: require.resolve finds HNM `baz`');\n        var dotMainMain = path.join(dotMainDir, 'index.js');\n        t.equal(require.resolve('dot_main'), dotMainMain, 'sanity check: require.resolve finds `dot_main`');\n\n        makeTempDir(t, hnl, function (err) {\n            t.error(err, 'no error with HNL temp dir');\n            if (err) {\n                return t.end();\n            }\n            var bazHNLDir = path.join(hnl, 'baz');\n            copyDir.sync(path.join(__dirname, 'resolver/baz'), bazHNLDir);\n\n            var dotSlashMainDir = path.join(hnl, 'dot_slash_main');\n            var dotSlashMainMain = path.join(dotSlashMainDir, 'index.js');\n            var","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/resolve/test/home_paths.js","startLine":69,"endLine":86},{"filePath":"node_modules/resolve/test/home_paths_sync.js","startLine":66,"endLine":83}]}
{"cloneLines":";\n            copyDir.sync(path.join(__dirname, 'resolver/dot_slash_main'), dotSlashMainDir);\n\n            t.equal(require.resolve('baz'), bazHNMmain, 'sanity check: require.resolve finds HNM `baz`');\n            t.equal(require.resolve('dot_slash_main'), dotSlashMainMain, 'sanity check: require.resolve finds HNL `dot_slash_main`');\n\n            t.test('with temp dirs', function (st) {\n                st.plan(3);\n\n                st.test('just in `$HOME/.node_modules`', function (s2t) {\n                    s2t.plan(3","nrTokens":0,"nrLines":11,"files":[{"filePath":"node_modules/resolve/test/home_paths.js","startLine":86,"endLine":96},{"filePath":"node_modules/resolve/test/home_paths_sync.js","startLine":82,"endLine":92}]}
{"cloneLines":"st.ok(resolve.core[mod], mod + ' is a core module');\n                st.doesNotThrow(\n                    function () { require(mod); }, // eslint-disable-line no-loop-func\n                    'requiring ' + mod + ' does not throw'\n                );\n            }\n        }","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/test/core.js","startLine":77,"endLine":83},{"filePath":"node_modules/resolve/test/core.js","startLine":52,"endLine":58}]}
{"cloneLines":", { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && stat","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/resolve/lib/sync.js","startLine":31,"endLine":36},{"filePath":"node_modules/resolve/lib/sync.js","startLine":21,"endLine":26}]}
{"cloneLines":";\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file,","nrTokens":0,"nrLines":11,"files":[{"filePath":"node_modules/resolve/lib/async.js","startLine":9,"endLine":19},{"filePath":"node_modules/resolve/lib/sync.js","startLine":9,"endLine":19}]}
{"cloneLines":"fs.stat(dir, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isDirectory());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/resolve/lib/async.js","startLine":30,"endLine":39},{"filePath":"node_modules/resolve/test/node_path.js","startLine":13,"endLine":22}]}
{"cloneLines":"};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolve","nrTokens":0,"nrLines":11,"files":[{"filePath":"node_modules/resolve/lib/async.js","startLine":66,"endLine":76},{"filePath":"node_modules/resolve/lib/sync.js","startLine":63,"endLine":73}]}
{"cloneLines":");\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path","nrTokens":0,"nrLines":13,"files":[{"filePath":"node_modules/resolve/lib/async.js","startLine":101,"endLine":113},{"filePath":"node_modules/resolve/lib/sync.js","startLine":85,"endLine":97}]}
{"cloneLines":", pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function loadAsFile","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/resolve/lib/async.js","startLine":163,"endLine":174},{"filePath":"node_modules/resolve/lib/async.js","startLine":142,"endLine":153}]}
{"cloneLines":"}\n\n                    if (pkg && pkg.main) {\n                        if (typeof pkg.main !== 'string') {\n                            var mainError = new TypeError('package ???' + pkg.name + '??? `main` must be a string');\n                            mainError.code = 'INVALID_PACKAGE_MAIN';\n                            return","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/resolve/lib/async.js","startLine":266,"endLine":272},{"filePath":"node_modules/resolve/lib/sync.js","startLine":171,"endLine":177}]}
{"cloneLines":"{\n  language: 'markup',\n  init: function init(Prism) {\n    Prism.languages.markup = {\n      comment: /<!--[\\s\\S]*?-->/,\n      prolog: /<\\?[\\s\\S]+?\\?>/,\n      doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n      cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n      tag: {\n        pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n        greedy: true,\n        inside: {\n          tag: {\n            pattern: /^<\\/?[^\\s>\\/]+/i,\n            inside: {\n              punctuation: /^<\\/?/,\n              namespace: /^[^\\s>\\/:]+:/\n            }\n          },\n          'attr-value': {\n            pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n            inside: {\n              punctuation: [/^=/, {\n                pattern: /(^|[^\\\\])[\"']/,\n                lookbehind: true\n              }]\n            }\n          },\n          punctuation: /\\/?>/,\n          'attr-name': {\n            pattern: /[^\\s>\\/]+/,\n            inside: {\n              namespace: /^[^\\s>\\/:]+:/\n            }\n          }\n        }\n      },\n      entity: /&#?[\\da-z]{1,8};/i\n    };\n\n    Prism.languages.markup.tag.inside['attr-value'].inside.entity = Prism.languages.markup.entity;\n\n    // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type === 'entity') {\n        env.attributes.title = env.content.replace(/&amp;/, '&');\n      }\n    });\n\n    Prism.languages.xml = Prism.languages.markup;\n    Prism.languages.html = Prism.languages.markup;\n    Prism.languages.mathml = Prism.languages.markup;\n    Prism.languages.svg = Prism.languages.markup;\n  }\n})","nrTokens":0,"nrLines":55,"files":[{"filePath":"node_modules/reprism/umd/reprism.js","startLine":117,"endLine":171},{"filePath":"node_modules/reprism/lib/languages/markup.js","startLine":6,"endLine":60}]}
{"cloneLines":"{\n  language: 'css',\n  init: function init(Prism) {\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n        inside: {\n          rule: /@[\\w-]+/\n          // See rest below\n        }\n      },\n      url: /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n      selector: /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n      string: {\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n      important: /\\B!important\\b/i,\n      function: /[-a-z0-9]+(?=\\()/i,\n      punctuation: /[(){};:]/\n    };\n\n    Prism.languages.css.atrule.inside.rest = Prism.languages.css;\n\n    if (Prism.languages.markup) {\n      Prism.languages.insertBefore('markup', 'tag', {\n        style: {\n          pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n          lookbehind: true,\n          inside: Prism.languages.css,\n          alias: 'language-css',\n          greedy: true\n        }\n      });\n\n      Prism.languages.insertBefore('inside', 'attr-value', {\n        'style-attr': {\n          pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n          inside: {\n            'attr-name': {\n              pattern: /^\\s*style/i,\n              inside: Prism.languages.markup.tag.inside\n            },\n            punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n            'attr-value': {\n              pattern: /.+/i,\n              inside: Prism.languages.css\n            }\n          },\n          alias: 'language-css'\n        }\n      }, Prism.languages.markup.tag);\n    }\n  }\n})","nrTokens":0,"nrLines":57,"files":[{"filePath":"node_modules/reprism/umd/reprism.js","startLine":178,"endLine":234},{"filePath":"node_modules/reprism/lib/languages/css.js","startLine":6,"endLine":62}]}
{"cloneLines":"{\n  language: 'clike',\n  init: function init(Prism) {\n    Prism.languages.clike = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }],\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      function: /[a-z0-9_]+(?=\\()/i,\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n      operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n})","nrTokens":0,"nrLines":32,"files":[{"filePath":"node_modules/reprism/umd/reprism.js","startLine":241,"endLine":272},{"filePath":"node_modules/reprism/lib/languages/clike.js","startLine":6,"endLine":37}]}
{"cloneLines":"{\n  language: 'javascript',\n  init: function init(Prism) {\n    Prism.languages.javascript = Prism.languages.extend('clike', {\n      keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n      number: /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n      function: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n      operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n    });\n\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      regex: {\n        pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n        lookbehind: true,\n        greedy: true\n      },\n      // This must be declared before keyword because we use \"function\" inside the look-forward\n      'function-variable': {\n        pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n        alias: 'function'\n      },\n      constant: /\\b[A-Z][A-Z\\d_]*\\b/\n    });\n\n    Prism.languages.insertBefore('javascript', 'string', {\n      'template-string': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /\\$\\{[^}]+\\}/,\n            inside: {\n              'interpolation-punctuation': {\n                pattern: /^\\$\\{|\\}$/,\n                alias: 'punctuation'\n              },\n              rest: Prism.languages.javascript\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    });\n\n    if (Prism.languages.markup) {\n      Prism.languages.insertBefore('markup', 'tag', {\n        script: {\n          pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n          lookbehind: true,\n          inside: Prism.languages.javascript,\n          alias: 'language-javascript',\n          greedy: true\n        }\n      });\n    }\n\n    Prism.languages.js = Prism.languages.javascript;\n  }\n})","nrTokens":0,"nrLines":60,"files":[{"filePath":"node_modules/reprism/umd/reprism.js","startLine":279,"endLine":338},{"filePath":"node_modules/reprism/lib/languages/javascript.js","startLine":6,"endLine":65}]}
{"cloneLines":"env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language,","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/reprism/src/core.js","startLine":33,"endLine":39},{"filePath":"node_modules/reprism/umd/reprism.js","startLine":399,"endLine":405}]}
{"cloneLines":"= function Token(type, content, alias, matchedStr, greedy) {\n  _classCallCheck(this, Token);\n\n  this.type = type;\n  this.content = content;\n  this.alias = alias;\n  // Copy of the full string this token was created from\n  this.length = (matchedStr || '').length | 0;\n  this.greedy = !!greedy;\n};","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/reprism/lib/core.js","startLine":36,"endLine":45},{"filePath":"node_modules/reprism/umd/reprism.js","startLine":379,"endLine":388}]}
{"cloneLines":".stringify = function (o, language, parent) {\n  if (getType(o) === 'String') {\n    return o;\n  }\n\n  if (getType(o) === 'Array') {\n    return o.map(function (element) {\n      return Token.stringify(element, language, o);\n    }).join('');\n  }\n\n  var env = {\n    type: o.type,\n    content: Token.stringify(o.content, language, parent),\n    tag: 'span',\n    classes: ['token', o.type],\n    attributes: {},\n    language: language,\n    parent: parent\n  };\n\n  if (o.alias) {\n    var aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n    Array.prototype.push.apply(env.classes, aliases);\n  }\n\n  hooks.run('wrap', env);\n\n  var attributes = Object.keys(env.attributes).map(function (name) {\n    return name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n  }).join(' ');\n\n  return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n};","nrTokens":0,"nrLines":34,"files":[{"filePath":"node_modules/reprism/lib/core.js","startLine":47,"endLine":80},{"filePath":"node_modules/reprism/umd/reprism.js","startLine":388,"endLine":421}]}
{"cloneLines":";\n\nvar Prism = {\n  languages: languages,\n  plugins: plugins,\n  insertBefore: insertBefore,\n  matchGrammar: matchGrammar,\n  tokenize: tokenize,\n  hooks: hooks,\n  util: {\n    encode: encode,\n    type: getType,\n    objId: objId,\n    clone: clone\n  },\n  Token: Token\n};\n\nexports","nrTokens":0,"nrLines":19,"files":[{"filePath":"node_modules/reprism/lib/core.js","startLine":80,"endLine":98},{"filePath":"node_modules/reprism/umd/reprism.js","startLine":421,"endLine":440}]}
{"cloneLines":";\nfunction highlight(text, language) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$component = _ref.component,\n      component = _ref$component === undefined ? 'pre' : _ref$component;\n\n  if (!languages[language]) {\n    if (!language) {\n      throw new Error('A language is required!');\n    }\n    throw new Error('The language: ' + language + ' hasn\\'t been loaded yet!');\n  }\n  var env = {\n    code: text,\n    grammar: languages[language],\n    language: language\n  };\n  hooks.run('before-tokenize', env);\n  env.tokens = tokenize(env.code, env.grammar);\n  hooks.run('after-tokenize', env);\n  return '' + (component ? '<' + component + ' class=\\'reprism ' + language + ' language-' + language + '\\'>' : '') + Token.stringify(encode(env.tokens), env.language) + (component ? '</' + component + '>' : '');\n}\n\nfunction encode(tokens) {\n  if (tokens instanceof Token) {\n    return new Token(tokens.type, encode(tokens.content), tokens.alias);\n  } else if (getType(tokens) === 'Array') {\n    return tokens.map(encode);\n  }\n  return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n}\n\nfunction getType(o) {\n  return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n}\n\nfunction objId(obj) {\n  if (!obj.__id) {\n    uniqueID += 1;\n    Object.defineProperty(obj, '__id', { value: uniqueID });\n  }\n  return obj.__id;\n}\n\nfunction loadLanguages() {\n  for (var _len = arguments.length, langs = Array(_len), _key = 0; _key < _len; _key++) {\n    langs[_key] = arguments[_key];\n  }\n\n  langs.forEach(function (lang) {\n    if (getType(lang) === 'Array') {\n      lang.forEach(function (subLang) {\n        subLang.init(Prism);\n      });\n    } else {\n      lang.init(Prism);\n    }\n  });\n}\n\n// Deep clone a language definition (e.g. to extend it)\nfunction clone(o, visited) {\n  visited = visited || {};\n\n  if (getType(o) === 'Array') {\n    if (visited[objId(o)]) {\n      return visited[objId(o)];\n    }\n    var c = [];\n    visited[objId(o)] = c;\n\n    o.forEach(function (v, i) {\n      c[i] = clone(v, visited);\n    });\n\n    return c;\n  }\n\n  if (getType(o) === 'Object') {\n    if (visited[objId(o)]) {\n      return visited[objId(o)];\n    }\n    var _c = {};\n    visited[objId(o)] = _c;\n\n    Object.keys(o).forEach(function (key) {\n      _c[key] = clone(o[key], visited);\n    });\n\n    return _c;\n  }\n\n  return o;\n}\n\nfunction extend(id, redef) {\n  var lang = clone(languages[id]);\n  Object.keys(redef).forEach(function (key) {\n    lang[key] = redef[key];\n  });\n  return lang;\n}\n\nfunction insertBefore() {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  var inside = args[0],\n      before = args[1],\n      insert = args[2],\n      _args$ = args[3],\n      base = _args$ === undefined ? languages : _args$;\n\n\n  var grammar = base[inside];\n  var resolvedInsert = insert;\n\n  if (args.length === 2) {\n    resolvedInsert = args[1];\n\n    Object.keys(resolvedInsert).forEach(function (key) {\n      grammar[key] = resolvedInsert[key];\n    });\n\n    return grammar;\n  }\n\n  var ret = {};\n\n  Object.keys(grammar).forEach(function (key) {\n    if (key === before) {\n      Object.keys(insert).forEach(function (newKey) {\n        ret[newKey] = insert[newKey];\n      });\n    }\n    ret[key] = grammar[key];\n  });\n\n  // Update references in other language definitions\n  DFS(languages, function callback(key, value) {\n    if (value === base[inside] && key !== inside) {\n      this[key] = ret;\n    }\n  });\n\n  base[inside] = ret;\n\n  return base[inside];\n}\n\n// Traverse a language definition with Depth First Search\nfunction DFS() {\n  var o = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callback = arguments[1];\n  var type = arguments[2];\n  var visited = arguments[3];\n\n  visited = visited || {};\n  Object.keys(o).forEach(function (i) {\n    callback.call(o, i, o[i], type || i);\n    if (getType(o[i]) === 'Object' && !visited[objId(o[i])]) {\n      visited[objId(o[i])] = true;\n      DFS(o[i], callback, i, visited);\n    } else if (getType(o[i]) === 'Array' && !visited[objId(o[i])]) {\n      visited[objId(o[i])] = true;\n      DFS(o[i], callback, null, visited);\n    }\n  });\n}\n\nfunction matchGrammar(text, strarr) {\n  var grammar = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var index = arguments[3];\n  var startPos = arguments[4];\n  var oneshot = arguments[5];\n  var target = arguments[6];\n\n  Object.keys(grammar).forEach(function (token) {\n    if (!grammar[token]) {\n      return;\n    }\n\n    if (token === target) {\n      return;\n    }\n\n    var patterns = grammar[token];\n    patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n    patterns.forEach(function (pattern) {\n      var inside = pattern.inside;\n      var lookbehind = !!pattern.lookbehind;\n      var greedy = !!pattern.greedy;\n      var lookbehindLength = 0;\n      var alias = pattern.alias;\n\n      if (greedy && !pattern.pattern.global) {\n        // Without the global flag, lastIndex won't work\n        var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n        pattern.pattern = RegExp(pattern.pattern.source, flags + 'g');\n      }\n\n      pattern = pattern.pattern || pattern;\n\n      // Don???t cache length as it changes during the loop\n      for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, i += 1) {\n        var str = strarr[i];\n\n        if (strarr.length > text.length) {\n          // Something went terribly wrong, ABORT, ABORT!\n          return;\n        }\n\n        if (str instanceof Token) {\n          // eslint-disable-next-line\n          continue;\n        }\n\n        var delNum = 0;\n        var match = void 0;\n\n        if (greedy && i !== strarr.length - 1) {\n          pattern.lastIndex = pos;\n          match = pattern.exec(text);\n          if (!match) {\n            break;\n          }\n\n          var _from = match.index + (lookbehind ? match[1].length : 0);\n          var _to = match.index + match[0].length;\n          var k = i;\n          var p = pos;\n\n          for (var len = strarr.length; k < len && (p < _to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n            p += strarr[k].length;\n            // Move the index i to the element in strarr that is closest to from\n            if (_from >= p) {\n              i += 1;\n              pos = p;\n            }\n          }\n\n          // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n          if (strarr[i] instanceof Token) {\n            // eslint-disable-next-line\n            continue;\n          }\n\n          // Number of tokens to delete and replace with the new match\n          delNum = k - i;\n          str = text.slice(pos, p);\n          match.index -= pos;\n        } else {\n          pattern.lastIndex = 0;\n\n          match = pattern.exec(str);\n          delNum = 1;\n        }\n\n        if (!match) {\n          if (oneshot) {\n            break;\n          }\n\n          // eslint-disable-next-line\n          continue;\n        }\n\n        if (lookbehind) {\n          lookbehindLength = match[1] ? match[1].length : 0;\n        }\n\n        var from = match.index + lookbehindLength;\n        match = match[0].slice(lookbehindLength);\n        var to = from + match.length;\n        var before = str.slice(0, from);\n        var after = str.slice(to);\n\n        var _args = [i, delNum];\n\n        if (before) {\n          i += 1;\n          pos += before.length;\n          _args.push(before);\n        }\n\n        var wrapped = new Token(token, inside ? tokenize(match, inside) : match, alias, match, greedy);\n\n        _args.push(wrapped);\n\n        if (after) {\n          _args.push(after);\n        }\n\n        Array.prototype.splice.apply(strarr, _args);\n\n        if (delNum !== 1) matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n        if (oneshot) break;\n      }\n    });\n  });\n}\n\nfunction tokenize(text, grammar) {\n  var strarr = [text];\n\n  var rest = grammar.rest;\n\n  if (rest) {\n    Object.keys(rest).forEach(function (token) {\n      grammar[token] = rest[token];\n    });\n\n    delete grammar.rest;\n  }\n\n  matchGrammar(text, strarr, grammar, 0, 0, false);\n\n  return strarr;\n}\n\nfunction addHook(name, callback) {\n  var allHooks = hooks.all;\n\n  allHooks[name] = allHooks[name] || [];\n\n  allHooks[name].push(callback);\n}\n\nfunction runHook(name, env) {\n  var callbacks = hooks.all[name];\n\n  if (!callbacks || !callbacks.length) {\n    return;\n  }\n\n  callbacks.forEach(function (callback) {\n    return callback(env);\n  });\n}","nrTokens":0,"nrLines":342,"files":[{"filePath":"node_modules/reprism/lib/core.js","startLine":98,"endLine":439},{"filePath":"node_modules/reprism/umd/reprism.js","startLine":440,"endLine":782}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'yaml',\n  init: function init(Prism) {\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n        lookbehind: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n        lookbehind: true\n      },\n      tag: /![^\\s]+/,\n      important: /[&*][\\w]+/,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    };\n  }\n};","nrTokens":0,"nrLines":55,"files":[{"filePath":"node_modules/reprism/languages/yaml.js","startLine":1,"endLine":55},{"filePath":"node_modules/reprism/lib/languages/yaml.js","startLine":1,"endLine":55}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'xojo',\n  init: function init(Prism) {\n    Prism.languages.xojo = {\n      comment: {\n        pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n        inside: {\n          keyword: /^Rem/i\n        }\n      },\n      string: {\n        pattern: /\"(?:\"\"|[^\"])*\"/,\n        greedy: true\n      },\n      number: [/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n      symbol: /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,\n      keyword: /\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,\n      operator: /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,\n      punctuation: /[.,;:()]/\n    };\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/languages/xojo.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/xojo.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'xeora',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.xeora = Prism.languages.extend('markup', {\n        constant: {\n          pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n          inside: {\n            punctuation: {\n              pattern: /\\$/\n            }\n          }\n        },\n        variable: {\n          pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n          inside: {\n            punctuation: {\n              pattern: /[$.]/\n            },\n            operator: {\n              pattern: /#+|[-+*~=^@]/\n            }\n          }\n        },\n        'function-inline': {\n          pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n          inside: {\n            variable: {\n              pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n              inside: {\n                punctuation: {\n                  pattern: /[,.|]/\n                },\n                operator: {\n                  pattern: /#+|[-+*~=^@]/\n                }\n              }\n            },\n            punctuation: {\n              pattern: /\\$\\w:|[$:?.,|]/\n            }\n          },\n          alias: 'function'\n        },\n        'function-block': {\n          pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n          inside: {\n            punctuation: {\n              pattern: /[$:{}?.,|]/\n            }\n          },\n          alias: 'function'\n        },\n        'directive-inline': {\n          pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n          inside: {\n            punctuation: {\n              pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n              inside: {\n                tag: {\n                  pattern: /#\\d/\n                }\n              }\n            }\n          },\n          alias: 'function'\n        },\n        'directive-block-open': {\n          pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n          inside: {\n            punctuation: {\n              pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n              inside: {\n                tag: {\n                  pattern: /#\\d/\n                }\n              }\n            },\n            attribute: {\n              pattern: /![A-Z]+$/,\n              inside: {\n                punctuation: {\n                  pattern: /!/\n                }\n              },\n              alias: 'keyword'\n            }\n          },\n          alias: 'function'\n        },\n        'directive-block-separator': {\n          pattern: /}:[-\\w.]+:{/,\n          inside: {\n            punctuation: {\n              pattern: /[:{}]/\n            }\n          },\n          alias: 'function'\n        },\n        'directive-block-close': {\n          pattern: /}:[-\\w.]+\\$/,\n          inside: {\n            punctuation: {\n              pattern: /[:{}$]/\n            }\n          },\n          alias: 'function'\n        }\n      });\n\n      Prism.languages.insertBefore('inside', 'punctuation', {\n        variable: Prism.languages.xeora['function-inline'].inside.variable\n      }, Prism.languages.xeora['function-block']);\n\n      Prism.languages.xeoracube = Prism.languages.xeora;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":123,"files":[{"filePath":"node_modules/reprism/languages/xeora.js","startLine":1,"endLine":123},{"filePath":"node_modules/reprism/lib/languages/xeora.js","startLine":1,"endLine":123}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'wiki',\n  init: function init(Prism) {\n    Prism.languages.wiki = Prism.languages.extend('markup', {\n      'block-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      heading: {\n        pattern: /^(=+).+?\\1/m,\n        inside: {\n          punctuation: /^=+|=+$/,\n          important: /.+/\n        }\n      },\n      emphasis: {\n        // TODO Multi-line\n        pattern: /('{2,5}).+?\\1/,\n        inside: {\n          'bold italic': {\n            pattern: /(''''').+?(?=\\1)/,\n            lookbehind: true\n          },\n          bold: {\n            pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n            lookbehind: true\n          },\n          punctuation: /^''+|''+$/\n        }\n      },\n      hr: {\n        pattern: /^-{4,}/m,\n        alias: 'punctuation'\n      },\n      url: [/ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i, /\\[\\[.+?\\]\\]|\\[.+?\\]/],\n      variable: [/__[A-Z]+__/,\n      // FIXME Nested structures should be handled\n      // {{formatnum:{{#expr:{{{3}}}}}}}\n      /\\{{3}.+?\\}{3}/, /\\{\\{.+?\\}\\}/],\n      symbol: [/^#redirect/im, /~{3,5}/],\n      // Handle table attrs:\n      // {|\n      // ! style=\"text-align:left;\"| Item\n      // |}\n      'table-tag': {\n        pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n        lookbehind: true,\n        inside: {\n          'table-bar': {\n            pattern: /\\|$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.markup.tag.inside\n        }\n      },\n      punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n    });\n\n    Prism.languages.insertBefore('wiki', 'tag', {\n      // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n      nowiki: {\n        pattern: /<(nowiki|pre|source)\\b[\\s\\S]*?>[\\s\\S]*?<\\/\\1>/i,\n        inside: {\n          tag: {\n            pattern: /<(?:nowiki|pre|source)\\b[\\s\\S]*?>|<\\/(?:nowiki|pre|source)>/i,\n            inside: Prism.languages.markup.tag.inside\n          }\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":82,"files":[{"filePath":"node_modules/reprism/languages/wiki.js","startLine":1,"endLine":82},{"filePath":"node_modules/reprism/lib/languages/wiki.js","startLine":1,"endLine":82}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'wasm',\n  init: function init(Prism) {\n    Prism.languages.wasm = {\n      comment: [/\\(;[\\s\\S]*?;\\)/, {\n        pattern: /;;.*/,\n        greedy: true\n      }],\n      string: {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n        greedy: true\n      },\n      keyword: [{\n        pattern: /\\b(?:align|offset)=/,\n        inside: {\n          operator: /=/\n        }\n      }, {\n        pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n      variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n      number: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n      punctuation: /[()]/\n    };\n  }\n};","nrTokens":0,"nrLines":34,"files":[{"filePath":"node_modules/reprism/languages/wasm.js","startLine":1,"endLine":34},{"filePath":"node_modules/reprism/lib/languages/wasm.js","startLine":1,"endLine":34}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'visual-basic',\n  init: function init(Prism) {\n    Prism.languages['visual-basic'] = {\n      comment: {\n        pattern: /(?:['??????]|REM\\b).*/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      directive: {\n        pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\\S\\r\\n]_[^\\S\\r\\n]*(?:\\r\\n?|\\n)|.)+/i,\n        alias: 'comment',\n        greedy: true\n      },\n      string: {\n        pattern: /[\"??????](?:[\"??????]{2}|[^\"??????])*[\"??????]C?/i,\n        greedy: true\n      },\n      date: {\n        pattern: /#[^\\S\\r\\n]*(?:\\d+([/-])\\d+\\1\\d+(?:[^\\S\\r\\n]+(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))?|(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))[^\\S\\r\\n]*#/i,\n        alias: 'builtin'\n      },\n      number: /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:U?[ILS]|[FRD])?/i,\n      boolean: /\\b(?:True|False|Nothing)\\b/i,\n      keyword: /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|TypeOf|U(?:Integer|Long|Short)|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n      operator: [/[+\\-*/\\\\^<=>&#@$%!]/, {\n        pattern: /([^\\S\\r\\n])_(?=[^\\S\\r\\n]*[\\r\\n])/,\n        lookbehind: true\n      }],\n      punctuation: /[{}().,:?]/\n    };\n\n    Prism.languages.vb = Prism.languages['visual-basic'];\n  }\n};","nrTokens":0,"nrLines":41,"files":[{"filePath":"node_modules/reprism/languages/visual-basic.js","startLine":1,"endLine":41},{"filePath":"node_modules/reprism/lib/languages/visual-basic.js","startLine":1,"endLine":41}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'vim',\n  init: function init(Prism) {\n    Prism.languages.vim = {\n      string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n      comment: /\".*/,\n      function: /\\w+(?=\\()/,\n      keyword: /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n      builtin: /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n      number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n      operator: /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n      punctuation: /[{}[\\](),;:]/\n    };\n  }\n};","nrTokens":0,"nrLines":20,"files":[{"filePath":"node_modules/reprism/languages/vim.js","startLine":1,"endLine":20},{"filePath":"node_modules/reprism/lib/languages/vim.js","startLine":1,"endLine":20}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'vhdl',\n  init: function init(Prism) {\n    Prism.languages.vhdl = {\n      comment: /--.+/,\n      // support for all logic vectors\n      'vhdl-vectors': {\n        pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n        alias: 'number'\n      },\n      // support for operator overloading included\n      'quoted-function': {\n        pattern: /\"\\S+?\"(?=\\()/,\n        alias: 'function'\n      },\n      string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      constant: /\\b(?:use|library)\\b/i,\n      // support for predefined attributes included\n      keyword: /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n      boolean: /\\b(?:true|false)\\b/i,\n      function: /\\w+(?=\\()/,\n      // decimal, based, physical, and exponential numbers supported\n      number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n      operator: /[<>]=?|:=|[-+*/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":33,"files":[{"filePath":"node_modules/reprism/languages/vhdl.js","startLine":1,"endLine":33},{"filePath":"node_modules/reprism/lib/languages/vhdl.js","startLine":1,"endLine":33}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'verilog',\n  init: function init(Prism) {\n    Prism.languages.verilog = {\n      comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n        greedy: true\n      },\n      // support for any kernel function (ex: $display())\n      property: /\\B\\$\\w+\\b/,\n      // support for user defined constants (ex: `define)\n      constant: /\\B`\\w+\\b/,\n      function: /\\w+(?=\\()/,\n      // support for verilog and system verilog keywords\n      keyword: /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n      // bold highlighting for all verilog and system verilog logic blocks\n      important: /\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,\n      // support for time ticks, vectors, and real numbers\n      number: /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,\n      operator: /[-+{}^~%*\\/?=!<>&|]+/,\n      punctuation: /[[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/verilog.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/verilog.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'velocity',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.velocity = Prism.languages.extend('markup', {});\n\n      var velocity = {\n        variable: {\n          pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n          lookbehind: true,\n          inside: {} // See below\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        number: /\\b\\d+\\b/,\n        boolean: /\\b(?:true|false)\\b/,\n        operator: /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n        punctuation: /[(){}[\\]:,.]/\n      };\n\n      velocity.variable.inside = {\n        string: velocity.string,\n        function: {\n          pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n          lookbehind: true\n        },\n        number: velocity.number,\n        boolean: velocity.boolean,\n        punctuation: velocity.punctuation\n      };\n\n      Prism.languages.insertBefore('velocity', 'comment', {\n        unparsed: {\n          pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            punctuation: /^#\\[\\[|]]#$/\n          }\n        },\n        'velocity-comment': [{\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }, {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }],\n        directive: {\n          pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n          lookbehind: true,\n          inside: {\n            keyword: {\n              pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n              inside: {\n                punctuation: /[{}]/\n              }\n            },\n            rest: velocity\n          }\n        },\n        variable: velocity.variable\n      });\n\n      Prism.languages.velocity.tag.inside['attr-value'].inside.rest = Prism.languages.velocity;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":78,"files":[{"filePath":"node_modules/reprism/languages/velocity.js","startLine":1,"endLine":78},{"filePath":"node_modules/reprism/lib/languages/velocity.js","startLine":1,"endLine":78}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'vbnet',\n  init: function init(Prism) {\n    Prism.languages.vbnet = Prism.languages.extend('basic', {\n      keyword: /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDEC|CDBL|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEFAULT|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LINE INPUT|LET|LIB|LIKE|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPERATOR|OPEN|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHORT|SINGLE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SYNCLOCK|SWAP|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n      comment: [{\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      }, {\n        pattern: /(^|[^\\\\:])'.*/,\n        lookbehind: true\n      }]\n    });\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/languages/vbnet.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/vbnet.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'typescript',\n  init: function init(Prism) {\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\n      // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n      keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|module|declare|constructor|namespace|abstract|require|type)\\b/,\n      builtin: /\\b(?:string|Function|any|number|boolean|Array|symbol|console)\\b/\n    });\n\n    Prism.languages.ts = Prism.languages.typescript;\n  }\n};","nrTokens":0,"nrLines":17,"files":[{"filePath":"node_modules/reprism/languages/typescript.js","startLine":1,"endLine":17},{"filePath":"node_modules/reprism/lib/languages/typescript.js","startLine":1,"endLine":17}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'twig',\n  init: function init(Prism) {\n    Prism.languages.twig = {\n      comment: /\\{#[\\s\\S]*?#\\}/,\n      tag: {\n        pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n        inside: {\n          ld: {\n            pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n            inside: {\n              punctuation: /^(?:\\{\\{|\\{%)-?/,\n              keyword: /\\w+/\n            }\n          },\n          rd: {\n            pattern: /-?(?:%\\}|\\}\\})$/,\n            inside: {\n              punctuation: /.*/\n            }\n          },\n          string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            inside: {\n              punctuation: /^['\"]|['\"]$/\n            }\n          },\n          keyword: /\\b(?:even|if|odd)\\b/,\n          boolean: /\\b(?:true|false|null)\\b/,\n          number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n          operator: [{\n            pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n            lookbehind: true\n          }, /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],\n          property: /\\b[a-zA-Z_]\\w*\\b/,\n          punctuation: /[()\\[\\]{}:.,]/\n        }\n      },\n\n      // The rest can be parsed as HTML\n      other: {\n        // We want non-blank matches\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        inside: Prism.languages.markup\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":53,"files":[{"filePath":"node_modules/reprism/languages/twig.js","startLine":1,"endLine":53},{"filePath":"node_modules/reprism/lib/languages/twig.js","startLine":1,"endLine":53}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'tsx',\n  init: function init(Prism) {\n    var typescript = Prism.util.clone(Prism.languages.typescript);\n    Prism.languages.tsx = Prism.languages.extend('jsx', typescript);\n  }\n};","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/reprism/languages/tsx.js","startLine":1,"endLine":12},{"filePath":"node_modules/reprism/lib/languages/tsx.js","startLine":1,"endLine":12}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'textile',\n  init: function init(Prism) {\n    (function (Prism) {\n      // We don't allow for pipes inside parentheses\n      // to not break table pattern |(. foo |). bar |\n      var modifierRegex = '(?:\\\\([^|)]+\\\\)|\\\\[[^\\\\]]+\\\\]|\\\\{[^}]+\\\\})+';\n      var modifierTokens = {\n        css: {\n          pattern: /\\{[^}]+\\}/,\n          inside: {\n            rest: Prism.languages.css\n          }\n        },\n        'class-id': {\n          pattern: /(\\()[^)]+(?=\\))/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        lang: {\n          pattern: /(\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n        punctuation: /[\\\\\\/]\\d+|\\S/\n      };\n\n      Prism.languages.textile = Prism.languages.extend('markup', {\n        phrase: {\n          pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n          lookbehind: true,\n          inside: {\n            // h1. Header 1\n            'block-tag': {\n              pattern: RegExp('^[a-z]\\\\w*(?:' + modifierRegex + '|[<>=()])*\\\\.'),\n              inside: {\n                modifier: {\n                  pattern: RegExp('(^[a-z]\\\\w*)(?:' + modifierRegex + '|[<>=()])+(?=\\\\.)'),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                tag: /^[a-z]\\w*/,\n                punctuation: /\\.$/\n              }\n            },\n\n            // # List item\n            // * List item\n            list: {\n              pattern: RegExp('^[*#]+(?:' + modifierRegex + ')?\\\\s+.+', 'm'),\n              inside: {\n                modifier: {\n                  pattern: RegExp('(^[*#]+)' + modifierRegex),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                punctuation: /^[*#]+/\n              }\n            },\n\n            // | cell | cell | cell |\n            table: {\n              // Modifiers can be applied to the row: {color:red}.|1|2|3|\n              // or the cell: |{color:red}.1|2|3|\n              pattern: RegExp('^(?:(?:' + modifierRegex + '|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|', 'm'),\n              inside: {\n                modifier: {\n                  // Modifiers for rows after the first one are\n                  // preceded by a pipe and a line feed\n                  pattern: RegExp('(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)'),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                punctuation: /\\||^\\./\n              }\n            },\n\n            inline: {\n              pattern: RegExp('(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:' + modifierRegex + ')?.+?\\\\1'),\n              inside: {\n                // Note: superscripts and subscripts are not handled specifically\n\n                // *bold*, **bold**\n                bold: {\n                  pattern: RegExp('(^(\\\\*\\\\*?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n                  lookbehind: true\n                },\n\n                // _italic_, __italic__\n                italic: {\n                  pattern: RegExp('(^(__?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n                  lookbehind: true\n                },\n\n                // ??cite??\n                cite: {\n                  pattern: RegExp('(^\\\\?\\\\?(?:' + modifierRegex + ')?).+?(?=\\\\?\\\\?)'),\n                  lookbehind: true,\n                  alias: 'string'\n                },\n\n                // @code@\n                code: {\n                  pattern: RegExp('(^@(?:' + modifierRegex + ')?).+?(?=@)'),\n                  lookbehind: true,\n                  alias: 'keyword'\n                },\n\n                // +inserted+\n                inserted: {\n                  pattern: RegExp('(^\\\\+(?:' + modifierRegex + ')?).+?(?=\\\\+)'),\n                  lookbehind: true\n                },\n\n                // -deleted-\n                deleted: {\n                  pattern: RegExp('(^-(?:' + modifierRegex + ')?).+?(?=-)'),\n                  lookbehind: true\n                },\n\n                // %span%\n                span: {\n                  pattern: RegExp('(^%(?:' + modifierRegex + ')?).+?(?=%)'),\n                  lookbehind: true\n                },\n\n                modifier: {\n                  pattern: RegExp('(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])' + modifierRegex),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                punctuation: /[*_%?@+\\-^~]+/\n              }\n            },\n\n            // [alias]http://example.com\n            'link-ref': {\n              pattern: /^\\[[^\\]]+\\]\\S+$/m,\n              inside: {\n                string: {\n                  pattern: /(\\[)[^\\]]+(?=\\])/,\n                  lookbehind: true\n                },\n                url: {\n                  pattern: /(\\])\\S+$/,\n                  lookbehind: true\n                },\n                punctuation: /[\\[\\]]/\n              }\n            },\n\n            // \"text\":http://example.com\n            // \"text\":link-ref\n            link: {\n              pattern: RegExp('\"(?:' + modifierRegex + ')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'),\n              inside: {\n                text: {\n                  pattern: RegExp('(^\"(?:' + modifierRegex + ')?)[^\"]+(?=\")'),\n                  lookbehind: true\n                },\n                modifier: {\n                  pattern: RegExp('(^\")' + modifierRegex),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                url: {\n                  pattern: /(:).+/,\n                  lookbehind: true\n                },\n                punctuation: /[\":]/\n              }\n            },\n\n            // !image.jpg!\n            // !image.jpg(Title)!:http://example.com\n            image: {\n              pattern: RegExp('!(?:' + modifierRegex + '|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?'),\n              inside: {\n                source: {\n                  pattern: RegExp('(^!(?:' + modifierRegex + '|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)'),\n                  lookbehind: true,\n                  alias: 'url'\n                },\n                modifier: {\n                  pattern: RegExp('(^!)(?:' + modifierRegex + '|[<>=()])+'),\n                  lookbehind: true,\n                  inside: modifierTokens\n                },\n                url: {\n                  pattern: /(:).+/,\n                  lookbehind: true\n                },\n                punctuation: /[!:]/\n              }\n            },\n\n            // Footnote[1]\n            footnote: {\n              pattern: /\\b\\[\\d+\\]/,\n              alias: 'comment',\n              inside: {\n                punctuation: /\\[|\\]/\n              }\n            },\n\n            // CSS(Cascading Style Sheet)\n            acronym: {\n              pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n              inside: {\n                comment: {\n                  pattern: /(\\()[^)]+(?=\\))/,\n                  lookbehind: true\n                },\n                punctuation: /[()]/\n              }\n            },\n\n            // Prism(C)\n            mark: {\n              pattern: /\\b\\((?:TM|R|C)\\)/,\n              alias: 'comment',\n              inside: {\n                punctuation: /[()]/\n              }\n            }\n          }\n        }\n      });\n\n      var nestedPatterns = {\n        inline: Prism.languages.textile.phrase.inside.inline,\n        link: Prism.languages.textile.phrase.inside.link,\n        image: Prism.languages.textile.phrase.inside.image,\n        footnote: Prism.languages.textile.phrase.inside.footnote,\n        acronym: Prism.languages.textile.phrase.inside.acronym,\n        mark: Prism.languages.textile.phrase.inside.mark\n\n        // Only allow alpha-numeric HTML tags, not XML tags\n      };Prism.languages.textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n      // Allow some nesting\n      Prism.languages.textile.phrase.inside.inline.inside.bold.inside = nestedPatterns;\n      Prism.languages.textile.phrase.inside.inline.inside.italic.inside = nestedPatterns;\n      Prism.languages.textile.phrase.inside.inline.inside.inserted.inside = nestedPatterns;\n      Prism.languages.textile.phrase.inside.inline.inside.deleted.inside = nestedPatterns;\n      Prism.languages.textile.phrase.inside.inline.inside.span.inside = nestedPatterns;\n\n      // Allow some styles inside table cells\n      Prism.languages.textile.phrase.inside.table.inside.inline = nestedPatterns.inline;\n      Prism.languages.textile.phrase.inside.table.inside.link = nestedPatterns.link;\n      Prism.languages.textile.phrase.inside.table.inside.image = nestedPatterns.image;\n      Prism.languages.textile.phrase.inside.table.inside.footnote = nestedPatterns.footnote;\n      Prism.languages.textile.phrase.inside.table.inside.acronym = nestedPatterns.acronym;\n      Prism.languages.textile.phrase.inside.table.inside.mark = nestedPatterns.mark;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":263,"files":[{"filePath":"node_modules/reprism/languages/textile.js","startLine":1,"endLine":263},{"filePath":"node_modules/reprism/lib/languages/textile.js","startLine":1,"endLine":263}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'tcl',\n  init: function init(Prism) {\n    Prism.languages.tcl = {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n        greedy: true\n      },\n      variable: [{\n        pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n        lookbehind: true\n      }, {\n        pattern: /(\\$){[^}]+}/,\n        lookbehind: true\n      }, {\n        pattern: /(^\\s*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n        lookbehind: true\n      }],\n      function: {\n        pattern: /(^\\s*proc[ \\t]+)[^\\s]+/m,\n        lookbehind: true\n      },\n      builtin: [{\n        pattern: /(^\\s*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,\n        lookbehind: true\n      }, /\\b(?:elseif|else)\\b/],\n      scope: {\n        pattern: /(^\\s*)(?:global|upvar|variable)\\b/m,\n        lookbehind: true,\n        alias: 'constant'\n      },\n      keyword: {\n        pattern: /(^\\s*|\\[)(?:after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n        lookbehind: true\n      },\n      operator: /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,\n      punctuation: /[{}()\\[\\]]/\n    };\n  }\n};","nrTokens":0,"nrLines":49,"files":[{"filePath":"node_modules/reprism/languages/tcl.js","startLine":1,"endLine":49},{"filePath":"node_modules/reprism/lib/languages/tcl.js","startLine":1,"endLine":49}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'swift',\n  init: function init(Prism) {\n    // issues: nested multiline comments\n    Prism.languages.swift = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n            inside: {\n              delimiter: {\n                pattern: /^\\\\\\(|\\)$/,\n                alias: 'variable'\n              }\n              // See rest below\n            }\n          }\n        }\n      },\n      keyword: /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|Protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n      number: /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n      constant: /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n      atrule: /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n      builtin: /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n    });\n    Prism.languages.swift.string.inside.interpolation.inside.rest = Prism.languages.swift;\n  }\n};","nrTokens":0,"nrLines":35,"files":[{"filePath":"node_modules/reprism/languages/swift.js","startLine":1,"endLine":35},{"filePath":"node_modules/reprism/lib/languages/swift.js","startLine":1,"endLine":35}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'stylus',\n  init: function init(Prism) {\n    (function (Prism) {\n      var inside = {\n        url: /url\\(([\"']?).*?\\1\\)/i,\n        string: {\n          pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n          greedy: true\n        },\n        interpolation: null, // See below\n        func: null, // See below\n        important: /\\B!(?:important|optional)\\b/i,\n        keyword: {\n          pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n          lookbehind: true\n        },\n        hexcode: /#[\\da-f]{3,6}/i,\n        number: /\\b\\d+(?:\\.\\d+)?%?/,\n        boolean: /\\b(?:true|false)\\b/,\n        operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n        punctuation: /[{}()\\[\\];:,]/\n      };\n\n      inside.interpolation = {\n        pattern: /\\{[^\\r\\n}:]+\\}/,\n        alias: 'variable',\n        inside: {\n          delimiter: {\n            pattern: /^{|}$/,\n            alias: 'punctuation'\n          },\n          rest: inside\n        }\n      };\n      inside.func = {\n        pattern: /[\\w-]+\\([^)]*\\).*/,\n        inside: {\n          function: /^[^(]+/,\n          rest: inside\n        }\n      };\n\n      Prism.languages.stylus = {\n        comment: {\n          pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n          lookbehind: true\n        },\n        'atrule-declaration': {\n          pattern: /(^\\s*)@.+/m,\n          lookbehind: true,\n          inside: {\n            atrule: /^@[\\w-]+/,\n            rest: inside\n          }\n        },\n        'variable-declaration': {\n          pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n          lookbehind: true,\n          inside: {\n            variable: /^\\S+/,\n            rest: inside\n          }\n        },\n\n        statement: {\n          pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\S+/,\n            rest: inside\n          }\n        },\n\n        // A property/value pair cannot end with a comma or a brace\n        // It cannot have indented content unless it ended with a semicolon\n        'property-declaration': {\n          pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n          lookbehind: true,\n          inside: {\n            property: {\n              pattern: /^[^\\s:]+/,\n              inside: {\n                interpolation: inside.interpolation\n              }\n            },\n            rest: inside\n          }\n        },\n\n        // A selector can contain parentheses only as part of a pseudo-element\n        // It can span multiple lines.\n        // It must end with a comma or an accolade or have indented content.\n        selector: {\n          pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n          lookbehind: true,\n          inside: {\n            interpolation: inside.interpolation,\n            punctuation: /[{},]/\n          }\n        },\n\n        func: inside.func,\n        string: inside.string,\n        interpolation: inside.interpolation,\n        punctuation: /[{}()\\[\\];:.]/\n      };\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":118,"files":[{"filePath":"node_modules/reprism/languages/stylus.js","startLine":1,"endLine":118},{"filePath":"node_modules/reprism/lib/languages/stylus.js","startLine":1,"endLine":118}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'soy',\n  init: function init(Prism) {\n    (function (Prism) {\n      var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n      var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n\n      Prism.languages.soy = {\n        comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }],\n        'command-arg': {\n          pattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        parameter: {\n          pattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n          lookbehind: true,\n          alias: 'variable'\n        },\n        keyword: [{\n          pattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        }, /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/],\n        delimiter: {\n          pattern: /^{+\\/?|\\/?}+$/,\n          alias: 'punctuation'\n        },\n        property: /\\w+(?==)/,\n        variable: {\n          pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n          inside: {\n            string: {\n              pattern: stringPattern,\n              greedy: true\n            },\n            number: numberPattern,\n            punctuation: /[\\[\\].?]/\n          }\n        },\n        string: {\n          pattern: stringPattern,\n          greedy: true\n        },\n        function: [/\\w+(?=\\()/, {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }],\n        boolean: /\\b(?:true|false)\\b/,\n        number: numberPattern,\n        operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n        punctuation: /[{}()\\[\\]|.,:]/\n\n        // Tokenize all inline Soy expressions\n      };Prism.hooks.add('before-tokenize', function (env) {\n        var soyPattern = /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g;\n        var soyLitteralStart = '{literal}';\n        var soyLitteralEnd = '{/literal}';\n        var soyLitteralMode = false;\n\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'soy', soyPattern, function (match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false;\n          }\n\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true;\n            }\n\n            return true;\n          }\n          return false;\n        });\n      });\n\n      // Re-insert the tokens after tokenizing\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":95,"files":[{"filePath":"node_modules/reprism/languages/soy.js","startLine":1,"endLine":95},{"filePath":"node_modules/reprism/lib/languages/soy.js","startLine":1,"endLine":95}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'smarty',\n  init: function init(Prism) {\n    /* TODO\n    Add support for variables inside double quoted strings\n    Add support for {php}\n    */\n\n    (function (Prism) {\n      Prism.languages.smarty = {\n        comment: /\\{\\*[\\s\\S]*?\\*\\}/,\n        delimiter: {\n          pattern: /^\\{|\\}$/i,\n          alias: 'punctuation'\n        },\n        string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        variable: [/\\$(?!\\d)\\w+/, /#(?!\\d)\\w+#/, {\n          pattern: /(\\.|->)(?!\\d)\\w+/,\n          lookbehind: true\n        }, {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }],\n        function: [{\n          pattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n          lookbehind: true\n        }, /^\\/?(?!\\d)\\w+/, /(?!\\d)\\w+(?=\\()/],\n        'attr-name': {\n          // Value is made optional because it may have already been tokenized\n          pattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n          inside: {\n            variable: {\n              pattern: /(=\\s*)(?!\\d)\\w+/,\n              lookbehind: true\n            },\n            operator: /=/\n          }\n        },\n        punctuation: [/[\\[\\]().,:`]|->/],\n        operator: [/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/, /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/, /\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/],\n        keyword: /\\b(?:false|off|on|no|true|yes)\\b/\n\n        // Comments are inserted at top so that they can\n        // surround markup\n      };Prism.languages.insertBefore('smarty', 'tag', {\n        'smarty-comment': {\n          pattern: /\\{\\*[\\s\\S]*?\\*\\}/,\n          alias: ['smarty', 'comment']\n        }\n      });\n\n      // Tokenize all inline Smarty expressions\n      Prism.hooks.add('before-tokenize', function (env) {\n        var smartyPattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g;\n        var smartyLitteralStart = '{literal}';\n        var smartyLitteralEnd = '{/literal}';\n        var smartyLitteralMode = false;\n\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'smarty', smartyPattern, function (match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLitteralEnd) {\n            smartyLitteralMode = false;\n          }\n\n          if (!smartyLitteralMode) {\n            if (match === smartyLitteralStart) {\n              smartyLitteralMode = true;\n            }\n\n            return true;\n          }\n          return false;\n        });\n      });\n\n      // Re-insert the tokens after tokenizing\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":88,"files":[{"filePath":"node_modules/reprism/languages/smarty.js","startLine":1,"endLine":88},{"filePath":"node_modules/reprism/lib/languages/smarty.js","startLine":1,"endLine":88}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'smalltalk',\n  init: function init(Prism) {\n    Prism.languages.smalltalk = {\n      comment: /\"(?:\"\"|[^\"])+\"/,\n      string: /'(?:''|[^'])+'/,\n      symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n      'block-arguments': {\n        pattern: /(\\[\\s*):[^\\[|]*\\|/,\n        lookbehind: true,\n        inside: {\n          variable: /:[\\da-z]+/i,\n          punctuation: /\\|/\n        }\n      },\n      'temporary-variables': {\n        pattern: /\\|[^|]+\\|/,\n        inside: {\n          variable: /[\\da-z]+/i,\n          punctuation: /\\|/\n        }\n      },\n      keyword: /\\b(?:nil|true|false|self|super|new)\\b/,\n      character: {\n        pattern: /\\$./,\n        alias: 'string'\n      },\n      number: [/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/, /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/],\n      operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n      punctuation: /[.;:?\\[\\](){}]/\n    };\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/languages/smalltalk.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/smalltalk.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'scss',\n  init: function init(Prism) {\n    Prism.languages.scss = Prism.languages.extend('css', {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      atrule: {\n        pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n        inside: {\n          rule: /@[\\w-]+/\n          // See rest below\n        }\n      },\n      // url, compassified\n      url: /(?:[-a-z]+-)*url(?=\\()/i,\n      // CSS selector regex is not appropriate for Sass\n      // since there can be lot more things (var, @ directive, nesting..)\n      // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n      // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n      // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n      // can \"pass\" as a selector- e.g: proper#{$erty})\n      // this one was hard to do, so please be careful if you edit this one :)\n      selector: {\n        // Initial look-ahead is used to prevent matching of blank selectors\n        pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n        inside: {\n          parent: {\n            pattern: /&/,\n            alias: 'important'\n          },\n          placeholder: /%[-\\w]+/,\n          variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n        }\n      }\n    });\n\n    Prism.languages.insertBefore('scss', 'atrule', {\n      keyword: [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n        pattern: /( +)(?:from|through)(?= )/,\n        lookbehind: true\n      }]\n    });\n\n    Prism.languages.scss.property = {\n      pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    };\n\n    Prism.languages.insertBefore('scss', 'important', {\n      // var and interpolated vars\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    });\n\n    Prism.languages.insertBefore('scss', 'function', {\n      placeholder: {\n        pattern: /%[-\\w]+/,\n        alias: 'selector'\n      },\n      statement: {\n        pattern: /\\B!(?:default|optional)\\b/i,\n        alias: 'keyword'\n      },\n      boolean: /\\b(?:true|false)\\b/,\n      null: /\\bnull\\b/,\n      operator: {\n        pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n        lookbehind: true\n      }\n    });\n\n    Prism.languages.scss.atrule.inside.rest = Prism.languages.scss;\n  }\n};","nrTokens":0,"nrLines":82,"files":[{"filePath":"node_modules/reprism/languages/scss.js","startLine":1,"endLine":82},{"filePath":"node_modules/reprism/lib/languages/scss.js","startLine":1,"endLine":82}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'scheme',\n  init: function init(Prism) {\n    Prism.languages.scheme = {\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'[^('\\s]*/,\n        greedy: true\n      },\n      keyword: {\n        pattern: /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)/,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)/,\n        lookbehind: true\n      },\n      number: {\n        pattern: /(\\s|[()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\n        lookbehind: true\n      },\n      boolean: /#[tf]/,\n      operator: {\n        pattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(\\()[^\\s()]*(?=\\s)/,\n        lookbehind: true\n      },\n      punctuation: /[()]/\n    };\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/languages/scheme.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/scheme.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'scala',\n  init: function init(Prism) {\n    Prism.languages.scala = Prism.languages.extend('java', {\n      keyword: /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n      string: [{\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      }, {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }],\n      builtin: /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n      number: /\\b0x[\\da-f]*\\.?[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n      symbol: /'[^\\d\\s\\\\]\\w*/\n    });\n    delete Prism.languages.scala['class-name'];\n    delete Prism.languages.scala.function;\n  }\n};","nrTokens":0,"nrLines":25,"files":[{"filePath":"node_modules/reprism/languages/scala.js","startLine":1,"endLine":25},{"filePath":"node_modules/reprism/lib/languages/scala.js","startLine":1,"endLine":25}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'sass',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.sass = Prism.languages.extend('css', {\n        // Sass comments don't need to be closed, only indented\n        comment: {\n          pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n          lookbehind: true\n        }\n      });\n\n      Prism.languages.insertBefore('sass', 'atrule', {\n        // We want to consume the whole line\n        'atrule-line': {\n          // Includes support for = and + shortcuts\n          pattern: /^(?:[ \\t]*)[@+=].+/m,\n          inside: {\n            atrule: /(?:@[\\w-]+|[+=])/m\n          }\n        }\n      });\n      delete Prism.languages.sass.atrule;\n\n      var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n      var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n        pattern: /(\\s+)-(?=\\s)/,\n        lookbehind: true\n      }];\n\n      Prism.languages.insertBefore('sass', 'property', {\n        // We want to consume the whole line\n        'variable-line': {\n          pattern: /^[ \\t]*\\$.+/m,\n          inside: {\n            punctuation: /:/,\n            variable: variable,\n            operator: operator\n          }\n        },\n        // We want to consume the whole line\n        'property-line': {\n          pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n          inside: {\n            property: [/[^:\\s]+(?=\\s*:)/, {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }],\n            punctuation: /:/,\n            variable: variable,\n            operator: operator,\n            important: Prism.languages.sass.important\n          }\n        }\n      });\n      delete Prism.languages.sass.property;\n      delete Prism.languages.sass.important;\n\n      // Now that whole lines for other patterns are consumed,\n      // what's left should be selectors\n      delete Prism.languages.sass.selector;\n      Prism.languages.insertBefore('sass', 'punctuation', {\n        selector: {\n          pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n          lookbehind: true\n        }\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":75,"files":[{"filePath":"node_modules/reprism/languages/sass.js","startLine":1,"endLine":75},{"filePath":"node_modules/reprism/lib/languages/sass.js","startLine":1,"endLine":75}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'sas',\n  init: function init(Prism) {\n    Prism.languages.sas = {\n      datalines: {\n        pattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,\n        alias: 'string',\n        inside: {\n          keyword: {\n            pattern: /^(\\s*)(?:(?:data)?lines|cards)/i,\n            lookbehind: true\n          },\n          punctuation: /;/\n        }\n      },\n      comment: [{\n        pattern: /(^\\s*|;\\s*)\\*.*;/m,\n        lookbehind: true\n      }, /\\/\\*[\\s\\S]+?\\*\\//],\n      datetime: {\n        // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n        pattern: /'[^']+'(?:dt?|t)\\b/i,\n        alias: 'number'\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n        greedy: true\n      },\n      keyword: /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then)\\b/i,\n      // Decimal (1.2e23), hexadecimal (0c1x)\n      number: /\\b(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,\n      operator: /\\*\\*?|\\|\\|?|!!?|?????|<[>=]?|>[<=]?|[-+\\/=&]|[~??^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n      punctuation: /[$%@.(){}\\[\\];,\\\\]/\n    };\n  }\n};","nrTokens":0,"nrLines":41,"files":[{"filePath":"node_modules/reprism/languages/sas.js","startLine":1,"endLine":41},{"filePath":"node_modules/reprism/lib/languages/sas.js","startLine":1,"endLine":41}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'rust',\n  init: function init(Prism) {\n    /* TODO\n    Add support for Markdown notation inside doc comments\n    Add support for nested block comments...\n    Match closure params even when not followed by dash or brace\n    Add better support for macro definition\n    */\n\n    Prism.languages.rust = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true\n      }],\n      string: [{\n        pattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\n        greedy: true\n      }, {\n        pattern: /b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      }],\n      char: {\n        pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,\n        alias: 'string'\n      },\n      'lifetime-annotation': {\n        pattern: /'[^\\s>']+/,\n        alias: 'symbol'\n      },\n      keyword: /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n\n      attribute: {\n        pattern: /#!?\\[.+?\\]/,\n        greedy: true,\n        alias: 'attr-name'\n      },\n\n      function: [/\\w+(?=\\s*\\()/,\n      // Macros can use parens or brackets\n      /\\w+!(?=\\s*\\(|\\[)/],\n      'macro-rules': {\n        pattern: /\\w+!/,\n        alias: 'function'\n      },\n\n      // Hex, oct, bin, dec numbers with visual separators and type suffix\n      number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\n\n      // Closure params should not be confused with bitwise OR |\n      'closure-params': {\n        pattern: /\\|[^|]*\\|(?=\\s*[{-])/,\n        inside: {\n          punctuation: /[|:,]/,\n          operator: /[&*]/\n        }\n      },\n      punctuation: /[{}[\\];(),:]|\\.+|->/,\n      operator: /[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\n    };\n  }\n};","nrTokens":0,"nrLines":70,"files":[{"filePath":"node_modules/reprism/languages/rust.js","startLine":1,"endLine":70},{"filePath":"node_modules/reprism/lib/languages/rust.js","startLine":1,"endLine":70}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ruby',\n  init: function init(Prism) {\n    /**\n     * Original by Samuel Flores\n     *\n     * Adds the following new token classes:\n     * \t\tconstant, builtin, variable, symbol, regex\n     */\n    (function (Prism) {\n      Prism.languages.ruby = Prism.languages.extend('clike', {\n        comment: [/#.*/, {\n          pattern: /^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end/m,\n          greedy: true\n        }],\n        keyword: /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n      });\n\n      var interpolation = {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'tag'\n          },\n          rest: Prism.languages.ruby\n        }\n      };\n\n      Prism.languages.insertBefore('ruby', 'keyword', {\n        regex: [{\n          pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          // Here we need to specifically allow interpolation\n          pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }, {\n          pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n          lookbehind: true,\n          greedy: true\n        }],\n        variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n        symbol: {\n          pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n          lookbehind: true\n        }\n      });\n\n      Prism.languages.insertBefore('ruby', 'number', {\n        builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n        constant: /\\b[A-Z]\\w*(?:[?!]|\\b)/\n      });\n\n      Prism.languages.ruby.string = [{\n        pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        // Here we need to specifically allow interpolation\n        pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }];\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":124,"files":[{"filePath":"node_modules/reprism/languages/ruby.js","startLine":1,"endLine":124},{"filePath":"node_modules/reprism/lib/languages/ruby.js","startLine":1,"endLine":124}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'roboconf',\n  init: function init(Prism) {\n    Prism.languages.roboconf = {\n      comment: /#.*/,\n      keyword: {\n        pattern: /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,\n        lookbehind: true\n      },\n      component: {\n        pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n        alias: 'variable'\n      },\n      property: /[\\w.-]+(?=[ \\t]*:)/,\n      value: {\n        pattern: /(=[ \\t]*)[^,;]+/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      optional: {\n        pattern: /\\(optional\\)/,\n        alias: 'builtin'\n      },\n      wildcard: {\n        pattern: /(\\.)\\*/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      punctuation: /[{},.;:=]/\n    };\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/languages/roboconf.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/roboconf.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'rip',\n  init: function init(Prism) {\n    Prism.languages.rip = {\n      comment: /#.*/,\n\n      keyword: /(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,\n\n      builtin: /@|\\bSystem\\b/,\n\n      boolean: /\\b(?:true|false)\\b/,\n\n      date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n      time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n      datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n\n      character: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n\n      regex: {\n        pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/(?=\\s*($|[\\r\\n,.;})]))/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      number: /[+-]?(?:(?:\\d+\\.\\d+)|(?:\\d+))/,\n\n      punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n\n      reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n    };\n  }\n};","nrTokens":0,"nrLines":42,"files":[{"filePath":"node_modules/reprism/languages/rip.js","startLine":1,"endLine":42},{"filePath":"node_modules/reprism/lib/languages/rip.js","startLine":1,"endLine":42}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'rest',\n  init: function init(Prism) {\n    Prism.languages.rest = {\n      table: [{\n        pattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      }, {\n        pattern: /(\\s*)(?:=+ +)+=+(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }],\n\n      // Directive-like patterns\n\n      'substitution-def': {\n        pattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n        lookbehind: true,\n        inside: {\n          substitution: {\n            pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n            alias: 'attr-value',\n            inside: {\n              punctuation: /^\\||\\|$/\n            }\n          },\n          directive: {\n            pattern: /( +)[^:]+::/,\n            lookbehind: true,\n            alias: 'function',\n            inside: {\n              punctuation: /::$/\n            }\n          }\n        }\n      },\n      'link-target': [{\n        pattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      }, {\n        pattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }],\n      directive: {\n        pattern: /(^\\s*\\.\\. )[^:]+::/m,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          punctuation: /::$/\n        }\n      },\n      comment: {\n        // The two alternatives try to prevent highlighting of blank comments\n        pattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n        lookbehind: true\n      },\n\n      title: [\n      // Overlined and underlined\n      {\n        pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      },\n\n      // Underlined only\n      {\n        pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }],\n      hr: {\n        pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      field: {\n        pattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n        lookbehind: true,\n        alias: 'attr-name'\n      },\n      'command-line-option': {\n        pattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'literal-block': {\n        pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n        inside: {\n          'literal-block-punctuation': {\n            pattern: /^::/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      'quoted-literal-block': {\n        pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n        inside: {\n          'literal-block-punctuation': {\n            pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n            alias: 'punctuation'\n          }\n        }\n      },\n      'list-bullet': {\n        pattern: /(^\\s*)(?:[*+\\-?????????]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'doctest-block': {\n        pattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /^>>>/\n        }\n      },\n\n      inline: [{\n        pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }],\n\n      link: [{\n        pattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      }, {\n        pattern: /(?:\\b[a-z\\d](?:[_.:+]?[a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }],\n\n      // Line block start,\n      // quote attribution,\n      // explicit markup start,\n      // and anonymous hyperlink target shortcut (__)\n      punctuation: {\n        pattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|???|\\.\\.|__)(?= )|\\.\\.$)/m,\n        lookbehind: true\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":203,"files":[{"filePath":"node_modules/reprism/languages/rest.js","startLine":1,"endLine":203},{"filePath":"node_modules/reprism/lib/languages/rest.js","startLine":1,"endLine":203}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'renpy',\n  init: function init(Prism) {\n    Prism.languages.renpy = {\n      // TODO Write tests.\n\n      comment: {\n        pattern: /(^|[^\\\\])#.+/,\n        lookbehind: true\n      },\n\n      string: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2|(?:^#?(?:(?:[0-9a-fA-F]{2}){3}|(?:[0-9a-fA-F]){3})$)/m,\n        greedy: true\n      },\n\n      function: /[a-z_]\\w*(?=\\()/i,\n\n      property: /\\b(?:insensitive|idle|hover|selected_idle|selected_hover|background|position|alt|xpos|ypos|pos|xanchor|yanchor|anchor|xalign|yalign|align|xcenter|ycenter|xofsset|yoffset|ymaximum|maximum|xmaximum|xminimum|yminimum|minimum|xsize|ysizexysize|xfill|yfill|area|antialias|black_color|bold|caret|color|first_indent|font|size|italic|justify|kerning|language|layout|line_leading|line_overlap_split|line_spacing|min_width|newline_indent|outlines|rest_indent|ruby_style|slow_cps|slow_cps_multiplier|strikethrough|text_align|underline|hyperlink_functions|vertical|hinting|foreground|left_margin|xmargin|top_margin|bottom_margin|ymargin|left_padding|right_padding|xpadding|top_padding|bottom_padding|ypadding|size_group|child|hover_sound|activate_sound|mouse|focus_mask|keyboard_focus|bar_vertical|bar_invert|bar_resizing|left_gutter|right_gutter|top_gutter|bottom_gutter|left_bar|right_bar|top_bar|bottom_bar|thumb|thumb_shadow|thumb_offset|unscrollable|spacing|first_spacing|box_reverse|box_wrap|order_reverse|fit_first|ysize|thumbnail_width|thumbnail_height|help|text_ypos|text_xpos|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|alpha|insensitive_background|hover_background|zorder|value|width|xadjustment|xanchoraround|xaround|xinitial|xoffset|xzoom|yadjustment|yanchoraround|yaround|yinitial|yzoom|zoom|ground|height|text_style|text_y_fudge|selected_insensitive|has_sound|has_music|has_voice|focus|hovered|image_style|length|minwidth|mousewheel|offset|prefix|radius|range|right_margin|rotate|rotate_pad|developer|screen_width|screen_height|window_title|name|version|windows_icon|default_fullscreen|default_text_cps|default_afm_time|main_menu_music|sample_sound|enter_sound|exit_sound|save_directory|enter_transition|exit_transition|intra_transition|main_game_transition|game_main_transition|end_splash_transition|end_game_transition|after_load_transition|window_show_transition|window_hide_transition|adv_nvl_transition|nvl_adv_transition|enter_yesno_transition|exit_yesno_transition|enter_replay_transition|exit_replay_transition|say_attribute_transition|directory_name|executable_name|include_update|window_icon|modal|google_play_key|google_play_salt|drag_name|drag_handle|draggable|dragged|droppable|dropped|narrator_menu|action|default_afm_enable|version_name|version_tuple|inside|fadeout|fadein|layers|layer_clipping|linear|scrollbars|side_xpos|side_ypos|side_spacing|edgescroll|drag_joined|drag_raise|drop_shadow|drop_shadow_color|subpixel|easein|easeout|time|crop|auto|update|get_installed_packages|can_update|UpdateVersion|Update|overlay_functions|translations|window_left_padding|show_side_image|show_two_window)\\b/,\n\n      tag: /\\b(?:label|image|menu|[hv]box|frame|text|imagemap|imagebutton|bar|vbar|screen|textbutton|buttoscreenn|fixed|grid|input|key|mousearea|side|timer|viewport|window|hotspot|hotbar|self|button|drag|draggroup|tag|mm_menu_frame|nvl|block|parallel)\\b|\\$/,\n\n      keyword: /\\b(?:as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|yield|adjustment|alignaround|allow|angle|around|box_layout|cache|changed|child_size|clicked|clipping|corner1|corner2|default|delay|exclude|scope|slow|slow_abortable|slow_done|sound|style_group|substitute|suffix|transform_anchor|transpose|unhovered|config|theme|mm_root|gm_root|rounded_window|build|disabled_text|disabled|widget_selected|widget_text|widget_hover|widget|updater|behind|call|expression|hide|init|jump|onlayer|python|renpy|scene|set|show|transform|play|queue|stop|pause|define|window|repeat|contains|choice|on|function|event|animation|clockwise|counterclockwise|circles|knot|null|None|random|has|add|use|fade|dissolve|style|store|id|voice|center|left|right|less_rounded|music|movie|clear|persistent|ui)\\b/,\n\n      boolean: /\\b(?:[Tt]rue|[Ff]alse)\\b/,\n\n      number: /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at)\\b/,\n\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/languages/renpy.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/renpy.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'reason',\n  init: function init(Prism) {\n    Prism.languages.reason = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      // 'class-name' must be matched *after* 'constructor' defined below\n      'class-name': /\\b[A-Z]\\w*/,\n      keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n      operator: /\\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n    });\n    Prism.languages.insertBefore('reason', 'class-name', {\n      character: {\n        pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n        alias: 'string'\n      },\n      constructor: {\n        // Negative look-ahead prevents from matching things like String.capitalize\n        pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n        alias: 'variable'\n      },\n      label: {\n        pattern: /\\b[a-z]\\w*(?=::)/,\n        alias: 'symbol'\n      }\n    });\n\n    // We can't match functions property, so let's not even try.\n    delete Prism.languages.reason.function;\n  }\n};","nrTokens":0,"nrLines":42,"files":[{"filePath":"node_modules/reprism/languages/reason.js","startLine":1,"endLine":42},{"filePath":"node_modules/reprism/lib/languages/reason.js","startLine":1,"endLine":42}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'r',\n  init: function init(Prism) {\n    Prism.languages.r = {\n      comment: /#.*/,\n      string: {\n        pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      'percent-operator': {\n        // Includes user-defined operators\n        // and %%, %*%, %/%, %in%, %o%, %x%\n        pattern: /%[^%\\s]*%/,\n        alias: 'operator'\n      },\n      boolean: /\\b(?:TRUE|FALSE)\\b/,\n      ellipsis: /\\.\\.(?:\\.|\\d+)/,\n      number: [/\\b(?:NaN|Inf)\\b/, /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/],\n      keyword: /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n      operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n      punctuation: /[(){}\\[\\],;]/\n    };\n  }\n};","nrTokens":0,"nrLines":29,"files":[{"filePath":"node_modules/reprism/languages/r.js","startLine":1,"endLine":29},{"filePath":"node_modules/reprism/lib/languages/r.js","startLine":1,"endLine":29}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'qore',\n  init: function init(Prism) {\n    Prism.languages.qore = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      // Overridden to allow unescaped multi-line strings\n      string: {\n        pattern: /(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      variable: /\\$(?!\\d)\\w+\\b/,\n      keyword: /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n      number: /\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,\n      boolean: /\\b(?:true|false)\\b/i,\n      operator: {\n        pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n        lookbehind: true\n      },\n      function: /\\$?\\b(?!\\d)\\w+(?=\\()/\n    });\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/qore.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/qore.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'q',\n  init: function init(Prism) {\n    Prism.languages.q = {\n      string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      comment: [\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n      {\n        pattern: /([\\t )\\]}])\\/.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n      {\n        pattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n      {\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n        greedy: true\n      }, {\n        pattern: /^#!.+/m,\n        greedy: true\n      }],\n      symbol: /`(?::\\S+|[\\w.]*)/,\n      datetime: {\n        pattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n        alias: 'number'\n      },\n      // The negative look-ahead prevents bad highlighting\n      // of verbs 0: and 1:\n      number: /\\b(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\\da-fA-F]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?[hjfeb]?)/,\n      keyword: /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n      adverb: {\n        pattern: /['\\/\\\\]:?|\\beach\\b/,\n        alias: 'function'\n      },\n      verb: {\n        pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?_~=|$&#@^]):?/,\n        alias: 'operator'\n      },\n      punctuation: /[(){}\\[\\];.]/\n    };\n  }\n};","nrTokens":0,"nrLines":58,"files":[{"filePath":"node_modules/reprism/languages/q.js","startLine":1,"endLine":58},{"filePath":"node_modules/reprism/lib/languages/q.js","startLine":1,"endLine":58}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'python',\n  init: function init(Prism) {\n    Prism.languages.python = {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      },\n      'triple-quoted-string': {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        greedy: true,\n        alias: 'string'\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      function: {\n        pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n        lookbehind: true\n      },\n      'class-name': {\n        pattern: /(\\bclass\\s+)\\w+/i,\n        lookbehind: true\n      },\n      keyword: /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,\n      builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n      boolean: /\\b(?:True|False|None)\\b/,\n      number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/languages/python.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/python.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'pure',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.pure = {\n        comment: [{\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true\n        }, {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true\n        }, /#!.+/],\n        'inline-lang': {\n          pattern: /%<[\\s\\S]+?%>/,\n          greedy: true,\n          inside: {\n            lang: {\n              pattern: /(^%< *)-\\*-.+?-\\*-/,\n              lookbehind: true,\n              alias: 'comment'\n            },\n            delimiter: {\n              pattern: /^%<.*|%>$/,\n              alias: 'punctuation'\n            }\n          }\n        },\n        string: {\n          pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n          greedy: true\n        },\n        number: {\n          // The look-behind prevents wrong highlighting of the .. operator\n          pattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,\n          lookbehind: true\n        },\n        keyword: /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n        function: /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n        special: {\n          pattern: /\\b__[a-z]+__\\b/i,\n          alias: 'builtin'\n        },\n        // Any combination of operator chars can be an operator\n        operator: /(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,\n        // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n        punctuation: /[(){}\\[\\];,|]/\n      };\n\n      var inlineLanguages = ['c', { lang: 'c++', alias: 'cpp' }, 'fortran', 'ats', 'dsp'];\n      var inlineLanguageRe = '%< *-\\\\*- *{lang}\\\\d* *-\\\\*-[\\\\s\\\\S]+?%>';\n\n      inlineLanguages.forEach(function (lang) {\n        var alias = lang;\n        if (typeof lang !== 'string') {\n          alias = lang.alias;\n          lang = lang.lang;\n        }\n        if (Prism.languages[alias]) {\n          var o = {};\n          o['inline-lang-' + alias] = {\n            pattern: RegExp(inlineLanguageRe.replace('{lang}', lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')), 'i'),\n            inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n          };\n          o['inline-lang-' + alias].inside.rest = Prism.util.clone(Prism.languages[alias]);\n          Prism.languages.insertBefore('pure', 'inline-lang', o);\n        }\n      });\n\n      // C is the default inline language\n      if (Prism.languages.c) {\n        Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(Prism.languages.c);\n      }\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":80,"files":[{"filePath":"node_modules/reprism/languages/pure.js","startLine":1,"endLine":80},{"filePath":"node_modules/reprism/lib/languages/pure.js","startLine":1,"endLine":80}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'puppet',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.puppet = {\n        heredoc: [\n        // Matches the content of a quoted heredoc string (subject to interpolation)\n        {\n          pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n            // See interpolation below\n          }\n        },\n        // Matches the content of an unquoted heredoc string (no interpolation)\n        {\n          pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n          }\n        },\n        // Matches the start tag of heredoc strings\n        {\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n          alias: 'string',\n          inside: {\n            punctuation: {\n              pattern: /(\\().+?(?=\\))/,\n              lookbehind: true\n            }\n          }\n        }],\n        'multiline-comment': {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        regex: {\n          // Must be prefixed with the keyword \"node\" or a non-word char\n          pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            // Extended regexes must have the x flag. They can contain single-line comments.\n            'extended-regex': {\n              pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n              inside: {\n                comment: /#.*/\n              }\n            }\n          }\n        },\n        comment: {\n          pattern: /(^|[^\\\\])#.*/,\n          lookbehind: true,\n          greedy: true\n        },\n        string: {\n          // Allow for one nested level of double quotes inside interpolation\n          pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n          greedy: true,\n          inside: {\n            'double-quoted': {\n              pattern: /^\"[\\s\\S]*\"$/,\n              inside: {\n                // See interpolation below\n              }\n            }\n          }\n        },\n        variable: {\n          pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n          inside: {\n            punctuation: /::/\n          }\n        },\n        'attr-name': /(?:\\w+|\\*)(?=\\s*=>)/,\n        function: [{\n          pattern: /(\\.)(?!\\d)\\w+/,\n          lookbehind: true\n        }, /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],\n        number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n        boolean: /\\b(?:true|false)\\b/,\n        // Includes words reserved for future use\n        keyword: /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n        datatype: {\n          pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n          alias: 'symbol'\n        },\n        operator: /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n        punctuation: /[\\[\\]{}().,;]|:+/\n      };\n\n      var interpolation = [{\n        // Allow for one nested level of braces inside interpolation\n        pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n        lookbehind: true,\n        inside: {\n          'short-variable': {\n            // Negative look-ahead prevent wrong highlighting of functions\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n            lookbehind: true,\n            alias: 'variable',\n            inside: {\n              punctuation: /::/\n            }\n          },\n          delimiter: {\n            pattern: /^\\$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.puppet\n        }\n      }, {\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          punctuation: /::/\n        }\n      }];\n      Prism.languages.puppet.heredoc[0].inside.interpolation = interpolation;\n      Prism.languages.puppet.string.inside['double-quoted'].inside.interpolation = interpolation;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":139,"files":[{"filePath":"node_modules/reprism/languages/puppet.js","startLine":1,"endLine":139},{"filePath":"node_modules/reprism/lib/languages/puppet.js","startLine":1,"endLine":139}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'pug',\n  init: function init(Prism) {\n    (function (Prism) {\n      // TODO:\n      // - Add CSS highlighting inside <style> tags\n      // - Add support for multi-line code blocks\n      // - Add support for interpolation #{} and !{}\n      // - Add support for tag interpolation #[]\n      // - Add explicit support for plain text using |\n      // - Add support for markup embedded in plain text\n\n      Prism.languages.pug = {\n        // Multiline stuff should appear before the rest\n\n        // This handles both single-line and multi-line comments\n        comment: {\n          pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\n          lookbehind: true\n        },\n\n        // All the tag-related part is in lookbehind\n        // so that it can be highlighted by the \"tag\" pattern\n        'multiline-script': {\n          pattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.javascript\n          }\n        },\n\n        // See at the end of the file for known filters\n        filter: {\n          pattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            }\n          }\n        },\n\n        'multiline-plain-text': {\n          pattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n          lookbehind: true\n        },\n        markup: {\n          pattern: /(^[\\t ]*)<.+/m,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.markup\n          }\n        },\n        doctype: {\n          pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n          lookbehind: true\n        },\n\n        // This handle all conditional and loop keywords\n        'flow-control': {\n          pattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n          lookbehind: true,\n          inside: {\n            each: {\n              pattern: /^each .+? in\\b/,\n              inside: {\n                keyword: /\\b(?:each|in)\\b/,\n                punctuation: /,/\n              }\n            },\n            branch: {\n              pattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n              alias: 'keyword'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        keyword: {\n          pattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n          lookbehind: true\n        },\n        mixin: [\n        // Declaration\n        {\n          pattern: /(^[\\t ]*)mixin .+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^mixin/,\n            function: /\\w+(?=\\s*\\(|\\s*$)/,\n            punctuation: /[(),.]/\n          }\n        },\n        // Usage\n        {\n          pattern: /(^[\\t ]*)\\+.+/m,\n          lookbehind: true,\n          inside: {\n            name: {\n              pattern: /^\\+\\w+/,\n              alias: 'function'\n            },\n            rest: Prism.languages.javascript\n          }\n        }],\n        script: {\n          pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.javascript\n          }\n        },\n\n        'plain-text': {\n          pattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\n          lookbehind: true\n        },\n        tag: {\n          pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n          lookbehind: true,\n          inside: {\n            attributes: [{\n              pattern: /&[^(]+\\([^)]+\\)/,\n              inside: {\n                rest: Prism.languages.javascript\n              }\n            }, {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                  lookbehind: true,\n                  inside: {\n                    rest: Prism.languages.javascript\n                  }\n                },\n                'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[!=(),]+/\n              }\n            }],\n            punctuation: /:/\n          }\n        },\n        code: [{\n          pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.javascript\n          }\n        }],\n        punctuation: /[.\\-!=|]+/\n      };\n\n      var filter_pattern = '(^([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r(?!\\\\n))(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\n\n      // Non exhaustive list of available filters and associated languages\n      var filters = [{ filter: 'atpl', language: 'twig' }, { filter: 'coffee', language: 'coffeescript' }, 'ejs', 'handlebars', 'hogan', 'less', 'livescript', 'markdown', 'mustache', 'plates', { filter: 'sass', language: 'scss' }, 'stylus', 'swig'];\n      var all_filters = {};\n      for (var i = 0, l = filters.length; i < l; i++) {\n        var filter = filters[i];\n        filter = typeof filter === 'string' ? { filter: filter, language: filter } : filter;\n        if (Prism.languages[filter.language]) {\n          all_filters['filter-' + filter.filter] = {\n            pattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter), 'm'),\n            lookbehind: true,\n            inside: {\n              'filter-name': {\n                pattern: /^:[\\w-]+/,\n                alias: 'variable'\n              },\n              rest: Prism.languages[filter.language]\n            }\n          };\n        }\n      }\n\n      Prism.languages.insertBefore('pug', 'filter', all_filters);\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":185,"files":[{"filePath":"node_modules/reprism/languages/pug.js","startLine":1,"endLine":185},{"filePath":"node_modules/reprism/lib/languages/pug.js","startLine":1,"endLine":185}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'protobuf',\n  init: function init(Prism) {\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\n      keyword: /\\b(?:package|import|message|enum)\\b/,\n      builtin: /\\b(?:required|repeated|optional|reserved)\\b/,\n      primitive: {\n        pattern: /\\b(?:double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b/,\n        alias: 'symbol'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/reprism/languages/protobuf.js","startLine":1,"endLine":18},{"filePath":"node_modules/reprism/lib/languages/protobuf.js","startLine":1,"endLine":18}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'properties',\n  init: function init(Prism) {\n    Prism.languages.properties = {\n      comment: /^[ \\t]*[#!].*$/m,\n      'attr-value': {\n        pattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n        lookbehind: true\n      },\n      'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )/m,\n      punctuation: /[=:]/\n    };\n  }\n};","nrTokens":0,"nrLines":19,"files":[{"filePath":"node_modules/reprism/languages/properties.js","startLine":1,"endLine":19},{"filePath":"node_modules/reprism/lib/languages/properties.js","startLine":1,"endLine":19}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'prolog',\n  init: function init(Prism) {\n    Prism.languages.prolog = {\n      // Syntax depends on the implementation\n      comment: [/%.+/, /\\/\\*[\\s\\S]*?\\*\\//],\n      // Depending on the implementation, strings may allow escaped newlines and quote-escape\n      string: {\n        pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n      variable: /\\b[A-Z_]\\w*/,\n      // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n      function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n      number: /\\b\\d+\\.?\\d*/,\n      // Custom operators are allowed\n      operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n      punctuation: /[(){}\\[\\],]/\n    };\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/languages/prolog.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/prolog.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'processing',\n  init: function init(Prism) {\n    Prism.languages.processing = Prism.languages.extend('clike', {\n      keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n      operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n    });\n    Prism.languages.insertBefore('processing', 'number', {\n      // Special case: XML is a type\n      constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n      type: {\n        pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n        alias: 'variable'\n      }\n    });\n\n    // Spaces are allowed between function name and parenthesis\n    Prism.languages.processing.function.pattern = /\\w+(?=\\s*\\()/;\n\n    // Class-names is not styled by default\n    Prism.languages.processing['class-name'].alias = 'variable';\n  }\n};","nrTokens":0,"nrLines":28,"files":[{"filePath":"node_modules/reprism/languages/processing.js","startLine":1,"endLine":28},{"filePath":"node_modules/reprism/lib/languages/processing.js","startLine":1,"endLine":28}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'powershell',\n  init: function init(Prism) {\n    Prism.languages.powershell = {\n      comment: [{\n        pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^`])#.*/,\n        lookbehind: true\n      }],\n      string: [{\n        pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n        greedy: true,\n        inside: {\n          function: {\n            pattern: /(^|[^`])\\$\\(.*?\\)/,\n            lookbehind: true,\n            // Populated at end of file\n            inside: {}\n          }\n        }\n      }, {\n        pattern: /'(?:[^']|'')*'/,\n        greedy: true\n      }],\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*]|[^\\[\\]])*]|[^\\[\\]])*]/i,\n      boolean: /\\$(?:true|false)\\b/i,\n      variable: /\\$\\w+\\b/i,\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      function: [/\\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i, /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i],\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n      keyword: /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n      operator: {\n        pattern: /(\\W?)(?:!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n        lookbehind: true\n      },\n      punctuation: /[|{}[\\];(),.]/\n\n      // Variable interpolation inside strings, and nested expressions\n    };Prism.languages.powershell.string[0].inside.boolean = Prism.languages.powershell.boolean;\n    Prism.languages.powershell.string[0].inside.variable = Prism.languages.powershell.variable;\n    Prism.languages.powershell.string[0].inside.function.inside = Prism.languages.powershell;\n  }\n};","nrTokens":0,"nrLines":54,"files":[{"filePath":"node_modules/reprism/languages/powershell.js","startLine":1,"endLine":54},{"filePath":"node_modules/reprism/lib/languages/powershell.js","startLine":1,"endLine":54}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'plsql',\n  init: function init(Prism) {\n    Prism.languages.plsql = Prism.languages.extend('sql', {\n      comment: [/\\/\\*[\\s\\S]*?\\*\\//, /--.*/]\n    });\n\n    if (Prism.util.type(Prism.languages.plsql.keyword) !== 'Array') {\n      Prism.languages.plsql.keyword = [Prism.languages.plsql.keyword];\n    }\n    Prism.languages.plsql.keyword.unshift(/\\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\\b/i);\n\n    if (Prism.util.type(Prism.languages.plsql.operator) !== 'Array') {\n      Prism.languages.plsql.operator = [Prism.languages.plsql.operator];\n    }\n    Prism.languages.plsql.operator.unshift(/:=/);\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/languages/plsql.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/plsql.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'php',\n  init: function init(Prism) {\n    /**\n     * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n     * Modified by Miles Johnson: http://milesj.me\n     *\n     * Supports the following:\n     * \t\t- Extends clike syntax\n     * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n     * \t\t- Smarter constant and function matching\n     *\n     * Adds the following new token classes:\n     * \t\tconstant, delimiter, variable, function, package\n     */\n    (function (Prism) {\n      Prism.languages.php = Prism.languages.extend('clike', {\n        keyword: /\\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n        constant: /\\b[A-Z0-9_]{2,}\\b/,\n        comment: {\n          pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n          lookbehind: true\n        }\n      });\n\n      Prism.languages.insertBefore('php', 'string', {\n        'shell-comment': {\n          pattern: /(^|[^\\\\])#.*/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n      });\n\n      Prism.languages.insertBefore('php', 'keyword', {\n        delimiter: {\n          pattern: /\\?>|<\\?(?:php|=)?/i,\n          alias: 'important'\n        },\n        variable: /\\$+(?:\\w+\\b|(?={))/i,\n        package: {\n          pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        }\n      });\n\n      // Must be defined after the function pattern\n      Prism.languages.insertBefore('php', 'operator', {\n        property: {\n          pattern: /(->)[\\w]+/,\n          lookbehind: true\n        }\n      });\n\n      Prism.languages.insertBefore('php', 'string', {\n        'nowdoc-string': {\n          pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            delimiter: {\n              pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n              alias: 'symbol',\n              inside: {\n                punctuation: /^<<<'?|[';]$/\n              }\n            }\n          }\n        },\n        'heredoc-string': {\n          pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            delimiter: {\n              pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n              alias: 'symbol',\n              inside: {\n                punctuation: /^<<<\"?|[\";]$/\n              }\n            },\n            interpolation: null // See below\n          }\n        },\n        'single-quoted-string': {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true,\n          alias: 'string'\n        },\n        'double-quoted-string': {\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: null // See below\n          }\n        }\n      });\n      // The different types of PHP strings \"replace\" the C-like standard string\n      delete Prism.languages.php.string;\n\n      var string_interpolation = {\n        pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n        lookbehind: true,\n        inside: {\n          rest: Prism.languages.php\n        }\n      };\n      Prism.languages.php['heredoc-string'].inside.interpolation = string_interpolation;\n      Prism.languages.php['double-quoted-string'].inside.interpolation = string_interpolation;\n\n      Prism.hooks.add('before-tokenize', function (env) {\n        if (!/(?:<\\?php|<\\?)/gi.test(env.code)) {\n          return;\n        }\n\n        var phpPattern = /(?:<\\?php|<\\?)[\\s\\S]*?(?:\\?>|$)/gi;\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n      });\n\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":133,"files":[{"filePath":"node_modules/reprism/languages/php.js","startLine":1,"endLine":133},{"filePath":"node_modules/reprism/lib/languages/php.js","startLine":1,"endLine":133}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'php-extras',\n  init: function init(Prism) {\n    Prism.languages.insertBefore('php', 'variable', {\n      this: /\\$this\\b/,\n      global: /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n      scope: {\n        pattern: /\\b[\\w\\\\]+::/,\n        inside: {\n          keyword: /static|self|parent/,\n          punctuation: /::|\\\\/\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/languages/php-extras.js","startLine":1,"endLine":21},{"filePath":"node_modules/reprism/lib/languages/php-extras.js","startLine":1,"endLine":21}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'perl',\n  init: function init(Prism) {\n    Prism.languages.perl = {\n      comment: [{\n        // POD\n        pattern: /(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\$])#.*/,\n        lookbehind: true\n      }],\n      // TODO Could be nice to handle Heredoc too.\n      string: [\n      // q/.../\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      },\n\n      // q a...a\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      },\n\n      // q(...)\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n        greedy: true\n      },\n\n      // q{...}\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\n        greedy: true\n      },\n\n      // q[...]\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n        greedy: true\n      },\n\n      // q<...>\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n        greedy: true\n      },\n\n      // \"...\", `...`\n      {\n        pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      },\n\n      // '...'\n      // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n      {\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n        greedy: true\n      }],\n      regex: [\n      // m/.../\n      {\n        pattern: /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m a...a\n      {\n        pattern: /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m(...)\n      {\n        pattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m{...}\n      {\n        pattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m[...]\n      {\n        pattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\n        greedy: true\n      },\n\n      // m<...>\n      {\n        pattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\n        greedy: true\n      },\n\n      // The lookbehinds prevent -s from breaking\n      // FIXME We don't handle change of separator like s(...)[...]\n      // s/.../.../\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s a...a...a\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s(...)(...)\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s{...}{...}\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s[...][...]\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // s<...><...>\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      },\n\n      // /.../\n      // The look-ahead tries to prevent two divisions on\n      // the same line from being highlighted as regex.\n      // This does not support multi-line regex.\n      {\n        pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n        greedy: true\n      }],\n\n      // FIXME Not sure about the handling of ::, ', and #\n      variable: [\n      // ${^POSTMATCH}\n      /[&*$@%]\\{\\^[A-Z]+\\}/,\n      // $^V\n      /[&*$@%]\\^[A-Z_]/,\n      // ${...}\n      /[&*$@%]#?(?=\\{)/,\n      // $foo\n      /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i,\n      // $1\n      /[&*$@%]\\d+/,\n      // $_, @_, %!\n      // The negative lookahead prevents from breaking the %= operator\n      /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/],\n      filehandle: {\n        // <>, <FOO>, _\n        pattern: /<(?![<=])\\S*>|\\b_\\b/,\n        alias: 'symbol'\n      },\n      vstring: {\n        // v1.2, 1.2.3\n        pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n        alias: 'string'\n      },\n      function: {\n        pattern: /sub [a-z0-9_]+/i,\n        inside: {\n          keyword: /sub/\n        }\n      },\n      keyword: /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n      number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n      operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\n      punctuation: /[{}[\\];(),:]/\n    };\n  }\n};","nrTokens":0,"nrLines":195,"files":[{"filePath":"node_modules/reprism/languages/perl.js","startLine":1,"endLine":195},{"filePath":"node_modules/reprism/lib/languages/perl.js","startLine":1,"endLine":195}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'pascal',\n  init: function init(Prism) {\n    // Based on Free Pascal\n\n    /* TODO\n    Support inline asm ?\n    */\n\n    Prism.languages.pascal = {\n      comment: [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\n      string: {\n        pattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n        greedy: true\n      },\n      keyword: [{\n        // Turbo Pascal\n        pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      }, {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      }, {\n        // Object Pascal\n        pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      }, {\n        // Modifiers\n        pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }],\n      number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i,\n      // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],\n      operator: [/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i, {\n        pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }],\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n    };\n  }\n};","nrTokens":0,"nrLines":50,"files":[{"filePath":"node_modules/reprism/languages/pascal.js","startLine":1,"endLine":50},{"filePath":"node_modules/reprism/lib/languages/pascal.js","startLine":1,"endLine":50}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'parser',\n  init: function init(Prism) {\n    Prism.languages.parser = Prism.languages.extend('markup', {\n      keyword: {\n        pattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\.|:+/\n        }\n      },\n      function: {\n        pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /(^@)(?:GET_|SET_)/,\n            lookbehind: true\n          },\n          punctuation: /\\.|:+/\n        }\n      },\n      escape: {\n        pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n        alias: 'builtin'\n      },\n      punctuation: /[\\[\\](){};]/\n    });\n    Prism.languages.insertBefore('parser', 'keyword', {\n      'parser-comment': {\n        pattern: /(\\s)#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      expression: {\n        // Allow for 3 levels of depth\n        pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n        greedy: true,\n        lookbehind: true,\n        inside: {\n          string: {\n            pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n            lookbehind: true\n          },\n          keyword: Prism.languages.parser.keyword,\n          variable: Prism.languages.parser.variable,\n          function: Prism.languages.parser.function,\n          boolean: /\\b(?:true|false)\\b/,\n          number: /\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,\n          escape: Prism.languages.parser.escape,\n          operator: /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n          punctuation: Prism.languages.parser.punctuation\n        }\n      }\n    });\n    Prism.languages.insertBefore('inside', 'punctuation', {\n      expression: Prism.languages.parser.expression,\n      keyword: Prism.languages.parser.keyword,\n      variable: Prism.languages.parser.variable,\n      function: Prism.languages.parser.function,\n      escape: Prism.languages.parser.escape,\n      'parser-punctuation': {\n        pattern: Prism.languages.parser.punctuation,\n        alias: 'punctuation'\n      }\n    }, Prism.languages.parser.tag.inside['attr-value']);\n  }\n};","nrTokens":0,"nrLines":77,"files":[{"filePath":"node_modules/reprism/languages/parser.js","startLine":1,"endLine":77},{"filePath":"node_modules/reprism/lib/languages/parser.js","startLine":1,"endLine":77}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'parigp',\n  init: function init(Prism) {\n    Prism.languages.parigp = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      },\n      // PARI/GP does not care about white spaces at all\n      // so let's process the keywords to build an appropriate regexp\n      // (e.g. \"b *r *e *a *k\", etc.)\n      keyword: function () {\n        var keywords = ['breakpoint', 'break', 'dbg_down', 'dbg_err', 'dbg_up', 'dbg_x', 'forcomposite', 'fordiv', 'forell', 'forpart', 'forprime', 'forstep', 'forsubgroup', 'forvec', 'for', 'iferr', 'if', 'local', 'my', 'next', 'return', 'until', 'while'];\n        keywords = keywords.map(function (keyword) {\n          return keyword.split('').join(' *');\n        }).join('|');\n        return RegExp('\\\\b(?:' + keywords + ')\\\\b');\n      }(),\n      function: /\\w[\\w ]*?(?= *\\()/,\n      number: {\n        // The lookbehind and the negative lookahead prevent from breaking the .. operator\n        pattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,\n        lookbehind: true\n      },\n      operator: /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n      punctuation: /[\\[\\]{}().,:;|]/\n    };\n  }\n};","nrTokens":0,"nrLines":35,"files":[{"filePath":"node_modules/reprism/languages/parigp.js","startLine":1,"endLine":35},{"filePath":"node_modules/reprism/lib/languages/parigp.js","startLine":1,"endLine":35}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'oz',\n  init: function init(Prism) {\n    Prism.languages.oz = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n        greedy: true\n      },\n      atom: {\n        pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n        greedy: true,\n        alias: 'builtin'\n      },\n      keyword: /[$_]|\\[\\]|\\b(?:at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n      function: [/[a-z][A-Za-z\\d]*(?=\\()/, {\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*/,\n        lookbehind: true\n      }],\n      number: /\\b(?:0[bx][\\da-f]+|\\d+\\.?\\d*(?:e~?\\d+)?\\b)|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n      variable: /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\n      'attr-name': /\\w+(?=:)/,\n      operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n      punctuation: /[\\[\\](){}.:;?]/\n    };\n  }\n};","nrTokens":0,"nrLines":32,"files":[{"filePath":"node_modules/reprism/languages/oz.js","startLine":1,"endLine":32},{"filePath":"node_modules/reprism/lib/languages/oz.js","startLine":1,"endLine":32}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'opencl',\n  init: function init(Prism) {\n    (function (Prism) {\n      /* OpenCL kernel language */\n      Prism.languages.opencl = Prism.languages.extend('c', {\n        // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n        keyword: /\\b(?:__attribute__|(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|auto|break|case|cl_(?:image_format|mem_fence_flags)|clk_event_t|complex|const|continue|default|do|(?:float|double)(?:16(?:x(?:1|16|2|4|8))?|1x(?:1|16|2|4|8)|2(?:x(?:1|16|2|4|8))?|3|4(?:x(?:1|16|2|4|8))?|8(?:x(?:1|16|2|4|8))?)?|else|enum|event_t|extern|for|goto|(?:u?(?:char|short|int|long)|half|quad|bool)(?:2|3|4|8|16)?|if|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|imaginary|inline|intptr_t|ndrange_t|packed|pipe|ptrdiff_t|queue_t|register|reserve_id_t|restrict|return|sampler_t|signed|size_t|sizeof|static|struct|switch|typedef|uintptr_t|uniform|union|unsigned|void|volatile|while)\\b/,\n        // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (global-vars, opencl-dev)\n        'function-opencl-kernel': {\n          pattern: /\\b(?:abs(?:_diff)?|a?(?:cos|sin)(?:h|pi)?|add_sat|aligned|all|and|any|async(?:_work_group_copy|_work_group_strided_copy)?|atan(?:2?(?:pi)?|h)?|atom_(?:add|and|cmpxchg|dec|inc|max|min|or|sub|xchg|xor)|barrier|bitselect|cbrt|ceil|clamp|clz|copies|copysign|cross|degrees|distance|dot|endian|erf|erfc|exp(?:2|10)?|expm1|fabs|fast_(?:distance|length|normalize)|fdim|floor|fma|fmax|fmin|fract|frexp|fro|from|get_(?:global_(?:id|offset|size)|group_id|image_(?:channel_data_type|channel_order|depth|dim|height|width)|local(?:_id|_size)|num_groups|work_dim)|hadd|(?:half|native)_(?:cos|divide|exp(?:2|10)?|log(?:2|10)?|powr|recip|r?sqrt|sin|tan)|hypot|ilogb|is(?:equal|finite|greater(?:equal)?|inf|less(?:equal|greater)?|nan|normal|notequal|(?:un)?ordered)|ldexp|length|lgamma|lgamma_r|log(?:b|1p|2|10)?|mad(?:24|_hi|_sat)?|max|mem(?:_fence)?|min|mix|modf|mul24|mul_hi|nan|nextafter|normalize|pow[nr]?|prefetch|radians|read_(?:image)(?:f|h|u?i)|read_mem_fence|remainder|remquo|reqd_work_group_size|rhadd|rint|rootn|rotate|round|rsqrt|select|shuffle2?|sign|signbit|sincos|smoothstep|sqrt|step|sub_sat|tan|tanh|tanpi|tgamma|to|trunc|upsample|vec_(?:step|type_hint)|v(?:load|store)(?:_half)?(?:2|3|4|8|16)?|v(?:loada_half|storea?(?:_half)?)(?:2|3|4|8|16)?(?:_(?:rte|rtn|rtp|rtz))?|wait_group_events|work_group_size_hint|write_image(?:f|h|u?i)|write_mem_fence)\\b/,\n          alias: 'function'\n        },\n        // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n        'constant-opencl-kernel': {\n          pattern: /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:LOCAL|GLOBAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT)_(?:DIG|EPSILON|MANT_DIG|(?:MIN|MAX)(?:(?:_10)?_EXP)?)|FLT_RADIX|HUGE_VALF|INFINITY|(?:INT|LONG|SCHAR|SHRT|UCHAR|UINT|ULONG)_(?:MAX|MIN)|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:10|2)E?|PI[24]?|SQRT(?:1_2|2))|NAN)\\b/,\n          alias: 'constant'\n        }\n      });\n\n      var attributes = {\n        // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n        'type-opencl-host': {\n          pattern: /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|short|int|long)|float|double)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n          alias: 'keyword'\n        },\n        'boolean-opencl-host': {\n          pattern: /\\bCL_(?:TRUE|FALSE)\\b/,\n          alias: 'boolean'\n        },\n        // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n        'constant-opencl-host': {\n          pattern: /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:16|24|8|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n          alias: 'constant'\n        },\n        // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n        'function-opencl-host': {\n          pattern: /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|Kernel|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n          alias: 'function'\n        }\n\n        /* OpenCL host API */\n      };Prism.languages.insertBefore('c', 'keyword', attributes);\n      // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n      attributes['type-opencl-host-c++'] = {\n        pattern: /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|Sampler|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|UserEvent)\\b/,\n        alias: 'keyword'\n        // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n      };Prism.languages.insertBefore('cpp', 'keyword', attributes);\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":57,"files":[{"filePath":"node_modules/reprism/languages/opencl.js","startLine":1,"endLine":57},{"filePath":"node_modules/reprism/lib/languages/opencl.js","startLine":1,"endLine":57}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ocaml',\n  init: function init(Prism) {\n    Prism.languages.ocaml = {\n      comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n      string: [{\n        pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      }, {\n        pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n        greedy: true\n      }],\n      number: /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n      type: {\n        pattern: /\\B['`]\\w*/,\n        alias: 'variable'\n      },\n      directive: {\n        pattern: /\\B#\\w+/,\n        alias: 'function'\n      },\n      keyword: /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      // Custom operators are allowed\n      operator: /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n      punctuation: /[(){}\\[\\]|_.,:;]/\n    };\n  }\n};","nrTokens":0,"nrLines":34,"files":[{"filePath":"node_modules/reprism/languages/ocaml.js","startLine":1,"endLine":34},{"filePath":"node_modules/reprism/lib/languages/ocaml.js","startLine":1,"endLine":34}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'objectivec',\n  init: function init(Prism) {\n    Prism.languages.objectivec = Prism.languages.extend('c', {\n      keyword: /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n      string: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n    });\n  }\n};","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/reprism/languages/objectivec.js","startLine":1,"endLine":15},{"filePath":"node_modules/reprism/lib/languages/objectivec.js","startLine":1,"endLine":15}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nsis',\n  init: function init(Prism) {\n    /**\n     * Original by Jan T. Sott (http://github.com/idleberg)\n     *\n     * Includes all commands and plug-ins shipped with NSIS 3.02\n     */\n    Prism.languages.nsis = {\n      comment: {\n        pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n        lookbehind: true\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      keyword: {\n        pattern: /(^\\s*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|Banner|BG(?:Font|Gradient|Image)|BrandingText|BringToFront|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|WriteUTF16LE|Seek|Write|WriteByte|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DlgItem|DLLVersion(?:Local)?|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|Name|Nop|ns(?:Dialogs|Exec)|NSISdl|OutFile|Page(?:Callbacks)?|PE(?:DllCharacteristics|SubsysVer)|Pop|Push|Quit|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Unicode|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UninstPage|UnRegDLL|UserInfo|Var|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle)\\b/m,\n        lookbehind: true\n      },\n      property: /\\b(?:admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user|ARCHIVE|FILE_(ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK((CR|CU|LM)(32|64)?|DD|PD|U)|HKEY_(CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)\\b/,\n      constant: /\\${[\\w\\.:\\^-]+}|\\$\\([\\w\\.:\\^-]+\\)/i,\n      variable: /\\$\\w+/i,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n      operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n      punctuation: /[{}[\\];(),.:]/,\n      important: {\n        pattern: /(^\\s*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n        lookbehind: true\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/languages/nsis.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/nsis.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nix',\n  init: function init(Prism) {\n    Prism.languages.nix = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            // The lookbehind ensures the ${} is not preceded by \\ or ''\n            pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,\n            lookbehind: true,\n            inside: {\n              antiquotation: {\n                pattern: /^\\$(?=\\{)/,\n                alias: 'variable'\n              }\n              // See rest below\n            }\n          }\n        }\n      },\n      url: [/\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/, {\n        pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }],\n      antiquotation: {\n        pattern: /\\$(?=\\{)/,\n        alias: 'variable'\n      },\n      number: /\\b\\d+\\b/,\n      keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n      function: /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n      punctuation: /[{}()[\\].,:;]/\n    };\n\n    Prism.languages.nix.string.inside.interpolation.inside.rest = Prism.languages.nix;\n  }\n};","nrTokens":0,"nrLines":47,"files":[{"filePath":"node_modules/reprism/languages/nix.js","startLine":1,"endLine":47},{"filePath":"node_modules/reprism/lib/languages/nix.js","startLine":1,"endLine":47}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nim',\n  init: function init(Prism) {\n    Prism.languages.nim = {\n      comment: /#.*/,\n      // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n      // Character literals are handled specifically to prevent issues with numeric type suffixes\n      string: {\n        pattern: /(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,\n        greedy: true\n      },\n      // The negative look ahead prevents wrong highlighting of the .. operator\n      number: /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n      keyword: /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n      function: {\n        pattern: /(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n        inside: {\n          operator: /\\*$/\n        }\n      },\n      // We don't want to highlight operators inside backticks\n      ignore: {\n        pattern: /`[^`\\r\\n]+`/,\n        inside: {\n          punctuation: /`/\n        }\n      },\n      operator: {\n        // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n        // but allow the slice operator .. to take precedence over them\n        // One can define his own operators in Nim so all combination of operators might be an operator.\n        pattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,\n        lookbehind: true\n      },\n      punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n    };\n  }\n};","nrTokens":0,"nrLines":43,"files":[{"filePath":"node_modules/reprism/languages/nim.js","startLine":1,"endLine":43},{"filePath":"node_modules/reprism/lib/languages/nim.js","startLine":1,"endLine":43}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nginx',\n  init: function init(Prism) {\n    Prism.languages.nginx = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /(^|[^\"{\\\\])#.*/,\n        lookbehind: true\n      },\n      keyword: /\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types)\\b/i\n    });\n\n    Prism.languages.insertBefore('nginx', 'keyword', {\n      variable: /\\$[a-z_]+/i\n    });\n  }\n};","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/languages/nginx.js","startLine":1,"endLine":21},{"filePath":"node_modules/reprism/lib/languages/nginx.js","startLine":1,"endLine":21}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'nasm',\n  init: function init(Prism) {\n    Prism.languages.nasm = {\n      comment: /;.*$/m,\n      string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      label: {\n        pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n        lookbehind: true,\n        alias: 'function'\n      },\n      keyword: [/\\[?BITS (?:16|32|64)\\]?/, {\n        pattern: /(^\\s*)section\\s*[a-zA-Z.]+:?/im,\n        lookbehind: true\n      }, /(?:extern|global)[^;\\r\\n]*/i, /(?:CPU|FLOAT|DEFAULT).*$/m],\n      register: {\n        pattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,\n        alias: 'variable'\n      },\n      number: /(?:\\b|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n      operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n    };\n  }\n};","nrTokens":0,"nrLines":29,"files":[{"filePath":"node_modules/reprism/languages/nasm.js","startLine":1,"endLine":29},{"filePath":"node_modules/reprism/lib/languages/nasm.js","startLine":1,"endLine":29}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'n4js',\n  init: function init(Prism) {\n    Prism.languages.n4js = Prism.languages.extend('javascript', {\n      // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n      keyword: /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n    });\n\n    Prism.languages.insertBefore('n4js', 'constant', {\n      // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n      annotation: {\n        pattern: /@+\\w+/,\n        alias: 'operator'\n      }\n    });\n\n    Prism.languages.n4jsd = Prism.languages.n4js;\n  }\n};","nrTokens":0,"nrLines":24,"files":[{"filePath":"node_modules/reprism/languages/n4js.js","startLine":1,"endLine":24},{"filePath":"node_modules/reprism/lib/languages/n4js.js","startLine":1,"endLine":24}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'monkey',\n  init: function init(Prism) {\n    Prism.languages.monkey = {\n      string: /\"[^\"\\r\\n]*\"/,\n      comment: [{\n        pattern: /^#Rem\\s+[\\s\\S]*?^#End/im,\n        greedy: true\n      }, {\n        pattern: /'.+/,\n        greedy: true\n      }],\n      preprocessor: {\n        pattern: /(^[ \\t]*)#.+/m,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      function: /\\w+(?=\\()/,\n      'type-char': {\n        pattern: /(\\w)[?%#$]/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      number: {\n        pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n        lookbehind: true\n      },\n      keyword: /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n      operator: /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n      punctuation: /[.,:;()\\[\\]]/\n    };\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/languages/monkey.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/monkey.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'mizar',\n  init: function init(Prism) {\n    Prism.languages.mizar = {\n      comment: /::.+/,\n      keyword: /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,\n      parameter: {\n        pattern: /\\$(?:10|\\d)/,\n        alias: 'variable'\n      },\n      variable: /\\w+(?=:)/,\n      number: /(?:\\b|-)\\d+\\b/,\n      operator: /\\.\\.\\.|->|&|\\.?=/,\n      punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n    };\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/languages/mizar.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/mizar.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'mel',\n  init: function init(Prism) {\n    Prism.languages.mel = {\n      comment: /\\/\\/.*/,\n      code: {\n        pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n        greedy: true,\n        alias: 'italic',\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          }\n          // See rest below\n        }\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      variable: /\\$\\w+/,\n      number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+/,\n      flag: {\n        pattern: /-[^\\d\\W]\\w*/,\n        alias: 'operator'\n      },\n      keyword: /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n      function: /\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n\n      operator: [/\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/, {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      }, {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }],\n      punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n    };\n    Prism.languages.mel.code.inside.rest = Prism.languages.mel;\n  }\n};","nrTokens":0,"nrLines":49,"files":[{"filePath":"node_modules/reprism/languages/mel.js","startLine":1,"endLine":49},{"filePath":"node_modules/reprism/lib/languages/mel.js","startLine":1,"endLine":49}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'matlab',\n  init: function init(Prism) {\n    Prism.languages.matlab = {\n      comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n      string: {\n        pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n        greedy: true\n      },\n      // FIXME We could handle imaginary numbers as a whole\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n      keyword: /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n      function: /(?!\\d)\\w+(?=\\s*\\()/,\n      operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n      punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n    };\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/languages/matlab.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/matlab.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'markup',\n  init: function init(Prism) {\n    Prism.languages.markup = {\n      comment: /<!--[\\s\\S]*?-->/,\n      prolog: /<\\?[\\s\\S]+?\\?>/,\n      doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n      cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n      tag: {\n        pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n        greedy: true,\n        inside: {\n          tag: {\n            pattern: /^<\\/?[^\\s>\\/]+/i,\n            inside: {\n              punctuation: /^<\\/?/,\n              namespace: /^[^\\s>\\/:]+:/\n            }\n          },\n          'attr-value': {\n            pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n            inside: {\n              punctuation: [/^=/, {\n                pattern: /(^|[^\\\\])[\"']/,\n                lookbehind: true\n              }]\n            }\n          },\n          punctuation: /\\/?>/,\n          'attr-name': {\n            pattern: /[^\\s>\\/]+/,\n            inside: {\n              namespace: /^[^\\s>\\/:]+:/\n            }\n          }\n        }\n      },\n      entity: /&#?[\\da-z]{1,8};/i\n    };\n\n    Prism.languages.markup.tag.inside['attr-value'].inside.entity = Prism.languages.markup.entity;\n\n    // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type === 'entity') {\n        env.attributes.title = env.content.replace(/&amp;/, '&');\n      }\n    });\n\n    Prism.languages.xml = Prism.languages.markup;\n    Prism.languages.html = Prism.languages.markup;\n    Prism.languages.mathml = Prism.languages.markup;\n    Prism.languages.svg = Prism.languages.markup;\n  }\n};","nrTokens":0,"nrLines":60,"files":[{"filePath":"node_modules/reprism/languages/markup.js","startLine":1,"endLine":60},{"filePath":"node_modules/reprism/lib/languages/markup.js","startLine":1,"endLine":60}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'markup-templating',\n  init: function init(Prism) {\n    Prism.languages['markup-templating'] = {};\n\n    Object.defineProperties(Prism.languages['markup-templating'], {\n      buildPlaceholders: {\n        // Tokenize all inline templating expressions matching placeholderPattern\n        // If the replaceFilter function is provided, it will be called with every match.\n        // If it returns false, the match will not be replaced.\n        value: function value(env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return;\n          }\n\n          env.tokenStack = [];\n\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match;\n            }\n            var i = env.tokenStack.length;\n            // Check for existing strings\n            while (env.code.indexOf('___' + language.toUpperCase() + i + '___') !== -1) {\n              ++i;\n            }\n\n            // Create a sparse array\n            env.tokenStack[i] = match;\n\n            return '___' + language.toUpperCase() + i + '___';\n          });\n\n          // Switch the grammar to markup\n          env.grammar = Prism.languages.markup;\n        }\n      },\n      tokenizePlaceholders: {\n        // Replace placeholders with proper tokens after tokenizing\n        value: function value(env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return;\n          }\n\n          // Switch the grammar back\n          env.grammar = Prism.languages[language];\n\n          var j = 0;\n          var keys = Object.keys(env.tokenStack);\n          var walkTokens = function walkTokens(tokens) {\n            if (j >= keys.length) {\n              return;\n            }\n            for (var i = 0; i < tokens.length; i++) {\n              var token = tokens[i];\n              if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n                var k = keys[j];\n                var t = env.tokenStack[k];\n                var s = typeof token === 'string' ? token : token.content;\n\n                var index = s.indexOf('___' + language.toUpperCase() + k + '___');\n                if (index > -1) {\n                  ++j;\n                  var before = s.substring(0, index);\n                  var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar, language), 'language-' + language, t);\n                  var after = s.substring(index + ('___' + language.toUpperCase() + k + '___').length);\n                  var replacement;\n                  if (before || after) {\n                    replacement = [before, middle, after].filter(function (v) {\n                      return !!v;\n                    });\n                    walkTokens(replacement);\n                  } else {\n                    replacement = middle;\n                  }\n                  if (typeof token === 'string') {\n                    Array.prototype.splice.apply(tokens, [i, 1].concat(replacement));\n                  } else {\n                    token.content = replacement;\n                  }\n\n                  if (j >= keys.length) {\n                    break;\n                  }\n                }\n              } else if (token.content && typeof token.content !== 'string') {\n                walkTokens(token.content);\n              }\n            }\n          };\n\n          walkTokens(env.tokens);\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":102,"files":[{"filePath":"node_modules/reprism/languages/markup-templating.js","startLine":1,"endLine":102},{"filePath":"node_modules/reprism/lib/languages/markup-templating.js","startLine":1,"endLine":102}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'markdown',\n  init: function init(Prism) {\n    Prism.languages.markdown = Prism.languages.extend('markup', {});\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      code: [{\n        // Prefixed by 4 spaces or 1 tab\n        pattern: /^(?: {4}|\\t).+/m,\n        alias: 'keyword'\n      }, {\n        // `code`\n        // ``code``\n        pattern: /``.+?``|`[^`\\n]+`/,\n        alias: 'keyword'\n      }],\n      title: [{\n        // title 1\n        // =======\n\n        // title 2\n        // -------\n        pattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n        alias: 'important',\n        inside: {\n          punctuation: /==+$|--+$/\n        }\n      }, {\n        // # title 1\n        // ###### title 6\n        pattern: /(^\\s*)#+.+/m,\n        lookbehind: true,\n        alias: 'important',\n        inside: {\n          punctuation: /^#+|#+$/\n        }\n      }],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n\n        // Allow only one line break\n        pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n        lookbehind: true,\n        inside: {\n          punctuation: /^\\*\\*|^__|\\*\\*$|__$/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n\n        // Allow only one line break\n        pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n        lookbehind: true,\n        inside: {\n          punctuation: /^[*_]|[*_]$/\n        }\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example] [id]\n        pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n        inside: {\n          variable: {\n            pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n          }\n        }\n      }\n    });\n\n    Prism.languages.markdown.bold.inside.url = Prism.languages.markdown.url;\n    Prism.languages.markdown.italic.inside.url = Prism.languages.markdown.url;\n    Prism.languages.markdown.bold.inside.italic = Prism.languages.markdown.italic;\n    Prism.languages.markdown.italic.inside.bold = Prism.languages.markdown.bold;\n  }\n};","nrTokens":0,"nrLines":124,"files":[{"filePath":"node_modules/reprism/languages/markdown.js","startLine":1,"endLine":124},{"filePath":"node_modules/reprism/lib/languages/markdown.js","startLine":1,"endLine":124}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'makefile',\n  init: function init(Prism) {\n    Prism.languages.makefile = {\n      comment: {\n        pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n        lookbehind: true\n      },\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n\n      // Built-in target names\n      builtin: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n\n      // Targets\n      symbol: {\n        pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n        inside: {\n          variable: /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n        }\n      },\n      variable: /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n\n      keyword: [\n      // Directives\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n      // Functions\n      {\n        pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n        lookbehind: true\n      }],\n      operator: /(?:::|[?:+!])?=|[|@]/,\n      punctuation: /[:;(){}]/\n    };\n  }\n};","nrTokens":0,"nrLines":43,"files":[{"filePath":"node_modules/reprism/languages/makefile.js","startLine":1,"endLine":43},{"filePath":"node_modules/reprism/lib/languages/makefile.js","startLine":1,"endLine":43}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'lua',\n  init: function init(Prism) {\n    Prism.languages.lua = {\n      comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n      // \\z may be used to skip the following space\n      string: {\n        pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n        greedy: true\n      },\n      number: /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n      keyword: /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n      function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n      operator: [/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/, {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }],\n      punctuation: /[\\[\\](){},;]|\\.+|:+/\n    };\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/languages/lua.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/lua.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'lolcode',\n  init: function init(Prism) {\n    Prism.languages.lolcode = {\n      comment: [/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/, /\\bBTW.+/],\n      string: {\n        pattern: /\"(?::.|[^\"])*\"/,\n        inside: {\n          variable: /:\\{[^}]+\\}/,\n          symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n        },\n        greedy: true\n      },\n      number: /(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,\n      symbol: {\n        pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n        lookbehind: true,\n        inside: {\n          keyword: /A(?=\\s)/\n        }\n      },\n      label: {\n        pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n        lookbehind: true,\n        alias: 'string'\n      },\n      function: {\n        pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n        lookbehind: true\n      },\n      keyword: [{\n        pattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n        lookbehind: true\n      }, /'Z(?=\\s|,|$)/],\n      boolean: {\n        pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|\\s)IT(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      punctuation: /\\.{3}|???|,|!/\n    };\n  }\n};","nrTokens":0,"nrLines":55,"files":[{"filePath":"node_modules/reprism/languages/lolcode.js","startLine":1,"endLine":55},{"filePath":"node_modules/reprism/lib/languages/lolcode.js","startLine":1,"endLine":55}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'livescript',\n  init: function init(Prism) {\n    Prism.languages.livescript = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }],\n      'interpolated-string': {\n        /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n        * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n        pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          variable: {\n            pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n            lookbehind: true\n          },\n          interpolation: {\n            pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n            lookbehind: true,\n            inside: {\n              'interpolation-punctuation': {\n                pattern: /^#\\{|\\}$/,\n                alias: 'variable'\n              }\n              // See rest below\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      },\n      string: [{\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      }, {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      }, /\\\\[^\\s,;\\])}]+/],\n      regex: [{\n        pattern: /\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      }, {\n        pattern: /\\/(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }],\n      keyword: {\n        pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n        lookbehind: true\n      },\n      'keyword-operator': {\n        pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      boolean: {\n        pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n        lookbehind: true\n      },\n      argument: {\n        // Don't match .&. nor &&\n        pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n      identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n      operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      },\n      // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],\n      punctuation: /[(){}\\[\\]|.,:;`]/\n    };\n\n    Prism.languages.livescript['interpolated-string'].inside.interpolation.inside.rest = Prism.languages.livescript;\n  }\n};","nrTokens":0,"nrLines":118,"files":[{"filePath":"node_modules/reprism/languages/livescript.js","startLine":1,"endLine":118},{"filePath":"node_modules/reprism/lib/languages/livescript.js","startLine":1,"endLine":118}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'lisp',\n  init: function init(Prism) {\n    (function (Prism) {\n      // Functions to construct regular expressions\n      // simple form\n      // e.g. (interactive ... or (interactive)\n      function simple_form(name) {\n        return new RegExp('(\\\\()' + name + '(?=[\\\\s\\\\)])');\n      }\n      // booleans and numbers\n      function primitive(pattern) {\n        return new RegExp('([\\\\s([])' + pattern + '(?=[\\\\s)])');\n      }\n\n      // Patterns in regular expressions\n\n      // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n      // & and : are excluded as they are usually used for special purposes\n      var symbol = '[-+*/_~!@$%^=<>{}\\\\w]+';\n      // symbol starting with & used in function arguments\n      var marker = '&' + symbol;\n      // Open parenthesis for look-behind\n      var par = '(\\\\()';\n      var endpar = '(?=\\\\))';\n      // End the pattern with look-ahead space\n      var space = '(?=\\\\s)';\n\n      var language = {\n        // Three or four semicolons are considered a heading.\n        // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n        heading: {\n          pattern: /;;;.*/,\n          alias: ['comment', 'title']\n        },\n        comment: /;.*/,\n        string: {\n          pattern: /\"(?:[^\"\\\\]*|\\\\.)*\"/,\n          greedy: true,\n          inside: {\n            argument: /[-A-Z]+(?=[.,\\s])/,\n            symbol: new RegExp('`' + symbol + '\\'')\n          }\n        },\n        'quoted-symbol': {\n          pattern: new RegExp('#?\\'' + symbol),\n          alias: ['variable', 'symbol']\n        },\n        'lisp-property': {\n          pattern: new RegExp(':' + symbol),\n          alias: 'property'\n        },\n        splice: {\n          pattern: new RegExp(',@?' + symbol),\n          alias: ['symbol', 'variable']\n        },\n        keyword: [{\n          pattern: new RegExp(par + '(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)' + space),\n          lookbehind: true\n        }, {\n          pattern: new RegExp(par + '(?:for|do|collect|return|finally|append|concat|in|by)' + space),\n          lookbehind: true\n        }],\n        declare: {\n          pattern: simple_form('declare'),\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        interactive: {\n          pattern: simple_form('interactive'),\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        boolean: {\n          pattern: primitive('(?:t|nil)'),\n          lookbehind: true\n        },\n        number: {\n          pattern: primitive('[-+]?\\\\d+(?:\\\\.\\\\d*)?'),\n          lookbehind: true\n        },\n        defvar: {\n          pattern: new RegExp(par + 'def(?:var|const|custom|group)\\\\s+' + symbol),\n          lookbehind: true,\n          inside: {\n            keyword: /^def[a-z]+/,\n            variable: new RegExp(symbol)\n          }\n        },\n        defun: {\n          pattern: new RegExp(par + '(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+' + symbol + '\\\\s+\\\\([\\\\s\\\\S]*?\\\\)'),\n          lookbehind: true,\n          inside: {\n            keyword: /^(?:cl-)?def\\S+/,\n            // See below, this property needs to be defined later so that it can\n            // reference the language object.\n            arguments: null,\n            function: {\n              pattern: new RegExp('(^\\\\s)' + symbol),\n              lookbehind: true\n            },\n            punctuation: /[()]/\n          }\n        },\n        lambda: {\n          pattern: new RegExp(par + 'lambda\\\\s+\\\\((?:&?' + symbol + '\\\\s*)*\\\\)'),\n          lookbehind: true,\n          inside: {\n            keyword: /^lambda/,\n            // See below, this property needs to be defined later so that it can\n            // reference the language object.\n            arguments: null,\n            punctuation: /[()]/\n          }\n        },\n        car: {\n          pattern: new RegExp(par + symbol),\n          lookbehind: true\n        },\n        punctuation: [\n        // open paren, brackets, and close paren\n        /(['`,]?\\(|[)\\[\\]])/,\n        // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }]\n      };\n\n      var arg = {\n        'lisp-marker': new RegExp(marker),\n        rest: {\n          argument: {\n            pattern: new RegExp(symbol),\n            alias: 'variable'\n          },\n          varform: {\n            pattern: new RegExp(par + symbol + '\\\\s+\\\\S[\\\\s\\\\S]*' + endpar),\n            lookbehind: true,\n            inside: {\n              string: language.string,\n              boolean: language.boolean,\n              number: language.number,\n              symbol: language.symbol,\n              punctuation: /[()]/\n            }\n          }\n        }\n      };\n\n      var forms = '\\\\S+(?:\\\\s+\\\\S+)*';\n\n      var arglist = {\n        pattern: new RegExp(par + '[\\\\s\\\\S]*' + endpar),\n        lookbehind: true,\n        inside: {\n          'rest-vars': {\n            pattern: new RegExp('&(?:rest|body)\\\\s+' + forms),\n            inside: arg\n          },\n          'other-marker-vars': {\n            pattern: new RegExp('&(?:optional|aux)\\\\s+' + forms),\n            inside: arg\n          },\n          keys: {\n            pattern: new RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n            inside: arg\n          },\n          argument: {\n            pattern: new RegExp(symbol),\n            alias: 'variable'\n          },\n          punctuation: /[()]/\n        }\n      };\n\n      language.lambda.inside.arguments = arglist;\n      language.defun.inside.arguments = Prism.util.clone(arglist);\n      language.defun.inside.arguments.inside.sublist = arglist;\n\n      Prism.languages.lisp = language;\n      Prism.languages.elisp = language;\n      Prism.languages.emacs = language;\n      Prism.languages['emacs-lisp'] = language;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":192,"files":[{"filePath":"node_modules/reprism/languages/lisp.js","startLine":1,"endLine":192},{"filePath":"node_modules/reprism/lib/languages/lisp.js","startLine":1,"endLine":192}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'liquid',\n  init: function init(Prism) {\n    Prism.languages.liquid = {\n      keyword: /\\b(?:comment|endcomment|if|elsif|else|endif|unless|endunless|for|endfor|case|endcase|when|in|break|assign|continue|limit|offset|range|reversed|raw|endraw|capture|endcapture|tablerow|endtablerow)\\b/,\n      number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n      operator: {\n        pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^|[\\s;|&])(?:append|prepend|capitalize|cycle|cols|increment|decrement|abs|at_least|at_most|ceil|compact|concat|date|default|divided_by|downcase|escape|escape_once|first|floor|join|last|lstrip|map|minus|modulo|newline_to_br|plus|remove|remove_first|replace|replace_first|reverse|round|rstrip|size|slice|sort|sort_natural|split|strip|strip_html|strip_newlines|times|truncate|truncatewords|uniq|upcase|url_decode|url_encode|include|paginate)(?=$|[\\s;|&])/,\n        lookbehind: true\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/languages/liquid.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/liquid.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'less',\n  init: function init(Prism) {\n    /* FIXME :\n    :extend() is not handled specifically : its highlighting is buggy.\n    Mixin usage must be inside a ruleset to be highlighted.\n    At-rules (e.g. import) containing interpolations are buggy.\n    Detached rulesets are highlighted as at-rules.\n    A comment before a mixin usage prevents the latter to be properly highlighted.\n    */\n\n    Prism.languages.less = Prism.languages.extend('css', {\n      comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }],\n      atrule: {\n        pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n        inside: {\n          punctuation: /[:()]/\n        }\n      },\n      // selectors and mixins are considered the same\n      selector: {\n        pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n        inside: {\n          // mixin parameters\n          variable: /@+[\\w-]+/\n        }\n      },\n\n      property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n      punctuation: /[{}();:,]/,\n      operator: /[+\\-*\\/]/\n    });\n\n    // Invert function and punctuation positions\n    Prism.languages.insertBefore('less', 'punctuation', {\n      function: Prism.languages.less.function\n    });\n\n    Prism.languages.insertBefore('less', 'property', {\n      variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      },\n\n      // Variable usage\n      /@@?[\\w-]+/],\n      'mixin-usage': {\n        pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n        lookbehind: true,\n        alias: 'function'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":66,"files":[{"filePath":"node_modules/reprism/languages/less.js","startLine":1,"endLine":66},{"filePath":"node_modules/reprism/lib/languages/less.js","startLine":1,"endLine":66}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'latex',\n  init: function init(Prism) {\n    (function (Prism) {\n      var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\n          insideEqu = {\n        'equation-command': {\n          pattern: funcPattern,\n          alias: 'regex'\n        }\n      };\n\n      Prism.languages.latex = {\n        comment: /%.*/m,\n        // the verbatim environment prints whitespace to the document\n        cdata: {\n          pattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true\n        },\n        /*\n        * equations can be between $ $ or \\( \\) or \\[ \\]\n        * (all are multiline)\n        */\n        equation: [{\n          pattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        }, {\n          pattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }],\n        /*\n        * arguments which are keywords or references are highlighted\n        * as keywords\n        */\n        keyword: {\n          pattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n          lookbehind: true\n        },\n        url: {\n          pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n          lookbehind: true\n        },\n        /*\n        * section or chapter headlines are highlighted as bold so that\n        * they stand out more\n        */\n        headline: {\n          pattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n          lookbehind: true,\n          alias: 'class-name'\n        },\n        function: {\n          pattern: funcPattern,\n          alias: 'selector'\n        },\n        punctuation: /[[\\]{}&]/\n      };\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":68,"files":[{"filePath":"node_modules/reprism/languages/latex.js","startLine":1,"endLine":68},{"filePath":"node_modules/reprism/lib/languages/latex.js","startLine":1,"endLine":68}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'kotlin',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.kotlin = Prism.languages.extend('clike', {\n        keyword: {\n          // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n          pattern: /(^|[^.])\\b(?:abstract|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|else|enum|final|finally|for|fun|get|if|import|in|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|out|override|package|private|protected|public|reified|return|sealed|set|super|tailrec|this|throw|to|try|val|var|when|where|while)\\b/,\n          lookbehind: true\n        },\n        function: [/\\w+(?=\\s*\\()/, {\n          pattern: /(\\.)\\w+(?=\\s*\\{)/,\n          lookbehind: true\n        }],\n        number: /\\b(?:0[bx][\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?[fFL]?)\\b/,\n        operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n      });\n\n      delete Prism.languages.kotlin['class-name'];\n\n      Prism.languages.insertBefore('kotlin', 'string', {\n        'raw-string': {\n          pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n          alias: 'string'\n          // See interpolation below\n        }\n      });\n      Prism.languages.insertBefore('kotlin', 'keyword', {\n        annotation: {\n          pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n          alias: 'builtin'\n        }\n      });\n      Prism.languages.insertBefore('kotlin', 'function', {\n        label: {\n          pattern: /\\w+@|@\\w+/,\n          alias: 'symbol'\n        }\n      });\n\n      var interpolation = [{\n        pattern: /\\$\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.kotlin\n        }\n      }, {\n        pattern: /\\$\\w+/,\n        alias: 'variable'\n      }];\n\n      Prism.languages.kotlin.string.inside = Prism.languages.kotlin['raw-string'].inside = {\n        interpolation: interpolation\n      };\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":65,"files":[{"filePath":"node_modules/reprism/languages/kotlin.js","startLine":1,"endLine":65},{"filePath":"node_modules/reprism/lib/languages/kotlin.js","startLine":1,"endLine":65}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'keyman',\n  init: function init(Prism) {\n    Prism.languages.keyman = {\n      comment: /\\bc\\s.*/i,\n      function: /\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i, // virtual key\n      string: /(\"|').*?\\1/,\n      bold: [\n      // header statements, system stores and variable system stores\n      /&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i, /\\b(?:bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i],\n      keyword: /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i, // rule keywords\n      atrule: /\\b(?:ansi|begin|unicode|group|using keys|match|nomatch)\\b/i, // structural keywords\n      number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i, // U+####, x###, d### characters and numbers\n      operator: /[+>\\\\,()]/,\n      tag: /\\$(?:keyman|kmfl|weaver|keymanweb|keymanonly):/i // prefixes\n    };\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/languages/keyman.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/keyman.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'julia',\n  init: function init(Prism) {\n    Prism.languages.julia = {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      },\n      string: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2/,\n      keyword: /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?/i,\n      operator: /[-+*^%??&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~?????????]/,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/languages/julia.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/julia.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'jsx',\n  init: function init(Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript);\n\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n    Prism.languages.jsx.tag.pattern = /<\\/?[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{[^}]*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?>/i;\n\n    Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n\n    Prism.languages.insertBefore('inside', 'attr-name', {\n      spread: {\n        pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n        inside: {\n          punctuation: /\\.{3}|[{}.]/,\n          'attr-value': /\\w+/\n        }\n      }\n    }, Prism.languages.jsx.tag);\n\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      script: {\n        // Allow for one level of nesting\n        pattern: /=(\\{(?:\\{[^}]*\\}|[^}])+\\})/i,\n        inside: {\n          'script-punctuation': {\n            pattern: /^=(?={)/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.jsx\n        },\n        alias: 'language-javascript'\n      }\n    }, Prism.languages.jsx.tag);\n\n    // The following will handle plain text inside tags\n    var stringifyToken = function stringifyToken(token) {\n      if (typeof token === 'string') {\n        return token;\n      }\n      if (typeof token.content === 'string') {\n        return token.content;\n      }\n      return token.content.map(stringifyToken).join('');\n    };\n\n    var walkTokens = function walkTokens(tokens) {\n      var openedTags = [];\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        var notTagNorBrace = false;\n\n        if (typeof token !== 'string') {\n          if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n            // We found a tag, now find its kind\n\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n                // Pop matching opening tag\n                openedTags.pop();\n              }\n            } else if (token.content[token.content.length - 1].content === '/>') {\n              // Autoclosed tag, ignore\n            } else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++;\n          } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--;\n          } else {\n            notTagNorBrace = true;\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token);\n\n            // And merge text with adjacent text\n            if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n              plainText += stringifyToken(tokens[i + 1]);\n              tokens.splice(i + 1, 1);\n            }\n            if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText;\n              tokens.splice(i - 1, 1);\n              i--;\n            }\n\n            tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n          }\n        }\n\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content);\n        }\n      }\n    };\n\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return;\n      }\n      walkTokens(env.tokens);\n    });\n  }\n};","nrTokens":0,"nrLines":121,"files":[{"filePath":"node_modules/reprism/languages/jsx.js","startLine":1,"endLine":121},{"filePath":"node_modules/reprism/lib/languages/jsx.js","startLine":1,"endLine":121}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'json',\n  init: function init(Prism) {\n    Prism.languages.json = {\n      property: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/i,\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n        greedy: true\n      },\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      punctuation: /[{}[\\]);,]/,\n      operator: /:/g,\n      boolean: /\\b(?:true|false)\\b/i,\n      null: /\\bnull\\b/i\n    };\n\n    Prism.languages.jsonp = Prism.languages.json;\n  }\n};","nrTokens":0,"nrLines":24,"files":[{"filePath":"node_modules/reprism/languages/json.js","startLine":1,"endLine":24},{"filePath":"node_modules/reprism/lib/languages/json.js","startLine":1,"endLine":24}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'jolie',\n  init: function init(Prism) {\n    Prism.languages.jolie = Prism.languages.extend('clike', {\n      keyword: /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,\n      builtin: /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n      operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,\n      symbol: /[|;@]/,\n      punctuation: /[,.]/,\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    });\n\n    delete Prism.languages.jolie['class-name'];\n    delete Prism.languages.jolie.function;\n\n    Prism.languages.insertBefore('jolie', 'keyword', {\n      function: {\n        pattern: /((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,\n        lookbehind: true\n      },\n      aggregates: {\n        pattern: /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n        lookbehind: true,\n        inside: {\n          withExtension: {\n            pattern: /\\bwith\\s+\\w+/,\n            inside: {\n              keyword: /\\bwith\\b/\n            }\n          },\n          function: {\n            pattern: /\\w+/\n          },\n          punctuation: {\n            pattern: /,/\n          }\n        }\n      },\n      redirects: {\n        pattern: /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n        lookbehind: true,\n        inside: {\n          punctuation: {\n            pattern: /,/\n          },\n          function: {\n            pattern: /\\w+/\n          },\n          symbol: {\n            pattern: /=>/\n          }\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":65,"files":[{"filePath":"node_modules/reprism/languages/jolie.js","startLine":1,"endLine":65},{"filePath":"node_modules/reprism/lib/languages/jolie.js","startLine":1,"endLine":65}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'javascript',\n  init: function init(Prism) {\n    Prism.languages.javascript = Prism.languages.extend('clike', {\n      keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n      number: /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n      function: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n      operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n    });\n\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      regex: {\n        pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n        lookbehind: true,\n        greedy: true\n      },\n      // This must be declared before keyword because we use \"function\" inside the look-forward\n      'function-variable': {\n        pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n        alias: 'function'\n      },\n      constant: /\\b[A-Z][A-Z\\d_]*\\b/\n    });\n\n    Prism.languages.insertBefore('javascript', 'string', {\n      'template-string': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /\\$\\{[^}]+\\}/,\n            inside: {\n              'interpolation-punctuation': {\n                pattern: /^\\$\\{|\\}$/,\n                alias: 'punctuation'\n              },\n              rest: Prism.languages.javascript\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    });\n\n    if (Prism.languages.markup) {\n      Prism.languages.insertBefore('markup', 'tag', {\n        script: {\n          pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n          lookbehind: true,\n          inside: Prism.languages.javascript,\n          alias: 'language-javascript',\n          greedy: true\n        }\n      });\n    }\n\n    Prism.languages.js = Prism.languages.javascript;\n  }\n};","nrTokens":0,"nrLines":65,"files":[{"filePath":"node_modules/reprism/languages/javascript.js","startLine":1,"endLine":65},{"filePath":"node_modules/reprism/lib/languages/javascript.js","startLine":1,"endLine":65}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'java',\n  init: function init(Prism) {\n    Prism.languages.java = Prism.languages.extend('clike', {\n      keyword: /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n      number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n      operator: {\n        pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n        lookbehind: true\n      }\n    });\n\n    Prism.languages.insertBefore('java', 'function', {\n      annotation: {\n        alias: 'punctuation',\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true\n      }\n    });\n\n    Prism.languages.insertBefore('java', 'class-name', {\n      generics: {\n        pattern: /<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,\n        alias: 'function',\n        inside: {\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[<>(),.:]/\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/languages/java.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/java.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'j',\n  init: function init(Prism) {\n    Prism.languages.j = {\n      comment: /\\bNB\\..*/,\n      string: {\n        pattern: /'(?:''|[^'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword: /\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n      verb: {\n        // Negative look-ahead prevents bad highlighting\n        // of ^: ;. =. =: !. !:\n        pattern: /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n        alias: 'keyword'\n      },\n      number: /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_(?!\\.))/,\n      adverb: {\n        pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n        alias: 'builtin'\n      },\n      operator: /[=a][.:]|_\\./,\n      conjunction: {\n        pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n        alias: 'variable'\n      },\n      punctuation: /[()]/\n    };\n  }\n};","nrTokens":0,"nrLines":35,"files":[{"filePath":"node_modules/reprism/languages/j.js","startLine":1,"endLine":35},{"filePath":"node_modules/reprism/lib/languages/j.js","startLine":1,"endLine":35}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'io',\n  init: function init(Prism) {\n    Prism.languages.io = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }],\n      'triple-quoted-string': {\n        pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:activate|activeCoroCount|asString|block|break|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getSlot|getEnvironmentVariable|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|call|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n      builtin: /\\b(?:Array|AudioDevice|AudioMixer|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Regex|SGML|SGMLElement|SGMLParser|SQLite|Server|Sequence|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink|Random|BigNum|Sequence)\\b/,\n      boolean: /\\b(?:true|false|nil)\\b/,\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?/i,\n      operator: /[=!*/%+-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|(\\b(?:return|and|or|not)\\b)|@@?|\\?\\??|\\.\\./,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/languages/io.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/io.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ini',\n  init: function init(Prism) {\n    Prism.languages.ini = {\n      comment: /^[ \\t]*;.*$/m,\n      selector: /^[ \\t]*\\[.*?\\]/m,\n      constant: /^[ \\t]*[^\\s=]+?(?=[ \\t]*=)/m,\n      'attr-value': {\n        pattern: /=.*/,\n        inside: {\n          punctuation: /^[=]/\n        }\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/languages/ini.js","startLine":1,"endLine":21},{"filePath":"node_modules/reprism/lib/languages/ini.js","startLine":1,"endLine":21}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'inform7',\n  init: function init(Prism) {\n    Prism.languages.inform7 = {\n      string: {\n        pattern: /\"[^\"]*\"/,\n        inside: {\n          substitution: {\n            pattern: /\\[[^\\]]+\\]/,\n            inside: {\n              delimiter: {\n                pattern: /\\[|\\]/,\n                alias: 'punctuation'\n              }\n              // See rest below\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /\\[[^\\]]+\\]/,\n        greedy: true\n      },\n      title: {\n        pattern: /^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,\n        alias: 'important'\n      },\n      number: {\n        pattern: /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?\\w*|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,\n        lookbehind: true\n      },\n      verb: {\n        pattern: /(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      keyword: {\n        pattern: /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n        lookbehind: true\n      },\n      property: {\n        pattern: /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      position: {\n        pattern: /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      type: {\n        pattern: /(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      punctuation: /[.,:;(){}]/\n    };\n\n    Prism.languages.inform7.string.inside.substitution.inside.rest = Prism.languages.inform7;\n    // We don't want the remaining text in the substitution to be highlighted as the string.\n    Prism.languages.inform7.string.inside.substitution.inside.rest.text = {\n      pattern: /\\S(?:\\s*\\S)*/,\n      alias: 'comment'\n    };\n  }\n};","nrTokens":0,"nrLines":71,"files":[{"filePath":"node_modules/reprism/languages/inform7.js","startLine":1,"endLine":71},{"filePath":"node_modules/reprism/lib/languages/inform7.js","startLine":1,"endLine":71}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'icon',\n  init: function init(Prism) {\n    Prism.languages.icon = {\n      comment: /#.*/,\n      string: {\n        pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n      'builtin-keyword': {\n        pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n        alias: 'variable'\n      },\n      directive: {\n        pattern: /\\$\\w+/,\n        alias: 'builtin'\n      },\n      keyword: /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n      function: /(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n      operator: /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n      punctuation: /[\\[\\](){},;]/\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/icon.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/icon.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ichigojam',\n  init: function init(Prism) {\n    // according to the offical reference (EN)\n    // https://ichigojam.net/IchigoJam-en.html\n    Prism.languages.ichigojam = {\n      comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n      string: {\n        pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n        greedy: true\n      },\n      number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n      keyword: /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GSB|GOTO|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|RIGHT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n      function: /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n      label: /(?:\\B@[^\\s]+)/i,\n      operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n      punctuation: /[\\[,;:()\\]]/\n    };\n  }\n};","nrTokens":0,"nrLines":25,"files":[{"filePath":"node_modules/reprism/languages/ichigojam.js","startLine":1,"endLine":25},{"filePath":"node_modules/reprism/lib/languages/ichigojam.js","startLine":1,"endLine":25}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'http',\n  init: function init(Prism) {\n    Prism.languages.http = {\n      'request-line': {\n        pattern: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\shttps?:\\/\\/\\S+\\sHTTP\\/[0-9.]+/m,\n        inside: {\n          // HTTP Verb\n          property: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\n          // Path or query argument\n          'attr-name': /:\\w+/\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/1.[01] \\d+.*/m,\n        inside: {\n          // Status, e.g. 200 OK\n          property: {\n            pattern: /(^HTTP\\/1.[01] )\\d+.*/i,\n            lookbehind: true\n          }\n        }\n      },\n      // HTTP header name\n      'header-name': {\n        pattern: /^[\\w-]+:(?=.)/m,\n        alias: 'keyword'\n      }\n\n      // Create a mapping of Content-Type headers to language definitions\n    };var httpLanguages = {\n      'application/json': Prism.languages.javascript,\n      'application/xml': Prism.languages.markup,\n      'text/xml': Prism.languages.markup,\n      'text/html': Prism.languages.markup\n\n      // Insert each content type parser that has its associated language\n      // currently loaded.\n    };for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        var options = {};\n        options[contentType] = {\n          pattern: new RegExp('(content-type:\\\\s*' + contentType + '[\\\\w\\\\W]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\w\\\\W]*', 'i'),\n          lookbehind: true,\n          inside: {\n            rest: httpLanguages[contentType]\n          }\n        };\n        Prism.languages.insertBefore('http', 'header-name', options);\n      }\n    }\n  }\n};","nrTokens":0,"nrLines":58,"files":[{"filePath":"node_modules/reprism/languages/http.js","startLine":1,"endLine":58},{"filePath":"node_modules/reprism/lib/languages/http.js","startLine":1,"endLine":58}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'hsts',\n  init: function init(Prism) {\n    /**\n     * Original by Scott Helme.\n     *\n     * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n     */\n\n    Prism.languages.hsts = {\n      directive: {\n        pattern: /\\b(?:max-age=|includeSubDomains|preload)/,\n        alias: 'keyword'\n      },\n      safe: {\n        pattern: /\\d{8,}/,\n        alias: 'selector'\n      },\n      unsafe: {\n        pattern: /\\d{0,7}/,\n        alias: 'function'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/hsts.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/hsts.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'hpkp',\n  init: function init(Prism) {\n    /**\n     * Original by Scott Helme.\n     *\n     * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n     */\n\n    Prism.languages.hpkp = {\n      directive: {\n        pattern: /\\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256=\"[a-zA-Z\\d+=/]+\"|(?:max-age|report-uri)=|report-to )/,\n        alias: 'keyword'\n      },\n      safe: {\n        pattern: /\\d{7,}/,\n        alias: 'selector'\n      },\n      unsafe: {\n        pattern: /\\d{0,6}/,\n        alias: 'function'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/hpkp.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/hpkp.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'haxe',\n  init: function init(Prism) {\n    Prism.languages.haxe = Prism.languages.extend('clike', {\n      // Strings can be multi-line\n      string: {\n        pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n            lookbehind: true,\n            inside: {\n              interpolation: {\n                pattern: /^\\$\\w*/,\n                alias: 'variable'\n              }\n              // See rest below\n            }\n          }\n        }\n      },\n      // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n      keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n      operator: /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n    });\n    Prism.languages.insertBefore('haxe', 'class-name', {\n      regex: {\n        pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n        greedy: true\n      }\n    });\n    Prism.languages.insertBefore('haxe', 'keyword', {\n      preprocessor: {\n        pattern: /#\\w+/,\n        alias: 'builtin'\n      },\n      metadata: {\n        pattern: /@:?\\w+/,\n        alias: 'symbol'\n      },\n      reification: {\n        pattern: /\\$(?:\\w+|(?=\\{))/,\n        alias: 'variable'\n      }\n    });\n    Prism.languages.haxe.string.inside.interpolation.inside.rest = Prism.languages.haxe;\n    delete Prism.languages.haxe['class-name'];\n  }\n};","nrTokens":0,"nrLines":55,"files":[{"filePath":"node_modules/reprism/languages/haxe.js","startLine":1,"endLine":55},{"filePath":"node_modules/reprism/lib/languages/haxe.js","startLine":1,"endLine":55}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'haskell',\n  init: function init(Prism) {\n    Prism.languages.haskell = {\n      comment: {\n        pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n        lookbehind: true\n      },\n      char: /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n      string: {\n        pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n      import_statement: {\n        // The imported or hidden names are not included in this import\n        // statement. This is because we want to highlight those exactly like\n        // we do for the names in the program.\n        pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n        lookbehind: true,\n        inside: {\n          keyword: /\\b(?:import|qualified|as|hiding)\\b/\n        }\n      },\n      // These are builtin variables only. Constructors are highlighted later as a constant.\n      builtin: /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n      // decimal integers and floating point numbers | octal integers | hexadecimal integers\n      number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n      // Most of this is needed because of the meaning of a single '.'.\n      // If it stands alone freely, it is the function composition.\n      // It may also be a separator between a module name and an identifier => no\n      // operator. If it comes together with other special characters it is an\n      // operator too.\n      operator: /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n      // In Haskell, nearly everything is a variable, do not highlight these.\n      hvariable: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n      constant: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":46,"files":[{"filePath":"node_modules/reprism/languages/haskell.js","startLine":1,"endLine":46},{"filePath":"node_modules/reprism/lib/languages/haskell.js","startLine":1,"endLine":46}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'handlebars',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.handlebars = {\n        comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n        delimiter: {\n          pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n          alias: 'punctuation'\n        },\n        string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n        boolean: /\\b(?:true|false)\\b/,\n        block: {\n          pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        brackets: {\n          pattern: /\\[[^\\]]+\\]/,\n          inside: {\n            punctuation: /\\[|\\]/,\n            variable: /[\\s\\S]+/\n          }\n        },\n        punctuation: /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n        variable: /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n      };\n\n      Prism.hooks.add('before-tokenize', function (env) {\n        var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n      });\n\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":45,"files":[{"filePath":"node_modules/reprism/languages/handlebars.js","startLine":1,"endLine":45},{"filePath":"node_modules/reprism/lib/languages/handlebars.js","startLine":1,"endLine":45}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'haml',\n  init: function init(Prism) {\n    /* TODO\n    Handle multiline code after tag\n     %foo= some |\n    multiline |\n    code |\n    */\n\n    (function (Prism) {\n      Prism.languages.haml = {\n        // Multiline stuff should appear before the rest\n\n        'multiline-comment': {\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,\n          lookbehind: true,\n          alias: 'comment'\n        },\n\n        'multiline-code': [{\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.ruby\n          }\n        }, {\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.ruby\n          }\n        }],\n\n        // See at the end of the file for known filters\n        filter: {\n          pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            }\n          }\n        },\n\n        markup: {\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.markup\n          }\n        },\n        doctype: {\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n          lookbehind: true\n        },\n        tag: {\n          // Allows for one nested group of braces\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n          lookbehind: true,\n          inside: {\n            attributes: [{\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,\n              lookbehind: true,\n              inside: {\n                rest: Prism.languages.ruby\n              }\n            }, {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                  lookbehind: true\n                },\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[=(),]/\n              }\n            }, {\n              pattern: /\\[[^\\]]+\\]/,\n              inside: {\n                rest: Prism.languages.ruby\n              }\n            }],\n            punctuation: /[<>]/\n          }\n        },\n        code: {\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.ruby\n          }\n        },\n        // Interpolations in plain text\n        interpolation: {\n          pattern: /#\\{[^}]+\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^#\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.ruby\n          }\n        },\n        punctuation: {\n          pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n          lookbehind: true\n        }\n      };\n\n      var filter_pattern = '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\n\n      // Non exhaustive list of available filters and associated languages\n      var filters = ['css', { filter: 'coffee', language: 'coffeescript' }, 'erb', 'javascript', 'less', 'markdown', 'ruby', 'scss', 'textile'];\n      var all_filters = {};\n      for (var i = 0, l = filters.length; i < l; i++) {\n        var filter = filters[i];\n        filter = typeof filter === 'string' ? { filter: filter, language: filter } : filter;\n        if (Prism.languages[filter.language]) {\n          all_filters['filter-' + filter.filter] = {\n            pattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter)),\n            lookbehind: true,\n            inside: {\n              'filter-name': {\n                pattern: /^:[\\w-]+/,\n                alias: 'variable'\n              },\n              rest: Prism.languages[filter.language]\n            }\n          };\n        }\n      }\n\n      Prism.languages.insertBefore('haml', 'filter', all_filters);\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":145,"files":[{"filePath":"node_modules/reprism/languages/haml.js","startLine":1,"endLine":145},{"filePath":"node_modules/reprism/lib/languages/haml.js","startLine":1,"endLine":145}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'groovy',\n  init: function init(Prism) {\n    Prism.languages.groovy = Prism.languages.extend('clike', {\n      keyword: /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n      string: [{\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1|(?:\\$\\/)(?:\\$\\/\\$|[\\s\\S])*?\\/\\$/,\n        greedy: true\n      }, {\n        pattern: /([\"'\\/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }],\n      number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,\n      operator: {\n        pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    });\n\n    Prism.languages.insertBefore('groovy', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment'\n      }\n    });\n\n    Prism.languages.insertBefore('groovy', 'punctuation', {\n      'spock-block': /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\n    });\n\n    Prism.languages.insertBefore('groovy', 'function', {\n      annotation: {\n        alias: 'punctuation',\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true\n      }\n    });\n\n    // Handle string interpolation\n    Prism.hooks.add('wrap', function (env) {\n      if (env.language === 'groovy' && env.type === 'string') {\n        var delimiter = env.content[0];\n\n        if (delimiter != \"'\") {\n          var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n          if (delimiter === '$') {\n            pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n          }\n\n          // To prevent double HTML-encoding we have to decode env.content first\n          env.content = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n\n          env.content = Prism.highlight(env.content, {\n            expression: {\n              pattern: pattern,\n              lookbehind: true,\n              inside: Prism.languages.groovy\n            }\n          });\n\n          env.classes.push(delimiter === '/' ? 'regex' : 'gstring');\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":72,"files":[{"filePath":"node_modules/reprism/languages/groovy.js","startLine":1,"endLine":72},{"filePath":"node_modules/reprism/lib/languages/groovy.js","startLine":1,"endLine":72}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'graphql',\n  init: function init(Prism) {\n    Prism.languages.graphql = {\n      comment: /#.*/,\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      boolean: /\\b(?:true|false)\\b/,\n      variable: /\\$[a-z_]\\w*/i,\n      directive: {\n        pattern: /@[a-z_]\\w*/i,\n        alias: 'function'\n      },\n      'attr-name': /[a-z_]\\w*(?=\\s*:)/i,\n      keyword: [{\n        pattern: /(fragment\\s+(?!on)[a-z_]\\w*\\s+|\\.{3}\\s*)on\\b/,\n        lookbehind: true\n      }, /\\b(?:query|fragment|mutation)\\b/],\n      operator: /!|=|\\.{3}/,\n      punctuation: /[!(){}\\[\\]:=,]/\n    };\n  }\n};","nrTokens":0,"nrLines":31,"files":[{"filePath":"node_modules/reprism/languages/graphql.js","startLine":1,"endLine":31},{"filePath":"node_modules/reprism/lib/languages/graphql.js","startLine":1,"endLine":31}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'go',\n  init: function init(Prism) {\n    Prism.languages.go = Prism.languages.extend('clike', {\n      keyword: /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n      builtin: /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n      boolean: /\\b(?:_|iota|nil|true|false)\\b/,\n      operator: /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n      number: /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n      string: {\n        pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      }\n    });\n    delete Prism.languages.go['class-name'];\n  }\n};","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/reprism/languages/go.js","startLine":1,"endLine":22},{"filePath":"node_modules/reprism/lib/languages/go.js","startLine":1,"endLine":22}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'glsl',\n  init: function init(Prism) {\n    Prism.languages.glsl = Prism.languages.extend('clike', {\n      comment: [/\\/\\*[\\s\\S]*?\\*\\//, /\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/],\n      number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,\n      keyword: /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n    });\n\n    Prism.languages.insertBefore('glsl', 'comment', {\n      preprocessor: {\n        pattern: /(^[ \\t]*)#(?:(?:define|undef|if|ifdef|ifndef|else|elif|endif|error|pragma|extension|version|line)\\b)?/m,\n        lookbehind: true,\n        alias: 'builtin'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/languages/glsl.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/glsl.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\t\t\t\t\tvalue: true\n});\nexports.default = {\n\t\t\t\t\tlanguage: 'git',\n\t\t\t\t\tinit: function init(Prism) {\n\t\t\t\t\t\t\t\t\t\tPrism.languages.git = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * A simple one line comment like in a git status command\n               * For instance:\n               * $ git status\n               * # On branch infinite-scroll\n               * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n               * # and have 1 and 2 different commits each, respectively.\n               * nothing to commit (working directory clean)\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomment: /^#.*/m,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * Regexp to match the changed lines in a git diff output. Check the example below.\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleted: /^[-???].*/m,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinserted: /^\\+.*/m,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * a string (double and simple quote)\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstring: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n               * For instance:\n               * $ git add file.txt\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpattern: /^.*\\$ git .*$/m,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n                         * A git command can contain a parameter starting by a single or a double dash followed by a string\n                         * For instance:\n                         * $ git diff --cached\n                         * $ git log -p\n                         */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparameter: /\\s--?\\w+/m\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * Coordinates displayed in a git diff command\n               * For instance:\n               * $ git diff\n               * diff --git file.txt file.txt\n               * index 6214953..1d54a52 100644\n               * --- file.txt\n               * +++ file.txt\n               * @@ -1 +1,2 @@\n               * -Here's my tetx file\n               * +Here's my text file\n               * +And this is the second line\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcoord: /^@@.*@@$/m,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*\n               * Match a \"commit [SHA1]\" line in a git log output.\n               * For instance:\n               * $ git log\n               * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n               * Author: lgiraudel\n               * Date:   Mon Feb 17 11:18:34 2014 +0100\n               *\n               *     Add of a new line\n               */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommit_sha1: /^commit \\w{40}$/m\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t}\n};","nrTokens":0,"nrLines":78,"files":[{"filePath":"node_modules/reprism/languages/git.js","startLine":1,"endLine":78},{"filePath":"node_modules/reprism/lib/languages/git.js","startLine":1,"endLine":78}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'gherkin',\n  init: function init(Prism) {\n    Prism.languages.gherkin = {\n      pystring: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        alias: 'string'\n      },\n      comment: {\n        pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)#.*/,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)@\\S*/,\n        lookbehind: true\n      },\n      feature: {\n        pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Caracter??stica|Egenskab|Egenskap|Eiginleiki|Feature|F????a|Fitur|Fonctionnalit??|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Func??ionalitate|Func??ionalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalit??te|Funkcionalnost|Funkcja|Funksie|Funktionalit??t|Funktionalit??it|Funzionalit??|Hwaet|Hw??t|Jellemz??|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogu??nost|Moznosti|Mo??nosti|OH HAI|Omadus|Ominaisuus|Osobina|??zellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Po??adavek|Po??iadavka|Pretty much|Qap|Qu'meH 'ut|Savyb??|T??nh n??ng|Trajto|Vermo??|Vlastnos??|W??a??ciwo????|Zna??ilnost|????????????????????|????????????????????|??????????????????|??????????????????|??????????????|????????????????|????????????????????????????|????????????????????|????????????????????????????|??????????????|????????????????????|??????????|??????????|????????????|????????????|?????????????? ???? ??????????|????????????|????????? ?????????|??????????????????|????????? ???????????????|????????????????????????|???????????????|??????????????????|????????????????????????????????????????????????????????????|??????????????????????????????|????????????????????????|??????|???????????????|??????|??????):(?:[^:]+(?:\\r?\\n|\\r|$))*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]+/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      scenario: {\n        pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|??r|Agtergrond|All y'all|Antecedentes|Antecedents|Atbur??ar??s|Atbur??ar??sir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|B???i c???nh|Cefndir|Cenario|Cen??rio|Cenario de Fundo|Cen??rio de Fundo|Cenarios|Cen??rios|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|D??mi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delinea????o do Cen??rio|Dis is what went down|D??? li???u|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cen??rio|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgat??k??nyv|Forgat??k??nyv v??zlat|Fundo|Ge??mi??|ghantoH|Grundlage|Hannergrond|H??tt??r|Heave to|Istorik|Juhtumid|Keadaan|Khung k???ch b???n|Khung t??nh hu???ng|K???ch b???n|Koncept|Konsep skenario|Kont??ks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|L??sing Atbur??ar??sar|L??sing D??ma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|N????rt Scen??ra|N????rt Sc??n????e|N????rt Scen??ru|Oris scenarija|??rnekler|Osnova|Osnova Scen??ra|Osnova sc??n????e|Osnutek|Ozadje|Paraugs|Pavyzd??iai|P??ld??k|Piem??ri|Plan du sc??nario|Plan du Sc??nario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozad??|Pozadie|Pozadina|Pr??klady|P????klady|Primer|Primeri|Primjeri|Przyk??ady|Raamstsenaarium|Reckon it's like|Rerefons|Scen??r|Sc??n????|Scenarie|Scenarij|Scenarijai|Scenarijaus ??ablonas|Scenariji|Scen??rijs|Scen??rijs p??c parauga|Scenarijus|Scenario|Sc??nario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ??e|Se the|Se ??e|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo tasla????|Shiver me timbers|Situ??cija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structur?? scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hw??r swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|T??nh hu???ng|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo\\-ho\\-ho|You'll wanna|Za??o??enia|????????????????????????|?????????????????? ????????????????|??????????????|??????????????|????????????????|??????????|????????????????|??????????????|????????????????|????????????????|????????????|????????????????????|????????????????|??????????????????????|??????????????????????|????????????????|????????????|??????????????|??????????????|?????????? ???? ????????????????|??????????|?????????????????? ??????????????????|?????????????????? ????????????????|?????????????????? ????????????????|????????????????|???????????????? ??????????????????????|?????????????????????? ????????????????|??????????????????|????????????????|????????????????|??????????|????????????????|??????????????|??????|?????????? ??????????|??????????|??????????????|?????????? ????????????|??????????|???? ????????|??????????|????????????|??????????????|?????????????? ????????|????????????|???????? ???????? ???? ????????|????????????????|?????????? ????|??????????????????|????????????????????????|???????????????????????? ?????????????????????|???????????????????????????|????????????????????????|???????????????|??????????????? ???????????????|??????????????? ????????? ????????????|??????????????????|????????????????????????|????????????|?????????????????????|???????????????????????????|??????????????????????????????|???????????????????????????|??????????????????|????????????????????????|???????????????????????????????????????????????????????????????|??????????????????????????????????????????|?????????????????????????????????????????????|??????????????????|???????????????????????????????????????|???????????????????????????|??????|????????????|???????????? ??????|???|????????????|????????????|??????????????????????????????|????????????????????????|??????????????????????????????|????????????|???|??????|??????|????????????|??????|????????????|??????|????????????|??????|????????????|??????):[^:\\r\\n]*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]*/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      'table-body': {\n        // Look-behind is used to skip the table head, which has the same format as any table row\n        pattern: /((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+/,\n        lookbehind: true,\n        inside: {\n          outline: {\n            pattern: /<[^>]+?>/,\n            alias: 'variable'\n          },\n          td: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'string'\n          },\n          punctuation: /\\|/\n        }\n      },\n      'table-head': {\n        pattern: /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*/,\n        inside: {\n          th: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'variable'\n          },\n          punctuation: /\\|/\n        }\n      },\n      atrule: {\n        pattern: /((?:\\r?\\n|\\r)[ \\t]+)(?:'ach|'a|'ej|7|a|A tak??|A taktie??|A tie??|A z??rove??|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|At??s|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Bi???t|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|C??nd|Cando|Cand|Ce|Cuando|??e|??a ??e|??a|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Da??i fiind|Da??i fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donita??o|Do|Dun|Duota|??urh|Eeldades|Ef|E??er ki|Entao|Ent??o|Ent??n|Entonces|En|Epi|E|??s|Etant donn??e|Etant donn??|Et|??tant donn??es|??tant donn??e|??tant donn??|Etant donn??es|Etant donn??s|??tant donn??s|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Je??li|Je??eli|Kadar|Kada|Kad|Kai|Kaj|Kdy??|Ke??|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|L?? sa a|L??|Logo|Lorsqu'<|Lorsque|m??|Maar|Mais|Maj??c|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|N??r|N??r|Nato|Nh??ng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Per??|Podano|Pokia??|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|S??|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|??i|??i|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Th??|Thurh|Toda|Too right|ugeholl|Und|Un|V??|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za p??edpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zak??adaj??c|Zaradi|Zatati|??a ??e|??a|????|??egar|??urh|????????|??????????????????|??????|????????|????????|?? ??????????|????????|??????|??????|????????|??|????????|??????????|????????|??????????|????|????|????????????|????????|????????????????|????????|????????????|????????????|????????????|??|??|?? ???????? ????|????????|??????|????????????|??????????|????????|??????????|??????????|????????????????|??????????|????|????????|????????????????????, ????|????????????????????|??????????|??????????|????|??????????|????????|????|????????|??????|????????|??????|??????|????|????????????|??????|????????|??????????|????????|??????|??????|??????|???? ??????|????????????|????????|??????|????|????|????|??????????|?????? ??????|??????|????????|??????|????????????|??|?????????|??????|?????????|??????????????????|???????????????|??????|?????????|?????????|??????|??????????????????|??????|?????????|?????????|????????????|??????????????? ??????|????????????|??????|??????|?????????????????????|??? ?????????????????????????????????|????????????|?????????????????????????????????|???????????????|????????????|????????????|??????????????????|???????????????|?????????????????????????????????|????????????????????????|?????????????????????|?????????|???????????????|?????????|?????????<|?????????<|???<|??????<|??????<|??????<|??????<|?????????<|??????<|?????????<|?????????<|?????????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|??????<|???<|???<|??????<|??????<|??????<)(?=[ \\t]+)/,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n        inside: {\n          outline: {\n            pattern: /<[^>]+?>/,\n            alias: 'variable'\n          }\n        }\n      },\n      outline: {\n        pattern: /<[^>]+?>/,\n        alias: 'variable'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":89,"files":[{"filePath":"node_modules/reprism/languages/gherkin.js","startLine":1,"endLine":89},{"filePath":"node_modules/reprism/lib/languages/gherkin.js","startLine":1,"endLine":89}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'gedcom',\n  init: function init(Prism) {\n    Prism.languages.gedcom = {\n      'line-value': {\n        // Preceded by level, optional pointer, and tag\n        pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,\n        lookbehind: true,\n        inside: {\n          pointer: {\n            pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n            alias: 'variable'\n          }\n        }\n      },\n      tag: {\n        // Preceded by level and optional pointer\n        pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n        lookbehind: true,\n        alias: 'string'\n      },\n      level: {\n        pattern: /(^\\s*)\\d+/m,\n        lookbehind: true,\n        alias: 'number'\n      },\n      pointer: {\n        pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n        alias: 'variable'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/languages/gedcom.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/gedcom.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'fsharp',\n  init: function init(Prism) {\n    Prism.languages.fsharp = Prism.languages.extend('clike', {\n      comment: [{\n        pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true\n      }],\n      keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n      string: {\n        pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1)B?/,\n        greedy: true\n      },\n      number: [/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/, /\\b0b[01]+(?:y|uy)?\\b/, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/]\n    });\n    Prism.languages.insertBefore('fsharp', 'keyword', {\n      preprocessor: {\n        pattern: /^[^\\r\\n\\S]*#.*/m,\n        alias: 'property',\n        inside: {\n          directive: {\n            pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/languages/fsharp.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/fsharp.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'fortran',\n  init: function init(Prism) {\n    Prism.languages.fortran = {\n      'quoted-number': {\n        pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n        alias: 'number'\n      },\n      string: {\n        pattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,\n        inside: {\n          comment: {\n            pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n            lookbehind: true\n          }\n        }\n      },\n      comment: {\n        pattern: /!.*/,\n        greedy: true\n      },\n      boolean: /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n      number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n      keyword: [\n      // Types\n      /\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i,\n      // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\n      // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\n      // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i],\n      operator: [/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i, {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }],\n      punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n    };\n  }\n};","nrTokens":0,"nrLines":46,"files":[{"filePath":"node_modules/reprism/languages/fortran.js","startLine":1,"endLine":46},{"filePath":"node_modules/reprism/lib/languages/fortran.js","startLine":1,"endLine":46}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'flow',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.flow = Prism.languages.extend('javascript', {});\n\n      Prism.languages.insertBefore('flow', 'keyword', {\n        type: [{\n          pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n          alias: 'tag'\n        }]\n      });\n      Prism.languages.flow['function-variable'].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i;\n\n      Prism.languages.insertBefore('flow', 'operator', {\n        'flow-punctuation': {\n          pattern: /\\{\\||\\|\\}/,\n          alias: 'punctuation'\n        }\n      });\n\n      if (Prism.util.type(Prism.languages.flow.keyword) !== 'Array') {\n        Prism.languages.flow.keyword = [Prism.languages.flow.keyword];\n      }\n      Prism.languages.flow.keyword.unshift({\n        pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n        lookbehind: true\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":39,"files":[{"filePath":"node_modules/reprism/languages/flow.js","startLine":1,"endLine":39},{"filePath":"node_modules/reprism/lib/languages/flow.js","startLine":1,"endLine":39}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'erlang',\n  init: function init(Prism) {\n    Prism.languages.erlang = {\n      comment: /%.+/,\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      'quoted-function': {\n        pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n        alias: 'function'\n      },\n      'quoted-atom': {\n        pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n        alias: 'atom'\n      },\n      boolean: /\\b(?:true|false)\\b/,\n      keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n      number: [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n      function: /\\b[a-z][\\w@]*(?=\\()/,\n      variable: {\n        // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n        pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n        lookbehind: true\n      },\n      operator: [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      }, {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }],\n      atom: /\\b[a-z][\\w@]*/,\n      punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n    };\n  }\n};","nrTokens":0,"nrLines":45,"files":[{"filePath":"node_modules/reprism/languages/erlang.js","startLine":1,"endLine":45},{"filePath":"node_modules/reprism/lib/languages/erlang.js","startLine":1,"endLine":45}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'erb',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.erb = Prism.languages.extend('ruby', {});\n      Prism.languages.insertBefore('erb', 'comment', {\n        delimiter: {\n          pattern: /^<%=?|%>$/,\n          alias: 'punctuation'\n        }\n      });\n\n      Prism.hooks.add('before-tokenize', function (env) {\n        var erbPattern = /<%=?[\\s\\S]+?%>/g;\n        Prism.languages['markup-templating'].buildPlaceholders(env, 'erb', erbPattern);\n      });\n\n      Prism.hooks.add('after-tokenize', function (env) {\n        Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb');\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":28,"files":[{"filePath":"node_modules/reprism/languages/erb.js","startLine":1,"endLine":28},{"filePath":"node_modules/reprism/lib/languages/erb.js","startLine":1,"endLine":28}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'elixir',\n  init: function init(Prism) {\n    Prism.languages.elixir = {\n      comment: {\n        pattern: /#.*/m,\n        lookbehind: true\n      },\n      // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n      regex: {\n        pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n        greedy: true\n      },\n      string: [{\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n        pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }, {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }, {\n        // Multi-line strings are allowed\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }],\n      atom: {\n        // Look-behind prevents bad highlighting of the :: operator\n        pattern: /(^|[^:]):\\w+/,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      // Look-ahead prevents bad highlighting of the :: operator\n      'attr-name': /\\w+:(?!:)/,\n      capture: {\n        // Look-behind prevents bad highlighting of the && operator\n        pattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      argument: {\n        // Look-behind prevents bad highlighting of the && operator\n        pattern: /(^|[^&])&\\d+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      attribute: {\n        pattern: /@[\\S]+/,\n        alias: 'variable'\n      },\n      number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n      keyword: /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\n      boolean: /\\b(?:true|false|nil)\\b/,\n      operator: [/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/, {\n        // We don't want to match <<\n        pattern: /([^<])<(?!<)/,\n        lookbehind: true\n      }, {\n        // We don't want to match >>\n        pattern: /([^>])>(?!>)/,\n        lookbehind: true\n      }],\n      punctuation: /<<|>>|[.,%\\[\\]{}()]/\n    };\n\n    Prism.languages.elixir.string.forEach(function (o) {\n      o.inside = {\n        interpolation: {\n          pattern: /#\\{[^}]+\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^#\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.elixir\n          }\n        }\n      };\n    });\n  }\n};","nrTokens":0,"nrLines":94,"files":[{"filePath":"node_modules/reprism/languages/elixir.js","startLine":1,"endLine":94},{"filePath":"node_modules/reprism/lib/languages/elixir.js","startLine":1,"endLine":94}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'eiffel',\n  init: function init(Prism) {\n    Prism.languages.eiffel = {\n      comment: /--.*/,\n      string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      },\n      // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      },\n      // Single-line string\n      {\n        pattern: /\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }],\n      // normal char | special char | char code\n      char: /'(?:%.|[^%'\\r\\n])+'/,\n      keyword: /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n      boolean: /\\b(?:True|False)\\b/i,\n      // Convention: class-names are always all upper-case characters\n      'class-name': {\n        pattern: /\\b[A-Z][\\dA-Z_]*\\b/,\n        alias: 'builtin'\n      },\n      number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n      // Decimal\n      /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/i],\n      punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n      operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n    };\n  }\n};","nrTokens":0,"nrLines":45,"files":[{"filePath":"node_modules/reprism/languages/eiffel.js","startLine":1,"endLine":45},{"filePath":"node_modules/reprism/lib/languages/eiffel.js","startLine":1,"endLine":45}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'docker',\n  init: function init(Prism) {\n    Prism.languages.docker = {\n      keyword: {\n        pattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/im,\n        lookbehind: true\n      },\n      string: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      comment: /#.*/,\n      punctuation: /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\n    };\n\n    Prism.languages.dockerfile = Prism.languages.docker;\n  }\n};","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/reprism/languages/docker.js","startLine":1,"endLine":21},{"filePath":"node_modules/reprism/lib/languages/docker.js","startLine":1,"endLine":21}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'django',\n  init: function init(Prism) {\n    // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n    // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n\n    var _django_template = {\n      property: {\n        pattern: /(?:{{|{%)[\\s\\S]*?(?:%}|}})/g,\n        greedy: true,\n        inside: {\n          string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n          },\n          keyword: /\\b(?:\\||load|verbatim|widthratio|ssi|firstof|for|url|ifchanged|csrf_token|lorem|ifnotequal|autoescape|now|templatetag|debug|cycle|ifequal|regroup|comment|filter|endfilter|if|spaceless|with|extends|block|include|else|empty|endif|endfor|as|endblock|endautoescape|endverbatim|trans|endtrans|[Tt]rue|[Ff]alse|[Nn]one|in|is|static|macro|endmacro|call|endcall|set|endset|raw|endraw)\\b/,\n          operator: /[-+=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n          function: /\\b(?:_|abs|add|addslashes|attr|batch|callable|capfirst|capitalize|center|count|cut|d|date|default|default_if_none|defined|dictsort|dictsortreversed|divisibleby|e|equalto|escape|escaped|escapejs|even|filesizeformat|first|float|floatformat|force_escape|forceescape|format|get_digit|groupby|indent|int|iriencode|iterable|join|last|length|length_is|linebreaks|linebreaksbr|linenumbers|list|ljust|lower|make_list|map|mapping|number|odd|phone2numeric|pluralize|pprint|random|reject|rejectattr|removetags|replace|reverse|rjust|round|safe|safeseq|sameas|select|selectattr|sequence|slice|slugify|sort|string|stringformat|striptags|sum|time|timesince|timeuntil|title|trim|truncate|truncatechars|truncatechars_html|truncatewords|truncatewords_html|undefined|unordered_list|upper|urlencode|urlize|urlizetrunc|wordcount|wordwrap|xmlattr|yesno)\\b/,\n          important: /\\b-?\\d+(?:\\.\\d+)?\\b/,\n          variable: /\\b\\w+?\\b/,\n          punctuation: /[[\\];(),.:]/\n        }\n      }\n    };\n\n    Prism.languages.django = Prism.languages.extend('markup', {\n      comment: /(?:<!--|{#)[\\s\\S]*?(?:#}|-->)/\n    });\n    // Updated html tag pattern to allow template tags inside html tags\n    Prism.languages.django.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^>=]+))?)*\\s*\\/?>/i;\n    Prism.languages.insertBefore('django', 'entity', _django_template);\n    Prism.languages.insertBefore('inside', 'tag', _django_template, Prism.languages.django.tag);\n\n    if (Prism.languages.javascript) {\n      // Combine js code and template tags painting inside <script> blocks\n      Prism.languages.insertBefore('inside', 'string', _django_template, Prism.languages.django.script);\n      Prism.languages.django.script.inside.string.inside = _django_template;\n    }\n    if (Prism.languages.css) {\n      // Combine css code and template tags painting inside <style> blocks\n      Prism.languages.insertBefore('inside', 'atrule', { tag: _django_template.property }, Prism.languages.django.style);\n      Prism.languages.django.style.inside.string.inside = _django_template;\n    }\n\n    // Add an Jinja2 alias\n    Prism.languages.jinja2 = Prism.languages.django;\n  }\n};","nrTokens":0,"nrLines":53,"files":[{"filePath":"node_modules/reprism/languages/django.js","startLine":1,"endLine":53},{"filePath":"node_modules/reprism/lib/languages/django.js","startLine":1,"endLine":53}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'diff',\n  init: function init(Prism) {\n    Prism.languages.diff = {\n      coord: [\n      // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n      /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n      // Match \"@@ ... @@\" coord lines in unified diff.\n      /^@@.*@@$/m,\n      // Match coord lines in normal diff (starts with a number).\n      /^\\d+.*$/m],\n\n      // Match inserted and deleted lines. Support both +/- and >/< styles.\n      deleted: /^[-<].*$/m,\n      inserted: /^[+>].*$/m,\n\n      // Match \"different\" lines (prefixed with \"!\") in context diff.\n      diff: {\n        pattern: /^!(?!!).+$/m,\n        alias: 'important'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":29,"files":[{"filePath":"node_modules/reprism/languages/diff.js","startLine":1,"endLine":29},{"filePath":"node_modules/reprism/lib/languages/diff.js","startLine":1,"endLine":29}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'dart',\n  init: function init(Prism) {\n    Prism.languages.dart = Prism.languages.extend('clike', {\n      string: [{\n        pattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true\n      }, {\n        pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }],\n      keyword: [/\\b(?:async|sync|yield)\\*/, /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\\b/],\n      operator: /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n    });\n\n    Prism.languages.insertBefore('dart', 'function', {\n      metadata: {\n        pattern: /@\\w+/,\n        alias: 'symbol'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":28,"files":[{"filePath":"node_modules/reprism/languages/dart.js","startLine":1,"endLine":28},{"filePath":"node_modules/reprism/lib/languages/dart.js","startLine":1,"endLine":28}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'd',\n  init: function init(Prism) {\n    Prism.languages.d = Prism.languages.extend('clike', {\n      string: [\n      // r\"\", x\"\"\n      /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/,\n      // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n      /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/,\n      // q\"IDENT\n      // ...\n      // IDENT\"\n      /\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/,\n      // q\"//\", q\"||\", etc.\n      /\\bq\"(.)[\\s\\S]*?\\1\"/,\n      // Characters\n      /'(?:\\\\'|\\\\?[^']+)'/, /([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/],\n\n      number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i, {\n        pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,\n        lookbehind: true\n      }],\n\n      // In order: $, keywords and special tokens, globally defined symbols\n      keyword: /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n      operator: /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n    });\n\n    Prism.languages.d.comment = [\n    // Shebang\n    /^\\s*#!.+/,\n    // /+ +/\n    {\n      // Allow one level of nesting\n      pattern: /(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,\n      lookbehind: true\n    }].concat(Prism.languages.d.comment);\n\n    Prism.languages.insertBefore('d', 'comment', {\n      'token-string': {\n        // Allow one level of nesting\n        pattern: /\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,\n        alias: 'string'\n      }\n    });\n\n    Prism.languages.insertBefore('d', 'keyword', {\n      property: /\\B@\\w*/\n    });\n\n    Prism.languages.insertBefore('d', 'function', {\n      register: {\n        // Iasm registers\n        pattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n        alias: 'variable'\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":67,"files":[{"filePath":"node_modules/reprism/languages/d.js","startLine":1,"endLine":67},{"filePath":"node_modules/reprism/lib/languages/d.js","startLine":1,"endLine":67}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'css',\n  init: function init(Prism) {\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n        inside: {\n          rule: /@[\\w-]+/\n          // See rest below\n        }\n      },\n      url: /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n      selector: /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n      string: {\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n      important: /\\B!important\\b/i,\n      function: /[-a-z0-9]+(?=\\()/i,\n      punctuation: /[(){};:]/\n    };\n\n    Prism.languages.css.atrule.inside.rest = Prism.languages.css;\n\n    if (Prism.languages.markup) {\n      Prism.languages.insertBefore('markup', 'tag', {\n        style: {\n          pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n          lookbehind: true,\n          inside: Prism.languages.css,\n          alias: 'language-css',\n          greedy: true\n        }\n      });\n\n      Prism.languages.insertBefore('inside', 'attr-value', {\n        'style-attr': {\n          pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n          inside: {\n            'attr-name': {\n              pattern: /^\\s*style/i,\n              inside: Prism.languages.markup.tag.inside\n            },\n            punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n            'attr-value': {\n              pattern: /.+/i,\n              inside: Prism.languages.css\n            }\n          },\n          alias: 'language-css'\n        }\n      }, Prism.languages.markup.tag);\n    }\n  }\n};","nrTokens":0,"nrLines":62,"files":[{"filePath":"node_modules/reprism/languages/css.js","startLine":1,"endLine":62},{"filePath":"node_modules/reprism/lib/languages/css.js","startLine":1,"endLine":62}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'css-extras',\n  init: function init(Prism) {\n    Prism.languages.css.selector = {\n      pattern: /[^{}\\s][^{}]*(?=\\s*\\{)/,\n      inside: {\n        'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+(?:\\(.*\\))?/,\n        class: /\\.[-:.\\w]+/,\n        id: /#[-:.\\w]+/,\n        attribute: /\\[[^\\]]+\\]/\n      }\n    };\n\n    Prism.languages.insertBefore('css', 'function', {\n      hexcode: /#[\\da-f]{3,8}/i,\n      entity: /\\\\[\\da-f]{1,8}/i,\n      number: /[\\d%.]+/\n    });\n  }\n};","nrTokens":0,"nrLines":26,"files":[{"filePath":"node_modules/reprism/languages/css-extras.js","startLine":1,"endLine":26},{"filePath":"node_modules/reprism/lib/languages/css-extras.js","startLine":1,"endLine":26}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'csp',\n  init: function init(Prism) {\n    /**\n     * Original by Scott Helme.\n     *\n     * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n     *\n     * Supports the following:\n     *  - CSP Level 1\n     *  - CSP Level 2\n     *  - CSP Level 3\n     */\n\n    Prism.languages.csp = {\n      directive: {\n        pattern: /\\b(?:(?:base-uri|form-action|frame-ancestors|plugin-types|referrer|reflected-xss|report-to|report-uri|require-sri-for|sandbox) |(?:block-all-mixed-content|disown-opener|upgrade-insecure-requests)(?: |;)|(?:child|connect|default|font|frame|img|manifest|media|object|script|style|worker)-src )/i,\n        alias: 'keyword'\n      },\n      safe: {\n        pattern: /'(?:self|none|strict-dynamic|(?:nonce-|sha(?:256|384|512)-)[a-zA-Z\\d+=/]+)'/,\n        alias: 'selector'\n      },\n      unsafe: {\n        pattern: /(?:'unsafe-inline'|'unsafe-eval'|'unsafe-hashed-attributes'|\\*)/,\n        alias: 'function'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":35,"files":[{"filePath":"node_modules/reprism/languages/csp.js","startLine":1,"endLine":35},{"filePath":"node_modules/reprism/lib/languages/csp.js","startLine":1,"endLine":35}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'csharp',\n  init: function init(Prism) {\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n      keyword: /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n      string: [{\n        pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      }, {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n        greedy: true\n      }],\n      'class-name': [{\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n        inside: {\n          punctuation: /\\./\n        }\n      }, {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }, {\n        // class Foo : Bar\n        pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }, {\n        // class Foo\n        pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }],\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i\n    });\n\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      'generic-method': {\n        pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n        inside: {\n          function: /^\\w+/,\n          'class-name': {\n            pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          keyword: Prism.languages.csharp.keyword,\n          punctuation: /[<>(),.:]/\n        }\n      },\n      preprocessor: {\n        pattern: /(^\\s*)#.*/m,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight preprocessor directives as keywords\n          directive: {\n            pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    });\n\n    Prism.languages.dotnet = Prism.languages.csharp;\n  }\n};","nrTokens":0,"nrLines":81,"files":[{"filePath":"node_modules/reprism/languages/csharp.js","startLine":1,"endLine":81},{"filePath":"node_modules/reprism/lib/languages/csharp.js","startLine":1,"endLine":81}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'crystal',\n  init: function init(Prism) {\n    (function (Prism) {\n      Prism.languages.crystal = Prism.languages.extend('ruby', {\n        keyword: [/\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/, {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }],\n\n        number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n      });\n\n      Prism.languages.insertBefore('crystal', 'string', {\n        attribute: {\n          pattern: /@\\[.+?\\]/,\n          alias: 'attr-name',\n          inside: {\n            delimiter: {\n              pattern: /^@\\[|\\]$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        },\n\n        expansion: [{\n          pattern: /\\{\\{.+?\\}\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{\\{|\\}\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        }, {\n          pattern: /\\{%.+?%\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{%|%\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        }]\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":54,"files":[{"filePath":"node_modules/reprism/languages/crystal.js","startLine":1,"endLine":54},{"filePath":"node_modules/reprism/lib/languages/crystal.js","startLine":1,"endLine":54}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'cpp',\n  init: function init(Prism) {\n    Prism.languages.cpp = Prism.languages.extend('c', {\n      keyword: /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: /--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n    });\n\n    Prism.languages.insertBefore('cpp', 'keyword', {\n      'class-name': {\n        pattern: /(class\\s+)\\w+/i,\n        lookbehind: true\n      }\n    });\n\n    Prism.languages.insertBefore('cpp', 'string', {\n      'raw-string': {\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n        alias: 'string',\n        greedy: true\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/cpp.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/cpp.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'coffeescript',\n  init: function init(Prism) {\n    (function (Prism) {\n      // Ignore comments starting with { to privilege string interpolation highlighting\n      var comment = /#(?!\\{).+/,\n          interpolation = {\n        pattern: /#\\{[^}]+\\}/,\n        alias: 'variable'\n      };\n\n      Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n        comment: comment,\n        string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        }, {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }],\n        keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n        'class-member': {\n          pattern: /@(?!\\d)\\w+/,\n          alias: 'variable'\n        }\n      });\n\n      Prism.languages.insertBefore('coffeescript', 'comment', {\n        'multiline-comment': {\n          pattern: /###[\\s\\S]+?###/,\n          alias: 'comment'\n        },\n\n        // Block regexp can contain comments and interpolation\n        'block-regex': {\n          pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n          alias: 'regex',\n          inside: {\n            comment: comment,\n            interpolation: interpolation\n          }\n        }\n      });\n\n      Prism.languages.insertBefore('coffeescript', 'string', {\n        'inline-javascript': {\n          pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n          inside: {\n            delimiter: {\n              pattern: /^`|`$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n\n        // Block strings\n        'multiline-string': [{\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        }, {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }]\n      });\n\n      Prism.languages.insertBefore('coffeescript', 'keyword', {\n        // Object property\n        property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n      });\n\n      delete Prism.languages.coffeescript['template-string'];\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":91,"files":[{"filePath":"node_modules/reprism/languages/coffeescript.js","startLine":1,"endLine":91},{"filePath":"node_modules/reprism/lib/languages/coffeescript.js","startLine":1,"endLine":91}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'clojure',\n  init: function init(Prism) {\n    // Copied from https://github.com/jeluard/prism-clojure\n    Prism.languages.clojure = {\n      comment: /;+.*/,\n      string: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      operator: /(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i, // used for symbols and keywords\n      keyword: {\n        pattern: /([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def\\-|defn|defn\\-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|\\-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,\n        lookbehind: true\n      },\n      boolean: /\\b(?:true|false|nil)\\b/,\n      number: /\\b[0-9A-Fa-f]+\\b/,\n      punctuation: /[{}\\[\\](),]/\n    };\n  }\n};","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/reprism/languages/clojure.js","startLine":1,"endLine":23},{"filePath":"node_modules/reprism/lib/languages/clojure.js","startLine":1,"endLine":23}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'clike',\n  init: function init(Prism) {\n    Prism.languages.clike = {\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }],\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      function: /[a-z0-9_]+(?=\\()/i,\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n      operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/languages/clike.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/clike.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'c',\n  init: function init(Prism) {\n    Prism.languages.c = Prism.languages.extend('clike', {\n      keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n      operator: /-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,\n      number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n    });\n\n    Prism.languages.insertBefore('c', 'string', {\n      macro: {\n        // allow for multiline macro definitions\n        // spaces after the # character compile fine with gcc\n        pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight the path of the include statement as a string\n          string: {\n            pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n            lookbehind: true\n          },\n          // highlight macro directives as keywords\n          directive: {\n            pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      },\n      // highlight predefined macros as constants\n      constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n    });\n\n    delete Prism.languages.c['class-name'];\n    delete Prism.languages.c.boolean;\n  }\n};","nrTokens":0,"nrLines":43,"files":[{"filePath":"node_modules/reprism/languages/c.js","startLine":1,"endLine":43},{"filePath":"node_modules/reprism/lib/languages/c.js","startLine":1,"endLine":43}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'bro',\n  init: function init(Prism) {\n    Prism.languages.bro = {\n      comment: {\n        pattern: /(^|[^\\\\$])#.*/,\n        lookbehind: true,\n        inside: {\n          italic: /\\b(?:TODO|FIXME|XXX)\\b/\n        }\n      },\n\n      string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n\n      boolean: /\\b[TF]\\b/,\n\n      function: {\n        pattern: /(?:function|hook|event) \\w+(?:::\\w+)?/,\n        inside: {\n          keyword: /^(?:function|hook|event)/\n        }\n      },\n\n      variable: {\n        pattern: /(?:global|local) \\w+/i,\n        inside: {\n          keyword: /(?:global|local)/\n        }\n      },\n\n      builtin: /(?:@(?:load(?:-(?:sigs|plugin))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column))/,\n\n      constant: {\n        pattern: /const \\w+/i,\n        inside: {\n          keyword: /const/\n        }\n      },\n\n      keyword: /\\b(?:break|next|continue|alarm|using|of|add|delete|export|print|return|schedule|when|timeout|addr|any|bool|count|double|enum|file|int|interval|pattern|opaque|port|record|set|string|subnet|table|time|vector|for|if|else|in|module|function)\\b/,\n\n      operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\n      number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\n      punctuation: /[{}[\\];(),.:]/\n    };\n  }\n};","nrTokens":0,"nrLines":57,"files":[{"filePath":"node_modules/reprism/languages/bro.js","startLine":1,"endLine":57},{"filePath":"node_modules/reprism/lib/languages/bro.js","startLine":1,"endLine":57}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'brainfuck',\n  init: function init(Prism) {\n    Prism.languages.brainfuck = {\n      pointer: {\n        pattern: /<|>/,\n        alias: 'keyword'\n      },\n      increment: {\n        pattern: /\\+/,\n        alias: 'inserted'\n      },\n      decrement: {\n        pattern: /-/,\n        alias: 'deleted'\n      },\n      branching: {\n        pattern: /\\[|\\]/,\n        alias: 'important'\n      },\n      operator: /[.,]/,\n      comment: /\\S+/\n    };\n  }\n};","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/reprism/languages/brainfuck.js","startLine":1,"endLine":30},{"filePath":"node_modules/reprism/lib/languages/brainfuck.js","startLine":1,"endLine":30}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'bison',\n  init: function init(Prism) {\n    Prism.languages.bison = Prism.languages.extend('c', {});\n\n    Prism.languages.insertBefore('bison', 'comment', {\n      bison: {\n        // This should match all the beginning of the file\n        // including the prologue(s), the bison declarations and\n        // the grammar rules.\n        pattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,\n        inside: {\n          c: {\n            // Allow for one level of nested braces\n            pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n            inside: {\n              delimiter: {\n                pattern: /^%?\\{|%?\\}$/,\n                alias: 'punctuation'\n              },\n              'bison-variable': {\n                pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n                alias: 'variable',\n                inside: {\n                  punctuation: /<|>/\n                }\n              },\n              rest: Prism.languages.c\n            }\n          },\n          comment: Prism.languages.c.comment,\n          string: Prism.languages.c.string,\n          property: /\\S+(?=:)/,\n          keyword: /%\\w+/,\n          number: {\n            pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n            lookbehind: true\n          },\n          punctuation: /%[%?]|[|:;\\[\\]<>]/\n        }\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":49,"files":[{"filePath":"node_modules/reprism/languages/bison.js","startLine":1,"endLine":49},{"filePath":"node_modules/reprism/lib/languages/bison.js","startLine":1,"endLine":49}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'batch',\n  init: function init(Prism) {\n    (function (Prism) {\n      var variable = /%%?[~:\\w]+%?|!\\S+!/;\n      var parameter = {\n        pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n        alias: 'attr-name',\n        inside: {\n          punctuation: /:/\n        }\n      };\n      var string = /\"[^\"]*\"/;\n      var number = /(?:\\b|-)\\d+\\b/;\n\n      Prism.languages.batch = {\n        comment: [/^::.*/m, {\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true\n        }],\n        label: {\n          pattern: /^:.*/m,\n          alias: 'property'\n        },\n        command: [{\n          // FOR command\n          pattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^for\\b|\\b(?:in|do)\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            punctuation: /[()',]/\n          }\n        }, {\n          // IF command\n          pattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            operator: /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n          }\n        }, {\n          // ELSE command\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^else\\b/i\n          }\n        }, {\n          // SET command\n          pattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^set\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n            number: number,\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n            punctuation: /[()',]/\n          }\n        }, {\n          // Other commands\n          pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\w+\\b/i,\n            string: string,\n            parameter: parameter,\n            label: {\n              pattern: /(^\\s*):\\S+/m,\n              lookbehind: true,\n              alias: 'property'\n            },\n            variable: variable,\n            number: number,\n            operator: /\\^/\n          }\n        }],\n        operator: /[&@]/,\n        punctuation: /[()']/\n      };\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":97,"files":[{"filePath":"node_modules/reprism/languages/batch.js","startLine":1,"endLine":97},{"filePath":"node_modules/reprism/lib/languages/batch.js","startLine":1,"endLine":97}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'basic',\n  init: function init(Prism) {\n    Prism.languages.basic = {\n      comment: {\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      string: {\n        pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n        greedy: true\n      },\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n      keyword: /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n      function: /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n      operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n      punctuation: /[,;:()]/\n    };\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/languages/basic.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/basic.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'bash',\n  init: function init(Prism) {\n    (function (Prism) {\n      var insideString = {\n        variable: [\n        // Arithmetic Environment\n        {\n          pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n          inside: {\n            // If there is a $ sign at the beginning highlight $(( and )) as variable\n            variable: [{\n              pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n              lookbehind: true\n            }, /^\\$\\(\\(/],\n            number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n            // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n            operator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n            // If there is no $ sign at the beginning highlight (( and )) as punctuation\n            punctuation: /\\(\\(?|\\)\\)?|,|;/\n          }\n        },\n        // Command Substitution\n        {\n          pattern: /\\$\\([^)]+\\)|`[^`]+`/,\n          greedy: true,\n          inside: {\n            variable: /^\\$\\(|^`|\\)$|`$/\n          }\n        }, /\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]\n      };\n\n      Prism.languages.bash = {\n        shebang: {\n          pattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n          alias: 'important'\n        },\n        comment: {\n          pattern: /(^|[^\"{\\\\])#.*/,\n          lookbehind: true\n        },\n        string: [\n        // Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\n        {\n          pattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        }, {\n          pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n          greedy: true,\n          inside: insideString\n        }],\n        variable: insideString.variable,\n        // Originally based on http://ss64.com/bash/\n        function: {\n          pattern: /(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,\n          lookbehind: true\n        },\n        keyword: {\n          pattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\n          lookbehind: true\n        },\n        boolean: {\n          pattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\n          lookbehind: true\n        },\n        operator: /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n        punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n      };\n\n      var inside = insideString.variable[1].inside;\n      inside.string = Prism.languages.bash.string;\n      inside.function = Prism.languages.bash.function;\n      inside.keyword = Prism.languages.bash.keyword;\n      inside.boolean = Prism.languages.bash.boolean;\n      inside.operator = Prism.languages.bash.operator;\n      inside.punctuation = Prism.languages.bash.punctuation;\n\n      Prism.languages.shell = Prism.languages.bash;\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":88,"files":[{"filePath":"node_modules/reprism/languages/bash.js","startLine":1,"endLine":88},{"filePath":"node_modules/reprism/lib/languages/bash.js","startLine":1,"endLine":88}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'autoit',\n  init: function init(Prism) {\n    Prism.languages.autoit = {\n      comment: [/;.*/, {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\n        lookbehind: true\n      }],\n      url: {\n        pattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n        lookbehind: true\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          variable: /([%$@])\\w+\\1/\n        }\n      },\n      directive: {\n        pattern: /(^\\s*)#\\w+/m,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      function: /\\b\\w+(?=\\()/,\n      // Variables and macros\n      variable: /[$@]\\w+/,\n      keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n      number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n      boolean: /\\b(?:True|False)\\b/i,\n      operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n      punctuation: /[\\[\\]().,:]/\n    };\n  }\n};","nrTokens":0,"nrLines":41,"files":[{"filePath":"node_modules/reprism/languages/autoit.js","startLine":1,"endLine":41},{"filePath":"node_modules/reprism/lib/languages/autoit.js","startLine":1,"endLine":41}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'autohotkey',\n  init: function init(Prism) {\n    // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n    Prism.languages.autohotkey = {\n      comment: {\n        pattern: /(^[^\";\\n]*(\"[^\"\\n]*?\"[^\"\\n]*?)*)(?:;.*$|^\\s*\\/\\*[\\s\\S]*\\n\\*\\/)/m,\n        lookbehind: true\n      },\n      string: /\"(?:[^\"\\n\\r]|\"\")*\"/m,\n      function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m, // function - don't use .*\\) in the end bcoz string locks it\n      tag: /^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m, // labels\n      variable: /%\\w+%/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n      operator: /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n      punctuation: /[{}[\\]():,]/,\n      boolean: /\\b(?:true|false)\\b/,\n\n      selector: /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n\n      constant: /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|programfiles|a_programfiles|a_programs|a_programscommon|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,\n\n      builtin: /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|cos|dllcall|exp|fileexist|Fileopen|floor|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,\n\n      symbol: /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n\n      important: /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InstallKeybdHook|InstallMouseHook|KeyHistory|LTrim|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|WinActivateForce)\\b/i,\n\n      keyword: /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Type|UnCheck|underline|Unicode|Unlock|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i\n    };\n  }\n};","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/reprism/languages/autohotkey.js","startLine":1,"endLine":37},{"filePath":"node_modules/reprism/lib/languages/autohotkey.js","startLine":1,"endLine":37}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'aspnet',\n  init: function init(Prism) {\n    Prism.languages.aspnet = Prism.languages.extend('markup', {\n      'page-directive tag': {\n        pattern: /<%\\s*@.*%>/i,\n        inside: {\n          'page-directive tag': /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          rest: Prism.languages.markup.tag.inside\n        }\n      },\n      'directive tag': {\n        pattern: /<%.*%>/i,\n        inside: {\n          'directive tag': /<%\\s*?[$=%#:]{0,2}|%>/i,\n          rest: Prism.languages.csharp\n        }\n      }\n    });\n    // Regexp copied from prism-markup, with a negative look-ahead added\n    Prism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n    // match directives of attribute value foo=\"<% Bar %>\"\n    Prism.languages.insertBefore('inside', 'punctuation', {\n      'directive tag': Prism.languages.aspnet['directive tag']\n    }, Prism.languages.aspnet.tag.inside['attr-value']);\n\n    Prism.languages.insertBefore('aspnet', 'comment', {\n      'asp comment': /<%--[\\s\\S]*?--%>/\n    });\n\n    // script runat=\"server\" contains csharp, not javascript\n    Prism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\n      'asp script': {\n        pattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        inside: Prism.languages.csharp || {}\n      }\n    });\n  }\n};","nrTokens":0,"nrLines":46,"files":[{"filePath":"node_modules/reprism/languages/aspnet.js","startLine":1,"endLine":46},{"filePath":"node_modules/reprism/lib/languages/aspnet.js","startLine":1,"endLine":46}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'asm6502',\n  init: function init(Prism) {\n    Prism.languages.asm6502 = {\n      comment: /;.*/,\n      directive: {\n        pattern: /\\.\\w+(?= )/,\n        alias: 'keyword'\n      },\n      string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      opcode: {\n        pattern: /\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,\n        alias: 'property'\n      },\n      hexnumber: {\n        pattern: /#?\\$[\\da-f]{2,4}/i,\n        alias: 'string'\n      },\n      binarynumber: {\n        pattern: /#?%[01]+/,\n        alias: 'string'\n      },\n      decimalnumber: {\n        pattern: /#?\\d+/,\n        alias: 'string'\n      },\n      register: {\n        pattern: /\\b[xya]\\b/i,\n        alias: 'variable'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/reprism/languages/asm6502.js","startLine":1,"endLine":38},{"filePath":"node_modules/reprism/lib/languages/asm6502.js","startLine":1,"endLine":38}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'asciidoc',\n  init: function init(Prism) {\n    (function (Prism) {\n      var attributes = {\n        pattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\]\\\\]|\\\\.)*\\]|[^\\]\\\\]|\\\\.)*\\]/m,\n        lookbehind: true,\n        inside: {\n          quoted: {\n            pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n            inside: {\n              punctuation: /^[$`]|[$`]$/\n            }\n          },\n          interpreted: {\n            pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n            inside: {\n              punctuation: /^'|'$/\n              // See rest below\n            }\n          },\n          string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n          variable: /\\w+(?==)/,\n          punctuation: /^\\[|\\]$|,/,\n          operator: /=/,\n          // The negative look-ahead prevents blank matches\n          'attr-value': /(?!^\\s+$).+/\n        }\n      };\n      Prism.languages.asciidoc = {\n        'comment-block': {\n          pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n          alias: 'comment'\n        },\n        table: {\n          pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n          inside: {\n            specifiers: {\n              pattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\n              alias: 'attr-value'\n            },\n            punctuation: {\n              pattern: /(^|[^\\\\])[|!]=*/,\n              lookbehind: true\n            }\n            // See rest below\n          }\n        },\n\n        'passthrough-block': {\n          pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n          inside: {\n            punctuation: /^\\++|\\++$/\n            // See rest below\n          }\n        },\n        // Literal blocks and listing blocks\n        'literal-block': {\n          pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n          inside: {\n            punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/\n            // See rest below\n          }\n        },\n        // Sidebar blocks, quote blocks, example blocks and open blocks\n        'other-block': {\n          pattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n          inside: {\n            punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n            // See rest below\n          }\n        },\n\n        // list-punctuation and list-label must appear before indented-block\n        'list-punctuation': {\n          pattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n          lookbehind: true,\n          alias: 'punctuation'\n        },\n        'list-label': {\n          pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        'indented-block': {\n          pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n          lookbehind: true\n        },\n\n        comment: /^\\/\\/.*/m,\n        title: {\n          pattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} +.+|^\\.(?![\\s.]).*/m,\n          alias: 'important',\n          inside: {\n            punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n            // See rest below\n          }\n        },\n        'attribute-entry': {\n          pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n          alias: 'tag'\n        },\n        attributes: attributes,\n        hr: {\n          pattern: /^'{3,}$/m,\n          alias: 'punctuation'\n        },\n        'page-break': {\n          pattern: /^<{3,}$/m,\n          alias: 'punctuation'\n        },\n        admonition: {\n          pattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n          alias: 'keyword'\n        },\n        callout: [{\n          pattern: /(^[ \\t]*)<?\\d*>/m,\n          lookbehind: true,\n          alias: 'symbol'\n        }, {\n          pattern: /<\\d+>/,\n          alias: 'symbol'\n        }],\n        macro: {\n          pattern: /\\b[a-z\\d][a-z\\d-]*::?(?:(?:\\S+)??\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n          inside: {\n            function: /^[a-z\\d-]+(?=:)/,\n            punctuation: /^::?/,\n            attributes: {\n              pattern: /(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n              inside: attributes.inside\n            }\n          }\n        },\n        inline: {\n          /*\n          The initial look-behind prevents the highlighting of escaped quoted text.\n          Quoted text can be multi-line but cannot span an empty line.\n          All quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\n          First, we handle the constrained quotes.\n          Those must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\n          They are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\n          Then we handle the unconstrained quotes.\n          Those do not have the restrictions of the constrained quotes.\n          They are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n          */\n          pattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?: ['`]|.)+?(?:(?:\\r?\\n|\\r)(?: ['`]|.)+?)*['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n          lookbehind: true,\n          inside: {\n            attributes: attributes,\n            url: {\n              pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n              inside: {\n                punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n              }\n            },\n            'attribute-ref': {\n              pattern: /^\\{.+\\}$/,\n              inside: {\n                variable: {\n                  pattern: /(^\\{)[a-z\\d,+_-]+/,\n                  lookbehind: true\n                },\n                operator: /^[=?!#%@$]|!(?=[:}])/,\n                punctuation: /^\\{|\\}$|::?/\n              }\n            },\n            italic: {\n              pattern: /^(['_])[\\s\\S]+\\1$/,\n              inside: {\n                punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n              }\n            },\n            bold: {\n              pattern: /^\\*[\\s\\S]+\\*$/,\n              inside: {\n                punctuation: /^\\*\\*?|\\*\\*?$/\n              }\n            },\n            punctuation: /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n          }\n        },\n        replacement: {\n          pattern: /\\((?:C|TM|R)\\)/,\n          alias: 'builtin'\n        },\n        entity: /&#?[\\da-z]{1,8};/i,\n        'line-continuation': {\n          pattern: /(^| )\\+$/m,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n\n        // Allow some nesting. There is no recursion though, so cloning should not be needed.\n\n      };attributes.inside.interpreted.inside.rest = {\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity\n      };\n\n      Prism.languages.asciidoc['passthrough-block'].inside.rest = {\n        macro: Prism.languages.asciidoc.macro\n      };\n\n      Prism.languages.asciidoc['literal-block'].inside.rest = {\n        callout: Prism.languages.asciidoc.callout\n      };\n\n      Prism.languages.asciidoc.table.inside.rest = {\n        'comment-block': Prism.languages.asciidoc['comment-block'],\n        'passthrough-block': Prism.languages.asciidoc['passthrough-block'],\n        'literal-block': Prism.languages.asciidoc['literal-block'],\n        'other-block': Prism.languages.asciidoc['other-block'],\n        'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\n        'indented-block': Prism.languages.asciidoc['indented-block'],\n        comment: Prism.languages.asciidoc.comment,\n        title: Prism.languages.asciidoc.title,\n        'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\n        attributes: Prism.languages.asciidoc.attributes,\n        hr: Prism.languages.asciidoc.hr,\n        'page-break': Prism.languages.asciidoc['page-break'],\n        admonition: Prism.languages.asciidoc.admonition,\n        'list-label': Prism.languages.asciidoc['list-label'],\n        callout: Prism.languages.asciidoc.callout,\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity,\n        'line-continuation': Prism.languages.asciidoc['line-continuation']\n      };\n\n      Prism.languages.asciidoc['other-block'].inside.rest = {\n        table: Prism.languages.asciidoc.table,\n        'list-punctuation': Prism.languages.asciidoc['list-punctuation'],\n        'indented-block': Prism.languages.asciidoc['indented-block'],\n        comment: Prism.languages.asciidoc.comment,\n        'attribute-entry': Prism.languages.asciidoc['attribute-entry'],\n        attributes: Prism.languages.asciidoc.attributes,\n        hr: Prism.languages.asciidoc.hr,\n        'page-break': Prism.languages.asciidoc['page-break'],\n        admonition: Prism.languages.asciidoc.admonition,\n        'list-label': Prism.languages.asciidoc['list-label'],\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity,\n        'line-continuation': Prism.languages.asciidoc['line-continuation']\n      };\n\n      Prism.languages.asciidoc.title.inside.rest = {\n        macro: Prism.languages.asciidoc.macro,\n        inline: Prism.languages.asciidoc.inline,\n        replacement: Prism.languages.asciidoc.replacement,\n        entity: Prism.languages.asciidoc.entity\n\n        // Plugin to make entity title show the real entity, idea by Roman Komarov\n      };Prism.hooks.add('wrap', function (env) {\n        if (env.type === 'entity') {\n          env.attributes.title = env.content.replace(/&amp;/, '&');\n        }\n      });\n    })(Prism);\n  }\n};","nrTokens":0,"nrLines":271,"files":[{"filePath":"node_modules/reprism/languages/asciidoc.js","startLine":1,"endLine":271},{"filePath":"node_modules/reprism/lib/languages/asciidoc.js","startLine":1,"endLine":271}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'arff',\n  init: function init(Prism) {\n    Prism.languages.arff = {\n      comment: /%.*/,\n      string: {\n        pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      keyword: /@(?:attribute|data|end|relation)\\b/i,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      punctuation: /[{},]/\n    };\n  }\n};","nrTokens":0,"nrLines":20,"files":[{"filePath":"node_modules/reprism/languages/arff.js","startLine":1,"endLine":20},{"filePath":"node_modules/reprism/lib/languages/arff.js","startLine":1,"endLine":20}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'arduino',\n  init: function init(Prism) {\n    Prism.languages.arduino = Prism.languages.extend('cpp', {\n      keyword: /\\b(?:setup|if|else|while|do|for|return|in|instanceof|default|function|loop|goto|switch|case|new|try|throw|catch|finally|null|break|continue|boolean|bool|void|byte|word|string|String|array|int|long|integer|double)\\b/,\n      builtin: /\\b(?:KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|LiquidCrystal_I2C|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD|runShellCommandAsynchronously|analogWriteResolution|retrieveCallingNumber|printFirmwareVersion|analogReadResolution|sendDigitalPortPair|noListenOnLocalhost|readJoystickButton|setFirmwareVersion|readJoystickSwitch|scrollDisplayRight|getVoiceCallStatus|scrollDisplayLeft|writeMicroseconds|delayMicroseconds|beginTransmission|getSignalStrength|runAsynchronously|getAsynchronously|listenOnLocalhost|getCurrentCarrier|readAccelerometer|messageAvailable|sendDigitalPorts|lineFollowConfig|countryNameWrite|runShellCommand|readStringUntil|rewindDirectory|readTemperature|setClockDivider|readLightSensor|endTransmission|analogReference|detachInterrupt|countryNameRead|attachInterrupt|encryptionType|readBytesUntil|robotNameWrite|readMicrophone|robotNameRead|cityNameWrite|userNameWrite|readJoystickY|readJoystickX|mouseReleased|openNextFile|scanNetworks|noInterrupts|digitalWrite|beginSpeaker|mousePressed|isActionDone|mouseDragged|displayLogos|noAutoscroll|addParameter|remoteNumber|getModifiers|keyboardRead|userNameRead|waitContinue|processInput|parseCommand|printVersion|readNetworks|writeMessage|blinkVersion|cityNameRead|readMessage|setDataMode|parsePacket|isListening|setBitOrder|beginPacket|isDirectory|motorsWrite|drawCompass|digitalRead|clearScreen|serialEvent|rightToLeft|setTextSize|leftToRight|requestFrom|keyReleased|compassRead|analogWrite|interrupts|WiFiServer|disconnect|playMelody|parseFloat|autoscroll|getPINUsed|setPINUsed|setTimeout|sendAnalog|readSlider|analogRead|beginWrite|createChar|motorsStop|keyPressed|tempoWrite|readButton|subnetMask|debugPrint|macAddress|writeGreen|randomSeed|attachGPRS|readString|sendString|remotePort|releaseAll|mouseMoved|background|getXChange|getYChange|answerCall|getResult|voiceCall|endPacket|constrain|getSocket|writeJSON|getButton|available|connected|findUntil|readBytes|exitValue|readGreen|writeBlue|startLoop|IPAddress|isPressed|sendSysex|pauseMode|gatewayIP|setCursor|getOemKey|tuneWrite|noDisplay|loadImage|switchPIN|onRequest|onReceive|changePIN|playFile|noBuffer|parseInt|overflow|checkPIN|knobRead|beginTFT|bitClear|updateIR|bitWrite|position|writeRGB|highByte|writeRed|setSpeed|readBlue|noStroke|remoteIP|transfer|shutdown|hangCall|beginSMS|endWrite|attached|maintain|noCursor|checkReg|checkPUK|shiftOut|isValid|shiftIn|pulseIn|connect|println|localIP|pinMode|getIMEI|display|noBlink|process|getBand|running|beginSD|drawBMP|lowByte|setBand|release|bitRead|prepare|pointTo|readRed|setMode|noFill|remove|listen|stroke|detach|attach|noTone|exists|buffer|height|bitSet|circle|config|cursor|random|IRread|setDNS|endSMS|getKey|micros|millis|begin|print|write|ready|flush|width|isPIN|blink|clear|press|mkdir|rmdir|close|point|yield|image|BSSID|click|delay|read|text|move|peek|beep|rect|line|open|seek|fill|size|turn|stop|home|find|step|tone|sqrt|RSSI|SSID|end|bit|tan|cos|sin|pow|map|abs|max|min|get|run|put)\\b/,\n      constant: /\\b(?:DIGITAL_MESSAGE|FIRMATA_STRING|ANALOG_MESSAGE|REPORT_DIGITAL|REPORT_ANALOG|INPUT_PULLUP|SET_PIN_MODE|INTERNAL2V56|SYSTEM_RESET|LED_BUILTIN|INTERNAL1V1|SYSEX_START|INTERNAL|EXTERNAL|DEFAULT|OUTPUT|INPUT|HIGH|LOW)\\b/\n    });\n  }\n};","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/reprism/languages/arduino.js","startLine":1,"endLine":15},{"filePath":"node_modules/reprism/lib/languages/arduino.js","startLine":1,"endLine":15}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'applescript',\n  init: function init(Prism) {\n    Prism.languages.applescript = {\n      comment: [\n      // Allow one level of nesting\n      /\\(\\*(?:\\(\\*[\\s\\S]*?\\*\\)|[\\s\\S])*?\\*\\)/, /--.+/, /#.+/],\n      string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n      operator: [/[&=?????????*+\\-\\/??^]|[<>]=?/, /\\b(?:(?:start|begin|end)s? with|(?:(?:does not|doesn't) contain|contains?)|(?:is|isn't|is not) (?:in|contained by)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:(?:does not|doesn't) come|comes) (?:before|after)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equals|equal to|isn't|is not)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|or|div|mod|as|not))\\b/],\n      keyword: /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n      class: {\n        pattern: /\\b(?:alias|application|boolean|class|constant|date|file|integer|list|number|POSIX file|real|record|reference|RGB color|script|text|centimetres|centimeters|feet|inches|kilometres|kilometers|metres|meters|miles|yards|square feet|square kilometres|square kilometers|square metres|square meters|square miles|square yards|cubic centimetres|cubic centimeters|cubic feet|cubic inches|cubic metres|cubic meters|cubic yards|gallons|litres|liters|quarts|grams|kilograms|ounces|pounds|degrees Celsius|degrees Fahrenheit|degrees Kelvin)\\b/,\n        alias: 'builtin'\n      },\n      punctuation: /[{}():,????????????]/\n    };\n  }\n};","nrTokens":0,"nrLines":24,"files":[{"filePath":"node_modules/reprism/languages/applescript.js","startLine":1,"endLine":24},{"filePath":"node_modules/reprism/lib/languages/applescript.js","startLine":1,"endLine":24}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'apl',\n  init: function init(Prism) {\n    Prism.languages.apl = {\n      comment: /(?:???|#[! ]).*$/m,\n      string: {\n        pattern: /'(?:[^'\\r\\n]|'')*'/,\n        greedy: true\n      },\n      number: /???(?:\\d*\\.?\\d+(?:e[+??]?\\d+)?|??|???)(?:j???(?:\\d*\\.?\\d+(?:e[+??]?\\d+)?|??|???))?/i,\n      statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n      'system-function': {\n        pattern: /???[A-Z]+/i,\n        alias: 'function'\n      },\n      constant: /[??????#??????]/,\n      function: /[-+?????????????|???????*??????!???<???=>????????????????????????~???????????????,?????????????????????????????????????????????????????????????????????????????]/,\n      'monadic-operator': {\n        pattern: /[\\\\\\/??????????????&???]/,\n        alias: 'operator'\n      },\n      'dyadic-operator': {\n        pattern: /[.???????????????@???]/,\n        alias: 'operator'\n      },\n      assignment: {\n        pattern: /???/,\n        alias: 'keyword'\n      },\n      punctuation: /[\\[;\\]()??????]/,\n      dfn: {\n        pattern: /[{}??????????????????:]/,\n        alias: 'builtin'\n      }\n    };\n  }\n};","nrTokens":0,"nrLines":42,"files":[{"filePath":"node_modules/reprism/languages/apl.js","startLine":1,"endLine":42},{"filePath":"node_modules/reprism/lib/languages/apl.js","startLine":1,"endLine":42}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'apacheconf',\n  init: function init(Prism) {\n    Prism.languages.apacheconf = {\n      comment: /#.*/,\n      'directive-inline': {\n        pattern: /^(\\s*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|AddAlt|AddAltByEncoding|AddAltByType|AddCharset|AddDefaultCharset|AddDescription|AddEncoding|AddHandler|AddIcon|AddIconByEncoding|AddIconByType|AddInputFilter|AddLanguage|AddModuleInfo|AddOutputFilter|AddOutputFilterByType|AddType|Alias|AliasMatch|Allow|AllowCONNECT|AllowEncodedSlashes|AllowMethods|AllowOverride|AllowOverrideList|Anonymous|Anonymous_LogEmail|Anonymous_MustGiveEmail|Anonymous_NoUserID|Anonymous_VerifyEmail|AsyncRequestWorkerFactor|AuthBasicAuthoritative|AuthBasicFake|AuthBasicProvider|AuthBasicUseDigestAlgorithm|AuthDBDUserPWQuery|AuthDBDUserRealmQuery|AuthDBMGroupFile|AuthDBMType|AuthDBMUserFile|AuthDigestAlgorithm|AuthDigestDomain|AuthDigestNonceLifetime|AuthDigestProvider|AuthDigestQop|AuthDigestShmemSize|AuthFormAuthoritative|AuthFormBody|AuthFormDisableNoStore|AuthFormFakeBasicAuth|AuthFormLocation|AuthFormLoginRequiredLocation|AuthFormLoginSuccessLocation|AuthFormLogoutLocation|AuthFormMethod|AuthFormMimetype|AuthFormPassword|AuthFormProvider|AuthFormSitePassphrase|AuthFormSize|AuthFormUsername|AuthGroupFile|AuthLDAPAuthorizePrefix|AuthLDAPBindAuthoritative|AuthLDAPBindDN|AuthLDAPBindPassword|AuthLDAPCharsetConfig|AuthLDAPCompareAsUser|AuthLDAPCompareDNOnServer|AuthLDAPDereferenceAliases|AuthLDAPGroupAttribute|AuthLDAPGroupAttributeIsDN|AuthLDAPInitialBindAsUser|AuthLDAPInitialBindPattern|AuthLDAPMaxSubGroupDepth|AuthLDAPRemoteUserAttribute|AuthLDAPRemoteUserIsDN|AuthLDAPSearchAsUser|AuthLDAPSubGroupAttribute|AuthLDAPSubGroupClass|AuthLDAPUrl|AuthMerging|AuthName|AuthnCacheContext|AuthnCacheEnable|AuthnCacheProvideFor|AuthnCacheSOCache|AuthnCacheTimeout|AuthnzFcgiCheckAuthnProvider|AuthnzFcgiDefineProvider|AuthType|AuthUserFile|AuthzDBDLoginToReferer|AuthzDBDQuery|AuthzDBDRedirectQuery|AuthzDBMType|AuthzSendForbiddenOnFailure|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|CacheDefaultExpire|CacheDetailHeader|CacheDirLength|CacheDirLevels|CacheDisable|CacheEnable|CacheFile|CacheHeader|CacheIgnoreCacheControl|CacheIgnoreHeaders|CacheIgnoreNoLastMod|CacheIgnoreQueryString|CacheIgnoreURLSessionIdentifiers|CacheKeyBaseURL|CacheLastModifiedFactor|CacheLock|CacheLockMaxAge|CacheLockPath|CacheMaxExpire|CacheMaxFileSize|CacheMinExpire|CacheMinFileSize|CacheNegotiatedDocs|CacheQuickHandler|CacheReadSize|CacheReadTime|CacheRoot|CacheSocache|CacheSocacheMaxSize|CacheSocacheMaxTime|CacheSocacheMinTime|CacheSocacheReadSize|CacheSocacheReadTime|CacheStaleOnError|CacheStoreExpired|CacheStoreNoStore|CacheStorePrivate|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|DeflateBufferSize|DeflateCompressionLevel|DeflateFilterNote|DeflateInflateLimitRequestBody|DeflateInflateRatioBurst|DeflateInflateRatioLimit|DeflateMemLevel|DeflateWindowSize|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|HeartbeatAddress|HeartbeatListen|HeartbeatMaxServers|HeartbeatStorage|HeartbeatStorage|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|IndexHeadInsert|IndexIgnore|IndexIgnoreReset|IndexOptions|IndexOrderDefault|IndexStyleSheet|InputSed|ISAPIAppendLogToErrors|ISAPIAppendLogToQuery|ISAPICacheFile|ISAPIFakeAsync|ISAPILogNotSupported|ISAPIReadAheadBuffer|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAPCacheEntries|LDAPCacheTTL|LDAPConnectionPoolTTL|LDAPConnectionTimeout|LDAPLibraryDebug|LDAPOpCacheEntries|LDAPOpCacheTTL|LDAPReferralHopLimit|LDAPReferrals|LDAPRetries|LDAPRetryDelay|LDAPSharedCacheFile|LDAPSharedCacheSize|LDAPTimeout|LDAPTrustedClientCert|LDAPTrustedGlobalCert|LDAPTrustedMode|LDAPVerifyServerCert|LimitInternalRecursion|LimitRequestBody|LimitRequestFields|LimitRequestFieldSize|LimitRequestLine|LimitXMLRequestBody|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|LuaHookAccessChecker|LuaHookAuthChecker|LuaHookCheckUserID|LuaHookFixups|LuaHookInsertFilter|LuaHookLog|LuaHookMapToStorage|LuaHookTranslateName|LuaHookTypeChecker|LuaInherit|LuaInputFilter|LuaMapHandler|LuaOutputFilter|LuaPackageCPath|LuaPackagePath|LuaQuickHandler|LuaRoot|LuaScope|MaxConnectionsPerChild|MaxKeepAliveRequests|MaxMemFree|MaxRangeOverlaps|MaxRangeReversals|MaxRanges|MaxRequestWorkers|MaxSpareServers|MaxSpareThreads|MaxThreads|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|ProxyAddHeaders|ProxyBadHeader|ProxyBlock|ProxyDomain|ProxyErrorOverride|ProxyExpressDBMFile|ProxyExpressDBMType|ProxyExpressEnable|ProxyFtpDirCharset|ProxyFtpEscapeWildcards|ProxyFtpListOnWildcard|ProxyHTMLBufSize|ProxyHTMLCharsetOut|ProxyHTMLDocType|ProxyHTMLEnable|ProxyHTMLEvents|ProxyHTMLExtended|ProxyHTMLFixups|ProxyHTMLInterp|ProxyHTMLLinks|ProxyHTMLMeta|ProxyHTMLStripComments|ProxyHTMLURLMap|ProxyIOBufferSize|ProxyMaxForwards|ProxyPass|ProxyPassInherit|ProxyPassInterpolateEnv|ProxyPassMatch|ProxyPassReverse|ProxyPassReverseCookieDomain|ProxyPassReverseCookiePath|ProxyPreserveHost|ProxyReceiveBufferSize|ProxyRemote|ProxyRemoteMatch|ProxyRequests|ProxySCGIInternalRedirect|ProxySCGISendfile|ProxySet|ProxySourceAddress|ProxyStatus|ProxyTimeout|ProxyVia|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIPHeader|RemoteIPInternalProxy|RemoteIPInternalProxyList|RemoteIPProxiesHeader|RemoteIPTrustedProxy|RemoteIPTrustedProxyList|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|RewriteBase|RewriteCond|RewriteEngine|RewriteMap|RewriteOptions|RewriteRule|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script|ScriptAlias|ScriptAliasMatch|ScriptInterpreterSource|ScriptLog|ScriptLogBuffer|ScriptLogLength|ScriptSock|SecureListen|SeeRequestTail|SendBufferSize|ServerAdmin|ServerAlias|ServerLimit|ServerName|ServerPath|ServerRoot|ServerSignature|ServerTokens|Session|SessionCookieName|SessionCookieName2|SessionCookieRemove|SessionCryptoCipher|SessionCryptoDriver|SessionCryptoPassphrase|SessionCryptoPassphraseFile|SessionDBDCookieName|SessionDBDCookieName2|SessionDBDCookieRemove|SessionDBDDeleteLabel|SessionDBDInsertLabel|SessionDBDPerUser|SessionDBDSelectLabel|SessionDBDUpdateLabel|SessionEnv|SessionExclude|SessionHeader|SessionInclude|SessionMaxAge|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSLCACertificateFile|SSLCACertificatePath|SSLCADNRequestFile|SSLCADNRequestPath|SSLCARevocationCheck|SSLCARevocationFile|SSLCARevocationPath|SSLCertificateChainFile|SSLCertificateFile|SSLCertificateKeyFile|SSLCipherSuite|SSLCompression|SSLCryptoDevice|SSLEngine|SSLFIPS|SSLHonorCipherOrder|SSLInsecureRenegotiation|SSLOCSPDefaultResponder|SSLOCSPEnable|SSLOCSPOverrideResponder|SSLOCSPResponderTimeout|SSLOCSPResponseMaxAge|SSLOCSPResponseTimeSkew|SSLOCSPUseRequestNonce|SSLOpenSSLConfCmd|SSLOptions|SSLPassPhraseDialog|SSLProtocol|SSLProxyCACertificateFile|SSLProxyCACertificatePath|SSLProxyCARevocationCheck|SSLProxyCARevocationFile|SSLProxyCARevocationPath|SSLProxyCheckPeerCN|SSLProxyCheckPeerExpire|SSLProxyCheckPeerName|SSLProxyCipherSuite|SSLProxyEngine|SSLProxyMachineCertificateChainFile|SSLProxyMachineCertificateFile|SSLProxyMachineCertificatePath|SSLProxyProtocol|SSLProxyVerify|SSLProxyVerifyDepth|SSLRandomSeed|SSLRenegBufferSize|SSLRequire|SSLRequireSSL|SSLSessionCache|SSLSessionCacheTimeout|SSLSessionTicketKeyFile|SSLSRPUnknownUserSeed|SSLSRPVerifierFile|SSLStaplingCache|SSLStaplingErrorCacheTimeout|SSLStaplingFakeTryLater|SSLStaplingForceURL|SSLStaplingResponderTimeout|SSLStaplingResponseMaxAge|SSLStaplingResponseTimeSkew|SSLStaplingReturnResponderErrors|SSLStaplingStandardCacheTimeout|SSLStrictSNIVHostCheck|SSLUserName|SSLUseStapling|SSLVerifyClient|SSLVerifyDepth|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|VirtualDocumentRoot|VirtualDocumentRootIP|VirtualScriptAlias|VirtualScriptAliasIP|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'directive-block': {\n        pattern: /<\\/?\\b(?:AuthnProviderAlias|AuthzProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|RequireAll|RequireAny|RequireNone|VirtualHost)\\b *.*>/i,\n        inside: {\n          'directive-block': {\n            pattern: /^<\\/?\\w+/,\n            inside: {\n              punctuation: /^<\\/?/\n            },\n            alias: 'tag'\n          },\n          'directive-block-parameter': {\n            pattern: /.*[^>]/,\n            inside: {\n              punctuation: /:/,\n              string: {\n                pattern: /(\"|').*\\1/,\n                inside: {\n                  variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n                }\n              }\n            },\n            alias: 'attr-value'\n          },\n          punctuation: />/\n        },\n        alias: 'tag'\n      },\n      'directive-flags': {\n        pattern: /\\[(?:\\w,?)+\\]/,\n        alias: 'keyword'\n      },\n      string: {\n        pattern: /(\"|').*\\1/,\n        inside: {\n          variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n        }\n      },\n      variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n      regex: /\\^?.*\\$|\\^.*\\$?/\n    };\n  }\n};","nrTokens":0,"nrLines":57,"files":[{"filePath":"node_modules/reprism/languages/apacheconf.js","startLine":1,"endLine":57},{"filePath":"node_modules/reprism/lib/languages/apacheconf.js","startLine":1,"endLine":57}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'ada',\n  init: function init(Prism) {\n    Prism.languages.ada = {\n      comment: /--.*/,\n      string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\n      number: [{\n        pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      }, {\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n      }],\n      'attr-name': /\\b'\\w+/i,\n      keyword: /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n      boolean: /\\b(?:true|false)\\b/i,\n      operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n      punctuation: /\\.\\.?|[,;():]/,\n      char: /'.'/,\n      variable: /\\b[a-z](?:[_a-z\\d])*\\b/i\n    };\n  }\n};","nrTokens":0,"nrLines":26,"files":[{"filePath":"node_modules/reprism/languages/ada.js","startLine":1,"endLine":26},{"filePath":"node_modules/reprism/lib/languages/ada.js","startLine":1,"endLine":26}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'actionscript',\n  init: function init(Prism) {\n    Prism.languages.actionscript = Prism.languages.extend('javascript', {\n      keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n      operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n    });\n    Prism.languages.actionscript['class-name'].alias = 'function';\n\n    if (Prism.languages.markup) {\n      Prism.languages.insertBefore('actionscript', 'string', {\n        xml: {\n          pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.markup\n          }\n        }\n      });\n    }\n  }\n};","nrTokens":0,"nrLines":27,"files":[{"filePath":"node_modules/reprism/languages/actionscript.js","startLine":1,"endLine":27},{"filePath":"node_modules/reprism/lib/languages/actionscript.js","startLine":1,"endLine":27}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  language: 'abap',\n  init: function init(Prism) {\n    Prism.languages.abap = {\n      comment: /^\\*.*/m,\n      string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n      'string-template': {\n        pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n        lookbehind: true,\n        alias: 'string'\n      },\n      /* End Of Line comments should not interfere with strings when the\n      quote character occurs within them. We assume a string being highlighted\n      inside an EOL comment is more acceptable than the opposite.\n      */\n      'eol-comment': {\n        pattern: /(^|\\s)\".*/m,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      keyword: {\n        pattern: /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|SELECTOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n        lookbehind: true\n      },\n      /* Numbers can be only integers. Decimal or Hex appear only as strings */\n      number: /\\b\\d+\\b/,\n      /* Operators must always be surrounded by whitespace, they cannot be put\n      adjacent to operands.\n      */\n      operator: {\n        pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n        lookbehind: true\n      },\n      'string-operator': {\n        pattern: /(\\s)&&?(?=\\s)/,\n        lookbehind: true,\n        /* The official editor highlights */\n        alias: 'keyword'\n      },\n      'token-operator': [{\n        /* Special operators used to access structure components, class methods/attributes, etc. */\n        pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }, {\n        /* Special tokens used do delimit string templates */\n        pattern: /[|{}]/,\n        alias: 'punctuation'\n      }],\n      punctuation: /[,.:()]/\n    };\n  }\n};","nrTokens":0,"nrLines":58,"files":[{"filePath":"node_modules/reprism/languages/abap.js","startLine":1,"endLine":58},{"filePath":"node_modules/reprism/lib/languages/abap.js","startLine":1,"endLine":58}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadLanguages = exports.highlight = undefined;\n\nvar _markup = require('./languages/markup');\n\nvar _markup2 = _interopRequireDefault(_markup);\n\nvar _css = require('./languages/css');\n\nvar _css2 = _interopRequireDefault(_css);\n\nvar _clike = require('./languages/clike');\n\nvar _clike2 = _interopRequireDefault(_clike);\n\nvar _javascript = require('./languages/javascript');\n\nvar _javascript2 = _interopRequireDefault(_javascript);\n\nvar _core = require('./core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _core.loadLanguages)([_markup2.default, _css2.default, _clike2.default, _javascript2.default]);\n\nexports.default = _core2.default;\nexports.highlight = _core.highlight;\nexports.loadLanguages = _core.loadLanguages;","nrTokens":0,"nrLines":34,"files":[{"filePath":"node_modules/reprism/es/index.js","startLine":1,"endLine":34},{"filePath":"node_modules/reprism/lib/index.js","startLine":1,"endLine":34}]}
{"cloneLines":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.highlight = highlight;\nexports.encode = encode;\nexports.getType = getType;\nexports.objId = objId;\nexports.loadLanguages = loadLanguages;\nexports.clone = clone;\nexports.extend = extend;\nexports.insertBefore = insertBefore;\nexports.DFS = DFS;\nexports.matchGrammar = matchGrammar;\nexports.tokenize = tokenize;\nexports.addHook = addHook;\nexports.runHook = runHook;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar uniqueID = 0;\n\nvar languages = exports.languages = {\n  extend: extend,\n  insertBefore: insertBefore,\n  DFS: DFS\n};\nvar plugins = exports.plugins = {};\nvar hooks = exports.hooks = {\n  all: {},\n  add: addHook,\n  run: runHook\n};\n\nvar Token = function Token(type, content, alias, matchedStr, greedy) {\n  _classCallCheck(this, Token);\n\n  this.type = type;\n  this.content = content;\n  this.alias = alias;\n  // Copy of the full string this token was created from\n  this.length = (matchedStr || '').length | 0;\n  this.greedy = !!greedy;\n};\n\nToken.stringify = function (o, language, parent) {\n  if (getType(o) === 'String') {\n    return o;\n  }\n\n  if (getType(o) === 'Array') {\n    return o.map(function (element) {\n      return Token.stringify(element, language, o);\n    }).join('');\n  }\n\n  var env = {\n    type: o.type,\n    content: Token.stringify(o.content, language, parent),\n    tag: 'span',\n    classes: ['token', o.type],\n    attributes: {},\n    language: language,\n    parent: parent\n  };\n\n  if (o.alias) {\n    var aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n    Array.prototype.push.apply(env.classes, aliases);\n  }\n\n  hooks.run('wrap', env);\n\n  var attributes = Object.keys(env.attributes).map(function (name) {\n    return name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n  }).join(' ');\n\n  return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n};\n\nvar Prism = {\n  languages: languages,\n  plugins: plugins,\n  insertBefore: insertBefore,\n  matchGrammar: matchGrammar,\n  tokenize: tokenize,\n  hooks: hooks,\n  util: {\n    encode: encode,\n    type: getType,\n    objId: objId,\n    clone: clone\n  },\n  Token: Token\n};\n\nexports.default = Prism;\nfunction highlight(text, language) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$component = _ref.component,\n      component = _ref$component === undefined ? 'pre' : _ref$component;\n\n  if (!languages[language]) {\n    if (!language) {\n      throw new Error('A language is required!');\n    }\n    throw new Error('The language: ' + language + ' hasn\\'t been loaded yet!');\n  }\n  var env = {\n    code: text,\n    grammar: languages[language],\n    language: language\n  };\n  hooks.run('before-tokenize', env);\n  env.tokens = tokenize(env.code, env.grammar);\n  hooks.run('after-tokenize', env);\n  return '' + (component ? '<' + component + ' class=\\'reprism ' + language + ' language-' + language + '\\'>' : '') + Token.stringify(encode(env.tokens), env.language) + (component ? '</' + component + '>' : '');\n}\n\nfunction encode(tokens) {\n  if (tokens instanceof Token) {\n    return new Token(tokens.type, encode(tokens.content), tokens.alias);\n  } else if (getType(tokens) === 'Array') {\n    return tokens.map(encode);\n  }\n  return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n}\n\nfunction getType(o) {\n  return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n}\n\nfunction objId(obj) {\n  if (!obj.__id) {\n    uniqueID += 1;\n    Object.defineProperty(obj, '__id', { value: uniqueID });\n  }\n  return obj.__id;\n}\n\nfunction loadLanguages() {\n  for (var _len = arguments.length, langs = Array(_len), _key = 0; _key < _len; _key++) {\n    langs[_key] = arguments[_key];\n  }\n\n  langs.forEach(function (lang) {\n    if (getType(lang) === 'Array') {\n      lang.forEach(function (subLang) {\n        subLang.init(Prism);\n      });\n    } else {\n      lang.init(Prism);\n    }\n  });\n}\n\n// Deep clone a language definition (e.g. to extend it)\nfunction clone(o, visited) {\n  visited = visited || {};\n\n  if (getType(o) === 'Array') {\n    if (visited[objId(o)]) {\n      return visited[objId(o)];\n    }\n    var c = [];\n    visited[objId(o)] = c;\n\n    o.forEach(function (v, i) {\n      c[i] = clone(v, visited);\n    });\n\n    return c;\n  }\n\n  if (getType(o) === 'Object') {\n    if (visited[objId(o)]) {\n      return visited[objId(o)];\n    }\n    var _c = {};\n    visited[objId(o)] = _c;\n\n    Object.keys(o).forEach(function (key) {\n      _c[key] = clone(o[key], visited);\n    });\n\n    return _c;\n  }\n\n  return o;\n}\n\nfunction extend(id, redef) {\n  var lang = clone(languages[id]);\n  Object.keys(redef).forEach(function (key) {\n    lang[key] = redef[key];\n  });\n  return lang;\n}\n\nfunction insertBefore() {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  var inside = args[0],\n      before = args[1],\n      insert = args[2],\n      _args$ = args[3],\n      base = _args$ === undefined ? languages : _args$;\n\n\n  var grammar = base[inside];\n  var resolvedInsert = insert;\n\n  if (args.length === 2) {\n    resolvedInsert = args[1];\n\n    Object.keys(resolvedInsert).forEach(function (key) {\n      grammar[key] = resolvedInsert[key];\n    });\n\n    return grammar;\n  }\n\n  var ret = {};\n\n  Object.keys(grammar).forEach(function (key) {\n    if (key === before) {\n      Object.keys(insert).forEach(function (newKey) {\n        ret[newKey] = insert[newKey];\n      });\n    }\n    ret[key] = grammar[key];\n  });\n\n  // Update references in other language definitions\n  DFS(languages, function callback(key, value) {\n    if (value === base[inside] && key !== inside) {\n      this[key] = ret;\n    }\n  });\n\n  base[inside] = ret;\n\n  return base[inside];\n}\n\n// Traverse a language definition with Depth First Search\nfunction DFS() {\n  var o = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callback = arguments[1];\n  var type = arguments[2];\n  var visited = arguments[3];\n\n  visited = visited || {};\n  Object.keys(o).forEach(function (i) {\n    callback.call(o, i, o[i], type || i);\n    if (getType(o[i]) === 'Object' && !visited[objId(o[i])]) {\n      visited[objId(o[i])] = true;\n      DFS(o[i], callback, i, visited);\n    } else if (getType(o[i]) === 'Array' && !visited[objId(o[i])]) {\n      visited[objId(o[i])] = true;\n      DFS(o[i], callback, null, visited);\n    }\n  });\n}\n\nfunction matchGrammar(text, strarr) {\n  var grammar = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var index = arguments[3];\n  var startPos = arguments[4];\n  var oneshot = arguments[5];\n  var target = arguments[6];\n\n  Object.keys(grammar).forEach(function (token) {\n    if (!grammar[token]) {\n      return;\n    }\n\n    if (token === target) {\n      return;\n    }\n\n    var patterns = grammar[token];\n    patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n    patterns.forEach(function (pattern) {\n      var inside = pattern.inside;\n      var lookbehind = !!pattern.lookbehind;\n      var greedy = !!pattern.greedy;\n      var lookbehindLength = 0;\n      var alias = pattern.alias;\n\n      if (greedy && !pattern.pattern.global) {\n        // Without the global flag, lastIndex won't work\n        var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n        pattern.pattern = RegExp(pattern.pattern.source, flags + 'g');\n      }\n\n      pattern = pattern.pattern || pattern;\n\n      // Don???t cache length as it changes during the loop\n      for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, i += 1) {\n        var str = strarr[i];\n\n        if (strarr.length > text.length) {\n          // Something went terribly wrong, ABORT, ABORT!\n          return;\n        }\n\n        if (str instanceof Token) {\n          // eslint-disable-next-line\n          continue;\n        }\n\n        var delNum = 0;\n        var match = void 0;\n\n        if (greedy && i !== strarr.length - 1) {\n          pattern.lastIndex = pos;\n          match = pattern.exec(text);\n          if (!match) {\n            break;\n          }\n\n          var _from = match.index + (lookbehind ? match[1].length : 0);\n          var _to = match.index + match[0].length;\n          var k = i;\n          var p = pos;\n\n          for (var len = strarr.length; k < len && (p < _to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n            p += strarr[k].length;\n            // Move the index i to the element in strarr that is closest to from\n            if (_from >= p) {\n              i += 1;\n              pos = p;\n            }\n          }\n\n          // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n          if (strarr[i] instanceof Token) {\n            // eslint-disable-next-line\n            continue;\n          }\n\n          // Number of tokens to delete and replace with the new match\n          delNum = k - i;\n          str = text.slice(pos, p);\n          match.index -= pos;\n        } else {\n          pattern.lastIndex = 0;\n\n          match = pattern.exec(str);\n          delNum = 1;\n        }\n\n        if (!match) {\n          if (oneshot) {\n            break;\n          }\n\n          // eslint-disable-next-line\n          continue;\n        }\n\n        if (lookbehind) {\n          lookbehindLength = match[1] ? match[1].length : 0;\n        }\n\n        var from = match.index + lookbehindLength;\n        match = match[0].slice(lookbehindLength);\n        var to = from + match.length;\n        var before = str.slice(0, from);\n        var after = str.slice(to);\n\n        var _args = [i, delNum];\n\n        if (before) {\n          i += 1;\n          pos += before.length;\n          _args.push(before);\n        }\n\n        var wrapped = new Token(token, inside ? tokenize(match, inside) : match, alias, match, greedy);\n\n        _args.push(wrapped);\n\n        if (after) {\n          _args.push(after);\n        }\n\n        Array.prototype.splice.apply(strarr, _args);\n\n        if (delNum !== 1) matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n        if (oneshot) break;\n      }\n    });\n  });\n}\n\nfunction tokenize(text, grammar) {\n  var strarr = [text];\n\n  var rest = grammar.rest;\n\n  if (rest) {\n    Object.keys(rest).forEach(function (token) {\n      grammar[token] = rest[token];\n    });\n\n    delete grammar.rest;\n  }\n\n  matchGrammar(text, strarr, grammar, 0, 0, false);\n\n  return strarr;\n}\n\nfunction addHook(name, callback) {\n  var allHooks = hooks.all;\n\n  allHooks[name] = allHooks[name] || [];\n\n  allHooks[name].push(callback);\n}\n\nfunction runHook(name, env) {\n  var callbacks = hooks.all[name];\n\n  if (!callbacks || !callbacks.length) {\n    return;\n  }\n\n  callbacks.forEach(function (callback) {\n    return callback(env);\n  });\n}","nrTokens":0,"nrLines":439,"files":[{"filePath":"node_modules/reprism/es/core.js","startLine":1,"endLine":439},{"filePath":"node_modules/reprism/lib/core.js","startLine":1,"endLine":782}]}
{"cloneLines":", options, fn) {\n  // support callback API\n  if ('function' == typeof options) {\n    (fn = options), (options = undefined);\n  }\n  if (typeof fn === 'function') {\n    var res;\n    try {\n      res = exports.renderFile","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/pug/lib/index.js","startLine":436,"endLine":444},{"filePath":"node_modules/pug/lib/index.js","startLine":401,"endLine":409}]}
{"cloneLines":"'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.enableSynchronous = function () {\n  Promise.prototype.isPending = function() {\n    return this.getState() == 0;\n  };\n\n  Promise.prototype.isFulfilled = function() {\n    return this.getState() == 1;\n  };\n\n  Promise.prototype.isRejected = function() {\n    return this.getState() == 2;\n  };\n\n  Promise.prototype.getValue = function () {\n    if (this._65","nrTokens":0,"nrLines":20,"files":[{"filePath":"node_modules/promise/setimmediate/synchronous.js","startLine":1,"endLine":20},{"filePath":"node_modules/promise/src/synchronous.js","startLine":1,"endLine":20}]}
{"cloneLines":";\n  };\n};\n\nPromise.disableSynchronous = function() {\n  Promise.prototype.isPending = undefined;\n  Promise.prototype.isFulfilled = undefined;\n  Promise.prototype.isRejected = undefined;\n  Promise.prototype.getValue = undefined;\n  Promise.prototype.getReason = undefined;\n  Promise.prototype.getState = undefined;\n};","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/promise/setimmediate/synchronous.js","startLine":51,"endLine":62},{"filePath":"node_modules/promise/src/synchronous.js","startLine":51,"endLine":62}]}
{"cloneLines":"'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._37","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/promise/setimmediate/rejection-tracking.js","startLine":1,"endLine":15},{"filePath":"node_modules/promise/src/rejection-tracking.js","startLine":1,"endLine":15}]}
{"cloneLines":"= null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._37","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/promise/setimmediate/rejection-tracking.js","startLine":16,"endLine":27},{"filePath":"node_modules/promise/src/rejection-tracking.js","startLine":16,"endLine":27}]}
{"cloneLines":"),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}","nrTokens":0,"nrLines":67,"files":[{"filePath":"node_modules/promise/setimmediate/rejection-tracking.js","startLine":47,"endLine":113},{"filePath":"node_modules/promise/src/rejection-tracking.js","startLine":47,"endLine":113}]}
{"cloneLines":");\n\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nPromise.denodeify = function (fn, argumentCount) {\n  if (\n    typeof argumentCount === 'number' && argumentCount !== Infinity\n  ) {\n    return denodeifyWithCount(fn, argumentCount);\n  } else {\n    return denodeifyWithoutCount(fn);\n  }\n};\n\nvar callbackFn = (\n  'function (err, res) {' +\n  'if (err) { rj(err); } else { rs(res); }' +\n  '}'\n);\nfunction denodeifyWithCount(fn, argumentCount) {\n  var args = [];\n  for (var i = 0; i < argumentCount; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'return new Promise(function (rs, rj) {',\n    'var res = fn.call(',\n    ['self'].concat(args).concat([callbackFn]).join(','),\n    ');',\n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n  return Function(['Promise', 'fn'], body)(Promise, fn);\n}\nfunction denodeifyWithoutCount(fn) {\n  var fnLength = Math.max(fn.length - 1, 3);\n  var args = [];\n  for (var i = 0; i < fnLength; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'var args;',\n    'var argLength = arguments.length;',\n    'if (arguments.length > ' + fnLength + ') {',\n    'args = new Array(arguments.length + 1);',\n    'for (var i = 0; i < arguments.length; i++) {',\n    'args[i] = arguments[i];',\n    '}',\n    '}',\n    'return new Promise(function (rs, rj) {',\n    'var cb = ' + callbackFn + ';',\n    'var res;',\n    'switch (argLength) {',\n    args.concat(['extra']).map(function (_, index) {\n      return (\n        'case ' + (index) + ':' +\n        'res = fn.call(' + ['self'].concat(args.slice(0, index)).concat('cb').join(',') + ');' +\n        'break;'\n      );\n    }).join(''),\n    'default:',\n    'args[argLength] = cb;',\n    'res = fn.apply(self, args);',\n    '}',\n    \n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n\n  return Function(\n    ['Promise', 'fn'],\n    body\n  )(Promise, fn);\n}\n\nPromise.nodeify = function (fn) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback =\n      typeof args[args.length - 1] === 'function' ? args.pop() : null;\n    var ctx = this;\n    try {\n      return fn.apply(this, arguments).nodeify(callback, ctx);\n    } catch (ex) {\n      if (callback === null || typeof callback == 'undefined') {\n        return new Promise(function (resolve, reject) {\n          reject(ex);\n        });\n      } else {\n        setImmediate","nrTokens":0,"nrLines":105,"files":[{"filePath":"node_modules/promise/setimmediate/node-extensions.js","startLine":6,"endLine":110},{"filePath":"node_modules/promise/src/node-extensions.js","startLine":7,"endLine":110}]}
{"cloneLines":"(function () {\n          callback.call(ctx, ex);\n        })\n      }\n    }\n  }\n};\n\nPromise.prototype.nodeify = function (callback, ctx) {\n  if (typeof callback != 'function') return this;\n\n  this.then(function (value) {\n    setImmediate","nrTokens":0,"nrLines":13,"files":[{"filePath":"node_modules/promise/setimmediate/node-extensions.js","startLine":110,"endLine":122},{"filePath":"node_modules/promise/src/node-extensions.js","startLine":110,"endLine":122}]}
{"cloneLines":"'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype['finally'] = function (f) {\n  return this.then(function (value) {\n    return Promise.resolve(f()).then(function () {\n      return value;\n    });\n  }, function (err) {\n    return Promise.resolve(f()).then(function () {\n      throw err;\n    });\n  });\n};","nrTokens":0,"nrLines":16,"files":[{"filePath":"node_modules/promise/setimmediate/finally.js","startLine":1,"endLine":16},{"filePath":"node_modules/promise/src/finally.js","startLine":1,"endLine":16}]}
{"cloneLines":"'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61","nrTokens":0,"nrLines":19,"files":[{"filePath":"node_modules/promise/setimmediate/es6-extensions.js","startLine":1,"endLine":19},{"filePath":"node_modules/promise/src/es6-extensions.js","startLine":1,"endLine":19}]}
{"cloneLines":"= value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._65","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/promise/setimmediate/es6-extensions.js","startLine":21,"endLine":58},{"filePath":"node_modules/promise/src/es6-extensions.js","startLine":21,"endLine":58}]}
{"cloneLines":");\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};","nrTokens":0,"nrLines":46,"files":[{"filePath":"node_modules/promise/setimmediate/es6-extensions.js","startLine":62,"endLine":107},{"filePath":"node_modules/promise/src/es6-extensions.js","startLine":62,"endLine":107}]}
{"cloneLines":"'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype.done = function (onFulfilled, onRejected) {\n  var self = arguments.length ? this.then.apply(this, arguments) : this;\n  self.then(null, function (err) {\n    setTimeout(function () {\n      throw err;\n    }, 0);\n  });\n};","nrTokens":0,"nrLines":13,"files":[{"filePath":"node_modules/promise/setimmediate/done.js","startLine":1,"endLine":13},{"filePath":"node_modules/promise/src/done.js","startLine":1,"endLine":13}]}
{"cloneLines":";\n\n\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._40","nrTokens":0,"nrLines":61,"files":[{"filePath":"node_modules/promise/setimmediate/core.js","startLine":1,"endLine":61},{"filePath":"node_modules/promise/src/core.js","startLine":3,"endLine":61}]}
{"cloneLines":"= noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._65","nrTokens":0,"nrLines":20,"files":[{"filePath":"node_modules/promise/setimmediate/core.js","startLine":70,"endLine":89},{"filePath":"node_modules/promise/src/core.js","startLine":70,"endLine":89}]}
{"cloneLines":");\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._65","nrTokens":0,"nrLines":29,"files":[{"filePath":"node_modules/promise/setimmediate/core.js","startLine":123,"endLine":151},{"filePath":"node_modules/promise/src/core.js","startLine":123,"endLine":151}]}
{"cloneLines":"= null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}","nrTokens":0,"nrLines":32,"files":[{"filePath":"node_modules/promise/setimmediate/core.js","startLine":182,"endLine":213},{"filePath":"node_modules/promise/src/core.js","startLine":182,"endLine":213}]}
{"cloneLines":"'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.enableSynchronous = function () {\n  Promise.prototype.isPending = function() {\n    return this.getState() == 0;\n  };\n\n  Promise.prototype.isFulfilled = function() {\n    return this.getState() == 1;\n  };\n\n  Promise.prototype.isRejected = function() {\n    return this.getState() == 2;\n  };\n\n  Promise.prototype.getValue = function () {\n    if (this._65 === 3) {\n      return this._55.getValue();\n    }\n\n    if (!this.isFulfilled()) {\n      throw new Error('Cannot get a value of an unfulfilled promise.');\n    }\n\n    return this._55;\n  };\n\n  Promise.prototype.getReason = function () {\n    if (this._65 === 3) {\n      return this._55.getReason();\n    }\n\n    if (!this.isRejected()) {\n      throw new Error('Cannot get a rejection reason of a non-rejected promise.');\n    }\n\n    return this._55;\n  };\n\n  Promise.prototype.getState = function () {\n    if (this._65 === 3) {\n      return this._55.getState();\n    }\n    if (this._65 === -1 || this._65 === -2) {\n      return 0;\n    }\n\n    return this._65;\n  };\n};\n\nPromise.disableSynchronous = function() {\n  Promise.prototype.isPending = undefined;\n  Promise.prototype.isFulfilled = undefined;\n  Promise.prototype.isRejected = undefined;\n  Promise.prototype.getValue = undefined;\n  Promise.prototype.getReason = undefined;\n  Promise.prototype.getState = undefined;\n};","nrTokens":0,"nrLines":62,"files":[{"filePath":"node_modules/promise/lib/synchronous.js","startLine":1,"endLine":62},{"filePath":"node_modules/promise/src/synchronous.js","startLine":1,"endLine":62}]}
{"cloneLines":"'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._37 = null;\n  Promise._87 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._37 = function (promise) {\n    if (\n      promise._65 === 2 && // IS REJECTED\n      rejections[promise._51]\n    ) {\n      if (rejections[promise._51].logged) {\n        onHandled(promise._51);\n      } else {\n        clearTimeout(rejections[promise._51].timeout);\n      }\n      delete rejections[promise._51];\n    }\n  };\n  Promise._87 = function (promise, err) {\n    if (promise._40 === 0) { // not yet handled\n      promise._51 = id++;\n      rejections[promise._51] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._51),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}","nrTokens":0,"nrLines":113,"files":[{"filePath":"node_modules/promise/lib/rejection-tracking.js","startLine":1,"endLine":113},{"filePath":"node_modules/promise/src/rejection-tracking.js","startLine":1,"endLine":113}]}
{"cloneLines":"'use strict';\n\n// This file contains then/promise specific extensions that are only useful\n// for node.js interop\n\nvar Promise = require('./core.js');\nvar asap = require('asap');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nPromise.denodeify = function (fn, argumentCount) {\n  if (\n    typeof argumentCount === 'number' && argumentCount !== Infinity\n  ) {\n    return denodeifyWithCount(fn, argumentCount);\n  } else {\n    return denodeifyWithoutCount(fn);\n  }\n};\n\nvar callbackFn = (\n  'function (err, res) {' +\n  'if (err) { rj(err); } else { rs(res); }' +\n  '}'\n);\nfunction denodeifyWithCount(fn, argumentCount) {\n  var args = [];\n  for (var i = 0; i < argumentCount; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'return new Promise(function (rs, rj) {',\n    'var res = fn.call(',\n    ['self'].concat(args).concat([callbackFn]).join(','),\n    ');',\n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n  return Function(['Promise', 'fn'], body)(Promise, fn);\n}\nfunction denodeifyWithoutCount(fn) {\n  var fnLength = Math.max(fn.length - 1, 3);\n  var args = [];\n  for (var i = 0; i < fnLength; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'var args;',\n    'var argLength = arguments.length;',\n    'if (arguments.length > ' + fnLength + ') {',\n    'args = new Array(arguments.length + 1);',\n    'for (var i = 0; i < arguments.length; i++) {',\n    'args[i] = arguments[i];',\n    '}',\n    '}',\n    'return new Promise(function (rs, rj) {',\n    'var cb = ' + callbackFn + ';',\n    'var res;',\n    'switch (argLength) {',\n    args.concat(['extra']).map(function (_, index) {\n      return (\n        'case ' + (index) + ':' +\n        'res = fn.call(' + ['self'].concat(args.slice(0, index)).concat('cb').join(',') + ');' +\n        'break;'\n      );\n    }).join(''),\n    'default:',\n    'args[argLength] = cb;',\n    'res = fn.apply(self, args);',\n    '}',\n    \n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n\n  return Function(\n    ['Promise', 'fn'],\n    body\n  )(Promise, fn);\n}\n\nPromise.nodeify = function (fn) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback =\n      typeof args[args.length - 1] === 'function' ? args.pop() : null;\n    var ctx = this;\n    try {\n      return fn.apply(this, arguments).nodeify(callback, ctx);\n    } catch (ex) {\n      if (callback === null || typeof callback == 'undefined') {\n        return new Promise(function (resolve, reject) {\n          reject(ex);\n        });\n      } else {\n        asap(function () {\n          callback.call(ctx, ex);\n        })\n      }\n    }\n  }\n};\n\nPromise.prototype.nodeify = function (callback, ctx) {\n  if (typeof callback != 'function') return this;\n\n  this.then(function (value) {\n    asap(function () {\n      callback.call(ctx, null, value);\n    });\n  }, function (err) {\n    asap(function () {\n      callback.call(ctx, err);\n    });\n  });\n};","nrTokens":0,"nrLines":130,"files":[{"filePath":"node_modules/promise/lib/node-extensions.js","startLine":1,"endLine":130},{"filePath":"node_modules/promise/src/node-extensions.js","startLine":1,"endLine":130}]}
{"cloneLines":"'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype['finally'] = function (f) {\n  return this.then(function (value) {\n    return Promise.resolve(f()).then(function () {\n      return value;\n    });\n  }, function (err) {\n    return Promise.resolve(f()).then(function () {\n      throw err;\n    });\n  });\n};","nrTokens":0,"nrLines":16,"files":[{"filePath":"node_modules/promise/lib/finally.js","startLine":1,"endLine":16},{"filePath":"node_modules/promise/src/finally.js","startLine":1,"endLine":16}]}
{"cloneLines":"'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._65 = 1;\n  p._55 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._65 === 3) {\n            val = val._55;\n          }\n          if (val._65 === 1) return res(i, val._55);\n          if (val._65 === 2) reject(val._55);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};","nrTokens":0,"nrLines":107,"files":[{"filePath":"node_modules/promise/lib/es6-extensions.js","startLine":1,"endLine":107},{"filePath":"node_modules/promise/src/es6-extensions.js","startLine":1,"endLine":107}]}
{"cloneLines":"'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype.done = function (onFulfilled, onRejected) {\n  var self = arguments.length ? this.then.apply(this, arguments) : this;\n  self.then(null, function (err) {\n    setTimeout(function () {\n      throw err;\n    }, 0);\n  });\n};","nrTokens":0,"nrLines":13,"files":[{"filePath":"node_modules/promise/lib/done.js","startLine":1,"endLine":13},{"filePath":"node_modules/promise/src/done.js","startLine":1,"endLine":13}]}
{"cloneLines":"'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._40 = 0;\n  this._65 = 0;\n  this._55 = null;\n  this._72 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._37 = null;\nPromise._87 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._65 === 3) {\n    self = self._55;\n  }\n  if (Promise._37) {\n    Promise._37(self);\n  }\n  if (self._65 === 0) {\n    if (self._40 === 0) {\n      self._40 = 1;\n      self._72 = deferred;\n      return;\n    }\n    if (self._40 === 1) {\n      self._40 = 2;\n      self._72 = [self._72, deferred];\n      return;\n    }\n    self._72.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap","nrTokens":0,"nrLines":113,"files":[{"filePath":"node_modules/promise/lib/core.js","startLine":1,"endLine":113},{"filePath":"node_modules/promise/src/core.js","startLine":1,"endLine":113}]}
{"cloneLines":"(function() {\n    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._65 === 1) {\n        resolve(deferred.promise, self._55);\n      } else {\n        reject(deferred.promise, self._55);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._55);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._65 = 3;\n      self._55 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._65 = 1;\n  self._55 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._65 = 2;\n  self._55 = newValue;\n  if (Promise._87) {\n    Promise._87(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._40 === 1) {\n    handle(self, self._72);\n    self._72 = null;\n  }\n  if (self._40 === 2) {\n    for (var i = 0; i < self._72.length; i++) {\n      handle(self, self._72[i]);\n    }\n    self._72 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}","nrTokens":0,"nrLines":101,"files":[{"filePath":"node_modules/promise/lib/core.js","startLine":113,"endLine":213},{"filePath":"node_modules/promise/setimmediate/core.js","startLine":113,"endLine":213}]}
{"cloneLines":"'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.enableSynchronous = function () {\n  Promise.prototype.isPending = function() {\n    return this.getState() == 0;\n  };\n\n  Promise.prototype.isFulfilled = function() {\n    return this.getState() == 1;\n  };\n\n  Promise.prototype.isRejected = function() {\n    return this.getState() == 2;\n  };\n\n  Promise.prototype.getValue = function () {\n    if (this._65 === 3) {\n      return this._55.getValue();\n    }\n\n    if (!this.isFulfilled()) {\n      throw new Error('Cannot get a value of an unfulfilled promise.');\n    }\n\n    return this._55;\n  };\n\n  Promise.prototype.getReason = function () {\n    if (this._65 === 3) {\n      return this._55.getReason();\n    }\n\n    if (!this.isRejected()) {\n      throw new Error('Cannot get a rejection reason of a non-rejected promise.');\n    }\n\n    return this._55;\n  };\n\n  Promise.prototype.getState = function () {\n    if (this._65 === 3) {\n      return this._55.getState();\n    }\n    if (this._65 === -1 || this._65 === -2) {\n      return 0;\n    }\n\n    return this._65;\n  };\n};\n\nPromise.disableSynchronous = function() {\n  Promise.prototype.isPending = undefined;\n  Promise.prototype.isFulfilled = undefined;\n  Promise.prototype.isRejected = undefined;\n  Promise.prototype.getValue = undefined;\n  Promise.prototype.getReason = undefined;\n  Promise.prototype.getState = undefined;\n};","nrTokens":0,"nrLines":62,"files":[{"filePath":"node_modules/promise/domains/synchronous.js","startLine":1,"endLine":62},{"filePath":"node_modules/promise/src/synchronous.js","startLine":1,"endLine":62}]}
{"cloneLines":"'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._37 = null;\n  Promise._87 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._37 = function (promise) {\n    if (\n      promise._65 === 2 && // IS REJECTED\n      rejections[promise._51]\n    ) {\n      if (rejections[promise._51].logged) {\n        onHandled(promise._51);\n      } else {\n        clearTimeout(rejections[promise._51].timeout);\n      }\n      delete rejections[promise._51];\n    }\n  };\n  Promise._87 = function (promise, err) {\n    if (promise._40 === 0) { // not yet handled\n      promise._51 = id++;\n      rejections[promise._51] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._51),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}","nrTokens":0,"nrLines":113,"files":[{"filePath":"node_modules/promise/domains/rejection-tracking.js","startLine":1,"endLine":113},{"filePath":"node_modules/promise/src/rejection-tracking.js","startLine":1,"endLine":113}]}
{"cloneLines":"'use strict';\n\n// This file contains then/promise specific extensions that are only useful\n// for node.js interop\n\nvar Promise = require('./core.js');\nvar asap = require('asap');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nPromise.denodeify = function (fn, argumentCount) {\n  if (\n    typeof argumentCount === 'number' && argumentCount !== Infinity\n  ) {\n    return denodeifyWithCount(fn, argumentCount);\n  } else {\n    return denodeifyWithoutCount(fn);\n  }\n};\n\nvar callbackFn = (\n  'function (err, res) {' +\n  'if (err) { rj(err); } else { rs(res); }' +\n  '}'\n);\nfunction denodeifyWithCount(fn, argumentCount) {\n  var args = [];\n  for (var i = 0; i < argumentCount; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'return new Promise(function (rs, rj) {',\n    'var res = fn.call(',\n    ['self'].concat(args).concat([callbackFn]).join(','),\n    ');',\n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n  return Function(['Promise', 'fn'], body)(Promise, fn);\n}\nfunction denodeifyWithoutCount(fn) {\n  var fnLength = Math.max(fn.length - 1, 3);\n  var args = [];\n  for (var i = 0; i < fnLength; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'var args;',\n    'var argLength = arguments.length;',\n    'if (arguments.length > ' + fnLength + ') {',\n    'args = new Array(arguments.length + 1);',\n    'for (var i = 0; i < arguments.length; i++) {',\n    'args[i] = arguments[i];',\n    '}',\n    '}',\n    'return new Promise(function (rs, rj) {',\n    'var cb = ' + callbackFn + ';',\n    'var res;',\n    'switch (argLength) {',\n    args.concat(['extra']).map(function (_, index) {\n      return (\n        'case ' + (index) + ':' +\n        'res = fn.call(' + ['self'].concat(args.slice(0, index)).concat('cb').join(',') + ');' +\n        'break;'\n      );\n    }).join(''),\n    'default:',\n    'args[argLength] = cb;',\n    'res = fn.apply(self, args);',\n    '}',\n    \n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n\n  return Function(\n    ['Promise', 'fn'],\n    body\n  )(Promise, fn);\n}\n\nPromise.nodeify = function (fn) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback =\n      typeof args[args.length - 1] === 'function' ? args.pop() : null;\n    var ctx = this;\n    try {\n      return fn.apply(this, arguments).nodeify(callback, ctx);\n    } catch (ex) {\n      if (callback === null || typeof callback == 'undefined') {\n        return new Promise(function (resolve, reject) {\n          reject(ex);\n        });\n      } else {\n        asap(function () {\n          callback.call(ctx, ex);\n        })\n      }\n    }\n  }\n};\n\nPromise.prototype.nodeify = function (callback, ctx) {\n  if (typeof callback != 'function') return this;\n\n  this.then(function (value) {\n    asap(function () {\n      callback.call(ctx, null, value);\n    });\n  }, function (err) {\n    asap(function () {\n      callback.call(ctx, err);\n    });\n  });\n};","nrTokens":0,"nrLines":130,"files":[{"filePath":"node_modules/promise/domains/node-extensions.js","startLine":1,"endLine":130},{"filePath":"node_modules/promise/src/node-extensions.js","startLine":1,"endLine":130}]}
{"cloneLines":"'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype['finally'] = function (f) {\n  return this.then(function (value) {\n    return Promise.resolve(f()).then(function () {\n      return value;\n    });\n  }, function (err) {\n    return Promise.resolve(f()).then(function () {\n      throw err;\n    });\n  });\n};","nrTokens":0,"nrLines":16,"files":[{"filePath":"node_modules/promise/domains/finally.js","startLine":1,"endLine":16},{"filePath":"node_modules/promise/src/finally.js","startLine":1,"endLine":16}]}
{"cloneLines":"'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._65 = 1;\n  p._55 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._65 === 3) {\n            val = val._55;\n          }\n          if (val._65 === 1) return res(i, val._55);\n          if (val._65 === 2) reject(val._55);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};","nrTokens":0,"nrLines":107,"files":[{"filePath":"node_modules/promise/domains/es6-extensions.js","startLine":1,"endLine":107},{"filePath":"node_modules/promise/src/es6-extensions.js","startLine":1,"endLine":107}]}
{"cloneLines":"'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype.done = function (onFulfilled, onRejected) {\n  var self = arguments.length ? this.then.apply(this, arguments) : this;\n  self.then(null, function (err) {\n    setTimeout(function () {\n      throw err;\n    }, 0);\n  });\n};","nrTokens":0,"nrLines":13,"files":[{"filePath":"node_modules/promise/domains/done.js","startLine":1,"endLine":13},{"filePath":"node_modules/promise/src/done.js","startLine":1,"endLine":13}]}
{"cloneLines":");\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._40 = 0;\n  this._65 = 0;\n  this._55 = null;\n  this._72 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._37 = null;\nPromise._87 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._65 === 3) {\n    self = self._55;\n  }\n  if (Promise._37) {\n    Promise._37(self);\n  }\n  if (self._65 === 0) {\n    if (self._40 === 0) {\n      self._40 = 1;\n      self._72 = deferred;\n      return;\n    }\n    if (self._40 === 1) {\n      self._40 = 2;\n      self._72 = [self._72, deferred];\n      return;\n    }\n    self._72.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._65 === 1) {\n        resolve(deferred.promise, self._55);\n      } else {\n        reject(deferred.promise, self._55);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._55);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._65 = 3;\n      self._55 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._65 = 1;\n  self._55 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._65 = 2;\n  self._55 = newValue;\n  if (Promise._87) {\n    Promise._87(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._40 === 1) {\n    handle(self, self._72);\n    self._72 = null;\n  }\n  if (self._40 === 2) {\n    for (var i = 0; i < self._72.length; i++) {\n      handle(self, self._72[i]);\n    }\n    self._72 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}","nrTokens":0,"nrLines":211,"files":[{"filePath":"node_modules/promise/domains/core.js","startLine":3,"endLine":213},{"filePath":"node_modules/promise/src/core.js","startLine":3,"endLine":213}]}
{"cloneLines":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/jscpd/dist/index.js","startLine":1,"endLine":12},{"filePath":"node_modules/@jscpd/finder/dist/hooks/blamer.js","startLine":1,"endLine":12}]}
{"cloneLines":"st.ok(data[mod], mod + ' is a core module');\n\t\t\t\t\tst.doesNotThrow(\n\t\t\t\t\t\tfunction () { require(mod); }, // eslint-disable-line no-loop-func\n\t\t\t\t\t\t'requiring ' + mod + ' does not throw'\n\t\t\t\t\t);\n\t\t\t\t\tif (mod.slice(0, 5) !== 'node:') {\n\t\t\t\t\t\tif (supportsNodePrefix) {\n\t\t\t\t\t\t\tst.doesNotThrow(\n\t\t\t\t\t\t\t\tfunction () { require('node:' + mod); }, // eslint-disable-line no-loop-func\n\t\t\t\t\t\t\t\t'requiring node:' + mod + ' does not throw'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tst['throws'](\n\t\t\t\t\t\t\t\tfunction () { require('node:' + mod); }, // eslint-disable-line no-loop-func\n\t\t\t\t\t\t\t\t'requiring node:' + mod + ' throws'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}","nrTokens":0,"nrLines":21,"files":[{"filePath":"node_modules/is-core-module/test/index.js","startLine":93,"endLine":113},{"filePath":"node_modules/is-core-module/test/index.js","startLine":51,"endLine":71}]}
{"cloneLines":", function (st) {\n        var args, context;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                context = this;\n            },","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/function-bind/test/index.js","startLine":39,"endLine":45},{"filePath":"node_modules/function-bind/test/index.js","startLine":25,"endLine":31}]}
{"cloneLines":", function (st) {\n        var args;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                return this;\n            }, null,","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/function-bind/test/index.js","startLine":67,"endLine":73},{"filePath":"node_modules/function-bind/test/index.js","startLine":53,"endLine":59}]}
{"cloneLines":", function (st) {\n        var args, context;\n        var boundContext = {};\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                context = this;\n            }, boundContext,","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/function-bind/test/index.js","startLine":134,"endLine":141},{"filePath":"node_modules/function-bind/test/index.js","startLine":119,"endLine":126}]}
{"cloneLines":");\n        st.deepEqual(args, [1, 2, 3], 'passed arguments are correct');\n        st.end();\n    });\n\n    t.test('returns properly with bound arguments', function (st) {\n        var boundContext","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/function-bind/test/index.js","startLine":160,"endLine":166},{"filePath":"node_modules/function-bind/test/index.js","startLine":62,"endLine":68}]}
{"cloneLines":", function (st) {\n        var boundContext = {};\n        var args;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                return this;\n            }, boundContext,","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/function-bind/test/index.js","startLine":165,"endLine":172},{"filePath":"node_modules/function-bind/test/index.js","startLine":149,"endLine":156}]}
{"cloneLines":"});\n        st.equal(subject.length, 3);\n        st.equal(subject(1, 2, 3), 6);\n        st.end();\n    });\n\n    t.test('sets a correct length without thisArg and first argument'","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/function-bind/test/index.js","startLine":219,"endLine":225},{"filePath":"node_modules/function-bind/test/index.js","startLine":212,"endLine":218}]}
{"cloneLines":", 1);\n        st.equal(subject.length, 2);\n        st.equal(subject(2, 3), 6);\n        st.end();\n    });\n\n    t.test('sets a correct length without thisArg and too many arguments'","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/function-bind/test/index.js","startLine":233,"endLine":239},{"filePath":"node_modules/function-bind/test/index.js","startLine":226,"endLine":232}]}
{"cloneLines":", 1, 2, 3, 4);\n        st.equal(subject.length, 0);\n        st.equal(subject(), 6);\n        st.end();\n    });\n}","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/function-bind/test/index.js","startLine":247,"endLine":252},{"filePath":"node_modules/function-bind/test/index.js","startLine":240,"endLine":246}]}
{"cloneLines":")\n\n  function done (err, result) {\n    t.error(err, 'no error')\n  }\n\n  function worker (arg, cb) {\n    setImmediate(function () {\n      cb(null, true)\n    })\n  }\n})\n\ntest('unshift'","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/fastq/test/test.js","startLine":329,"endLine":342},{"filePath":"node_modules/fastq/test/test.js","startLine":302,"endLine":315}]}
{"cloneLines":", function (t) {\n  t.plan(2)\n\n  var queue = buildQueue(worker, 1)\n  var completed = false\n\n  queue.pause()\n\n  queue.empty = function () {\n    t.notOk(completed, 'the task has not completed yet')\n  }\n\n  queue.push","nrTokens":0,"nrLines":13,"files":[{"filePath":"node_modules/fastq/test/test.js","startLine":393,"endLine":405},{"filePath":"node_modules/fastq/test/test.js","startLine":365,"endLine":377}]}
{"cloneLines":"(1, done)\n\n  queue.resume()\n\n  function done (err, result) {\n    completed = true\n    t.error(err, 'no error')\n  }\n\n  function worker (arg, cb) {\n    setImmediate(function () {\n      cb(null, true)\n    })\n  }\n})\n\ntest('kill'","nrTokens":0,"nrLines":17,"files":[{"filePath":"node_modules/fastq/test/test.js","startLine":405,"endLine":421},{"filePath":"node_modules/fastq/test/test.js","startLine":377,"endLine":393}]}
{"cloneLines":")\n  }\n\n  function worker (arg, cb) {\n    t.equal(expected.shift(), arg, 'tasks come in order')\n    setImmediate(function () {\n      cb(null, true)\n    })\n  }\n})\n\ntest('killAndDrain'","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/fastq/test/test.js","startLine":445,"endLine":456},{"filePath":"node_modules/fastq/test/test.js","startLine":354,"endLine":365}]}
{"cloneLines":"()\n\n  function done (err, result) {\n    t.error(err, 'no error')\n    setImmediate(function () {\n      t.equal(queue.length(), 0, 'no queued tasks')\n      t.equal(queue.running(), 0, 'no running tasks')\n      t.equal(queue.drain, predrain, 'drain is back to default')\n    })\n  }\n\n  function worker (arg, cb) {\n    t.equal(expected.shift(), arg, 'tasks come in order')\n    setImmediate(function () {\n      cb(null, true)\n    })\n  }\n})\n\ntest('pause && idle'","nrTokens":0,"nrLines":20,"files":[{"filePath":"node_modules/fastq/test/test.js","startLine":472,"endLine":491},{"filePath":"node_modules/fastq/test/test.js","startLine":437,"endLine":365}]}
{"cloneLines":")\n\n  queue.pause()\n\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error')\n    t.equal(result, true, 'result matches')\n  })\n\n  t.notOk(worked, 'it should be paused')\n  t.ok(queue.paused, 'it should be paused')\n  t","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/fastq/test/test.js","startLine":498,"endLine":509},{"filePath":"node_modules/fastq/test/test.js","startLine":145,"endLine":157}]}
{"cloneLines":")\n\ntest('concurrency', function (t) {\n  t.plan(2)\n  t.throws(buildQueue.bind(null, worker, 0))\n  t.doesNotThrow(buildQueue.bind(null, worker, 1))\n\n  async","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/fastq/test/promise.js","startLine":7,"endLine":14},{"filePath":"node_modules/fastq/test/test.js","startLine":6,"endLine":13}]}
{"cloneLines":")\n  }, 1)\n  q.error(function (err, task) {\n    t.ok(err instanceof Error, 'global error handler should catch the error')\n    t.match(err.message, /test error/, 'error message should be \"test error\"')\n    t.equal(task, 42, 'The task executed should be passed')\n  })\n  try","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/fastq/test/promise.js","startLine":192,"endLine":199},{"filePath":"node_modules/fastq/test/test.js","startLine":555,"endLine":562}]}
{"cloneLines":", async function (t) {\n  function handleRejection () {\n    t.fail('unhandledRejection')\n  }\n  process.once('unhandledRejection', handleRejection)\n  const q = buildQueue(async function (task, cb) {\n    throw new Error('test error')\n  }, 1)\n\n  q.unshift","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/fastq/test/promise.js","startLine":235,"endLine":244},{"filePath":"node_modules/fastq/test/promise.js","startLine":220,"endLine":229}]}
{"cloneLines":"module['exports'] = {\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red',\n};","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/colors/themes/generic-logging.js","startLine":1,"endLine":12},{"filePath":"node_modules/@colors/colors/themes/generic-logging.js","startLine":1,"endLine":12}]}
{"cloneLines":"/*\nThe MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nvar styles = {};\nmodule['exports'] = styles;\n\nvar codes = {\n  reset: [0, 0],\n\n  bold: [1, 22],\n  dim: [2, 22],\n  italic: [3, 23],\n  underline: [4, 24],\n  inverse: [7, 27],\n  hidden: [8, 28],\n  strikethrough: [9, 29],\n\n  black: [30, 39],\n  red: [31, 39],\n  green: [32, 39],\n  yellow: [33, 39],\n  blue: [34, 39],\n  magenta: [35, 39],\n  cyan: [36, 39],\n  white: [37, 39],\n  gray: [90, 39],\n  grey: [90, 39],\n\n  brightRed: [91, 39],\n  brightGreen: [92, 39],\n  brightYellow: [93, 39],\n  brightBlue: [94, 39],\n  brightMagenta: [95, 39],\n  brightCyan: [96, 39],\n  brightWhite: [97, 39],\n\n  bgBlack: [40, 49],\n  bgRed: [41, 49],\n  bgGreen: [42, 49],\n  bgYellow: [43, 49],\n  bgBlue: [44, 49],\n  bgMagenta: [45, 49],\n  bgCyan: [46, 49],\n  bgWhite: [47, 49],\n  bgGray: [100, 49],\n  bgGrey: [100, 49],\n\n  bgBrightRed: [101, 49],\n  bgBrightGreen: [102, 49],\n  bgBrightYellow: [103, 49],\n  bgBrightBlue: [104, 49],\n  bgBrightMagenta: [105, 49],\n  bgBrightCyan: [106, 49],\n  bgBrightWhite: [107, 49],\n\n  // legacy styles for colors pre v1.0.0\n  blackBG: [40, 49],\n  redBG: [41, 49],\n  greenBG: [42, 49],\n  yellowBG: [43, 49],\n  blueBG: [44, 49],\n  magentaBG: [45, 49],\n  cyanBG: [46, 49],\n  whiteBG: [47, 49],\n\n};\n\nObject.keys(codes).forEach(function(key) {\n  var val = codes[key];\n  var style = styles[key] = [];\n  style.open = '\\u001b[' + val[0] + 'm';\n  style.close = '\\u001b[' + val[1] + 'm';\n});","nrTokens":0,"nrLines":95,"files":[{"filePath":"node_modules/colors/lib/styles.js","startLine":1,"endLine":95},{"filePath":"node_modules/@colors/colors/lib/styles.js","startLine":1,"endLine":95}]}
{"cloneLines":"var colors = require('./colors');\n\nmodule['exports'] = function() {\n  //\n  // Extends prototype of native string object to allow for \"foo\".red syntax\n  //\n  var addProperty = function(color, func) {\n    String.prototype.__defineGetter__(color, func);\n  };\n\n  addProperty('strip', function() {\n    return colors.strip(this);\n  });\n\n  addProperty('stripColors', function() {\n    return colors.strip(this);\n  });\n\n  addProperty('trap', function() {\n    return colors.trap(this);\n  });\n\n  addProperty('zalgo', function() {\n    return colors.zalgo(this);\n  });\n\n  addProperty('zebra', function() {\n    return colors.zebra(this);\n  });\n\n  addProperty('rainbow', function() {\n    return colors.rainbow(this);\n  });\n\n  addProperty('random', function() {\n    return colors.random(this);\n  });\n\n  addProperty('america', function() {\n    return colors.america(this);\n  });\n\n  //\n  // Iterate through all default styles and colors\n  //\n  var x = Object.keys(colors.styles);\n  x.forEach(function(style) {\n    addProperty(style, function() {\n      return colors.stylize(this, style);\n    });\n  });\n\n  function applyTheme(theme) {\n    //\n    // Remark: This is a list of methods that exist\n    // on String that you should not overwrite.\n    //\n    var stringPrototypeBlacklist = [\n      '__defineGetter__', '__defineSetter__', '__lookupGetter__',\n      '__lookupSetter__', 'charAt', 'constructor', 'hasOwnProperty',\n      'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString',\n      'valueOf', 'charCodeAt', 'indexOf', 'lastIndexOf', 'length',\n      'localeCompare', 'match', 'repeat', 'replace', 'search', 'slice',\n      'split', 'substring', 'toLocaleLowerCase', 'toLocaleUpperCase',\n      'toLowerCase', 'toUpperCase', 'trim', 'trimLeft', 'trimRight',\n    ];\n\n    Object.keys(theme).forEach(function(prop) {\n      if (stringPrototypeBlacklist.indexOf(prop) !== -1) {\n        console.log('warn: '.red + ('String.prototype' + prop).magenta +\n          ' is probably something you don\\'t want to override.  ' +\n          'Ignoring style name');\n      } else {\n        if (typeof(theme[prop]) === 'string') {\n          colors[prop] = colors[theme[prop]];\n          addProperty(prop, function() {\n            return colors[prop](this);\n          });\n        } else {\n          var themePropApplicator = function(str) {\n            var ret = str || this;\n            for (var t = 0; t < theme[prop].length; t++) {\n              ret = colors[theme[prop][t]](ret);\n            }\n            return ret;\n          };\n          addProperty(prop, themePropApplicator);\n          colors[prop] = function(str) {\n            return themePropApplicator(str);\n          };\n        }\n      }\n    });\n  }\n\n  colors.setTheme = function(theme) {\n    if (typeof theme === 'string') {\n      console.log('colors.setTheme now only accepts an object, not a string. ' +\n        'If you are trying to set a theme from a file, it is now your (the ' +\n        'caller\\'s) responsibility to require the file.  The old syntax ' +\n        'looked like colors.setTheme(__dirname + ' +\n        '\\'/../themes/generic-logging.js\\'); The new syntax looks like '+\n        'colors.setTheme(require(__dirname + ' +\n        '\\'/../themes/generic-logging.js\\'));');\n      return;\n    } else {\n      applyTheme(theme);\n    }\n  };\n};","nrTokens":0,"nrLines":110,"files":[{"filePath":"node_modules/colors/lib/extendStringPrototype.js","startLine":1,"endLine":110},{"filePath":"node_modules/@colors/colors/lib/extendStringPrototype.js","startLine":1,"endLine":110}]}
{"cloneLines":"/*\n\nThe MIT License (MIT)\n\nOriginal Library\n  - Copyright (c) Marak Squires\n\nAdditional functionality\n - Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nvar colors = {};\nmodule['exports'] = colors;\n\ncolors.themes = {};\n\nvar util = require('util');\nvar ansiStyles = colors.styles = require('./styles');\nvar defineProps = Object.defineProperties;\nvar newLineRegex = new RegExp(/[\\r\\n]+/g);\n\ncolors.supportsColor = require('./system/supports-colors').supportsColor;\n\nif (typeof colors.enabled === 'undefined') {\n  colors.enabled = colors.supportsColor() !== false;\n}\n\ncolors.enable = function() {\n  colors.enabled = true;\n};\n\ncolors.disable = function() {\n  colors.enabled = false;\n};\n\ncolors.stripColors = colors.strip = function(str) {\n  return ('' + str).replace(/\\x1B\\[\\d+m/g, '');\n};\n\n// eslint-disable-next-line no-unused-vars\nvar stylize = colors.stylize = function stylize(str, style) {\n  if (!colors.enabled) {\n    return str+'';\n  }\n\n  var styleMap = ansiStyles[style];\n\n  // Stylize should work for non-ANSI styles, too\n  if(!styleMap && style in colors){\n    // Style maps like trap operate as functions on strings;\n    // they don't have properties like open or close.\n    return colors[style](str);\n  }\n\n  return styleMap.open + str + styleMap.close;\n};\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\nvar escapeStringRegexp = function(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  return str.replace(matchOperatorsRe, '\\\\$&');\n};\n\nfunction build(_styles) {\n  var builder = function builder() {\n    return applyStyle.apply(builder, arguments);\n  };\n  builder._styles = _styles;\n  // __proto__ is used because we must return a function, but there is\n  // no way to create a function with a different prototype.\n  builder.__proto__ = proto;\n  return builder;\n}\n\nvar styles = (function() {\n  var ret = {};\n  ansiStyles.grey = ansiStyles.gray;\n  Object.keys(ansiStyles).forEach(function(key) {\n    ansiStyles[key].closeRe =\n      new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n    ret[key] = {\n      get: function() {\n        return build(this._styles.concat(key));\n      },\n    };\n  });\n  return ret;\n})();\n\nvar proto = defineProps(function colors() {}, styles);\n\nfunction applyStyle() {\n  var args = Array.prototype.slice.call(arguments);\n\n  var str = args.map(function(arg) {\n    // Use weak equality check so we can colorize null/undefined in safe mode\n    if (arg != null && arg.constructor === String) {\n      return arg;\n    } else {\n      return util.inspect(arg);\n    }\n  }).join(' ');\n\n  if (!colors.enabled || !str) {\n    return str;\n  }\n\n  var newLinesPresent = str.indexOf('\\n') != -1;\n\n  var nestedStyles = this._styles;\n\n  var i = nestedStyles.length;\n  while (i--) {\n    var code = ansiStyles[nestedStyles[i]];\n    str = code.open + str.replace(code.closeRe, code.open) + code.close;\n    if (newLinesPresent) {\n      str = str.replace(newLineRegex, function(match) {\n        return code.close + match + code.open;\n      });\n    }\n  }\n\n  return str;\n}\n\ncolors.setTheme = function(theme) {\n  if (typeof theme === 'string') {\n    console.log('colors.setTheme now only accepts an object, not a string.  ' +\n      'If you are trying to set a theme from a file, it is now your (the ' +\n      'caller\\'s) responsibility to require the file.  The old syntax ' +\n      'looked like colors.setTheme(__dirname + ' +\n      '\\'/../themes/generic-logging.js\\'); The new syntax looks like '+\n      'colors.setTheme(require(__dirname + ' +\n      '\\'/../themes/generic-logging.js\\'));');\n    return;\n  }\n  for (var style in theme) {\n    (function(style) {\n      colors[style] = function(str) {\n        if (typeof theme[style] === 'object') {\n          var out = str;\n          for (var i in theme[style]) {\n            out = colors[theme[style][i]](out);\n          }\n          return out;\n        }\n        return colors[theme[style]](str);\n      };\n    })(style);\n  }\n};\n\nfunction init() {\n  var ret = {};\n  Object.keys(styles).forEach(function(name) {\n    ret[name] = {\n      get: function() {\n        return build([name]);\n      },\n    };\n  });\n  return ret;\n}\n\nvar sequencer = function sequencer(map, str) {\n  var exploded = str.split('');\n  exploded = exploded.map(map);\n  return exploded.join('');\n};\n\n// custom formatter methods\ncolors.trap = require('./custom/trap');\ncolors.zalgo = require('./custom/zalgo');\n\n// maps\ncolors.maps = {};\ncolors.maps.america = require('./maps/america')(colors);\ncolors.maps.zebra = require('./maps/zebra')(colors);\ncolors.maps.rainbow = require('./maps/rainbow')(colors);\ncolors.maps.random = require('./maps/random')(colors);\n\nfor (var map in colors.maps) {\n  (function(map) {\n    colors[map] = function(str) {\n      return sequencer(colors.maps[map], str);\n    };\n  })(map);\n}\n\ndefineProps(colors, init());","nrTokens":0,"nrLines":211,"files":[{"filePath":"node_modules/colors/lib/colors.js","startLine":1,"endLine":211},{"filePath":"node_modules/@colors/colors/lib/colors.js","startLine":1,"endLine":211}]}
{"cloneLines":"var colors = require('../safe');\n\nconsole.log(colors.yellow('First some yellow text'));\n\nconsole.log(colors.yellow.underline('Underline that text'));\n\nconsole.log(colors.red.bold('Make it bold and red'));\n\nconsole.log(colors.rainbow('Double Raindows All Day Long'));\n\nconsole.log(colors.trap('Drop the bass'));\n\nconsole.log(colors.rainbow(colors.trap('DROP THE RAINBOW BASS')));\n\n// styles not widely supported\nconsole.log(colors.bold.italic.underline.red('Chains are also cool.'));\n\n// styles not widely supported\nconsole.log(colors.green('So ') + colors.underline('are') + ' '\n  + colors.inverse('inverse') + colors.yellow.bold(' styles! '));\n\nconsole.log(colors.zebra('Zebras are so fun!'));\n\nconsole.log('This is ' + colors.strikethrough('not') + ' fun.');\n\n\nconsole.log(colors.black.bgWhite('Background color attack!'));\nconsole.log(colors.random('Use random styles on everything!'));\nconsole.log(colors.america('America, Heck Yeah!'));\n\nconsole","nrTokens":0,"nrLines":31,"files":[{"filePath":"node_modules/colors/examples/safe-string.js","startLine":1,"endLine":31},{"filePath":"node_modules/@colors/colors/examples/safe-string.js","startLine":1,"endLine":31}]}
{"cloneLines":"console.log(colors.brightCyan('Blindingly ') + colors.brightRed('bright? ') + colors.brightYellow('Why ') + colors.brightGreen('not?!'));\n\nconsole.log('Setting themes is useful');\n\n//\n// Custom themes\n//\n// console.log('Generic logging theme as JSON'.green.bold.underline);\n// Load theme with JSON literal\ncolors.setTheme({\n  silly: 'rainbow',\n  input: 'blue',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red',\n});\n\n// outputs red text\nconsole.log(colors.error('this is an error'));\n\n// outputs yellow text\nconsole.log(colors.warn('this is a warning'));\n\n// outputs blue text\nconsole.log(colors.input('this is an input'));\n\n\n// console.log('Generic logging theme as file'.green.bold.underline);\n\n// Load a theme from file\ncolors.setTheme(require(__dirname + '/../themes/generic-logging.js'));\n\n// outputs red text\nconsole.log(colors.error('this is an error'));\n\n// outputs yellow text\nconsole.log(colors.warn('this is a warning'));\n\n// outputs grey text\nconsole.log(colors.input('this is an input'));\n\n// console.log(colors.zalgo(\"Don't summon him\"))","nrTokens":0,"nrLines":47,"files":[{"filePath":"node_modules/colors/examples/safe-string.js","startLine":31,"endLine":77},{"filePath":"node_modules/@colors/colors/examples/safe-string.js","startLine":32,"endLine":78}]}
{"cloneLines":"var colors = require('../lib/index');\n\nconsole.log('First some yellow text'.yellow);\n\nconsole.log('Underline that text'.yellow.underline);\n\nconsole.log('Make it bold and red'.red.bold);\n\nconsole.log(('Double Raindows All Day Long').rainbow);\n\nconsole.log('Drop the bass'.trap);\n\nconsole.log('DROP THE RAINBOW BASS'.trap.rainbow);\n\n// styles not widely supported\nconsole.log('Chains are also cool.'.bold.italic.underline.red);\n\n// styles not widely supported\nconsole.log('So '.green + 'are'.underline + ' ' + 'inverse'.inverse\n  + ' styles! '.yellow.bold);\nconsole.log('Zebras are so fun!'.zebra);\n\n//\n// Remark: .strikethrough may not work with Mac OS Terminal App\n//\nconsole.log('This is ' + 'not'.strikethrough + ' fun.');\n\nconsole.log('Background color attack!'.black.bgWhite);\nconsole.log('Use random styles on everything!'.random);\nconsole.log('America, Heck Yeah!'.america);\n\nconsole","nrTokens":0,"nrLines":32,"files":[{"filePath":"node_modules/colors/examples/normal-usage.js","startLine":1,"endLine":32},{"filePath":"node_modules/@colors/colors/examples/normal-usage.js","startLine":1,"endLine":32}]}
{"cloneLines":"console.log('Blindingly '.brightCyan + 'bright? '.brightRed + 'Why '.brightYellow + 'not?!'.brightGreen);\n\nconsole.log('Setting themes is useful');\n\n//\n// Custom themes\n//\nconsole.log('Generic logging theme as JSON'.green.bold.underline);\n// Load theme with JSON literal\ncolors.setTheme({\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red',\n});\n\n// outputs red text\nconsole.log('this is an error'.error);\n\n// outputs yellow text\nconsole.log('this is a warning'.warn);\n\n// outputs grey text\nconsole.log('this is an input'.input);\n\nconsole.log('Generic logging theme as file'.green.bold.underline);\n\n// Load a theme from file\ntry {\n  colors.setTheme(require(__dirname + '/../themes/generic-logging.js'));\n} catch (err) {\n  console.log(err);\n}\n\n// outputs red text\nconsole.log('this is an error'.error);\n\n// outputs yellow text\nconsole.log('this is a warning'.warn);\n\n// outputs grey text\nconsole.log('this is an input'.input);\n\n// console.log(\"Don't summon\".zalgo)","nrTokens":0,"nrLines":50,"files":[{"filePath":"node_modules/colors/examples/normal-usage.js","startLine":32,"endLine":81},{"filePath":"node_modules/@colors/colors/examples/normal-usage.js","startLine":33,"endLine":82}]}
{"cloneLines":"(state, ret) {\n  let lastBackgroundAdded = state.lastBackgroundAdded;\n  let lastForegroundAdded = state.lastForegroundAdded;\n\n  delete state.lastBackgroundAdded;\n  delete state.lastForegroundAdded;\n\n  Object.keys(state).forEach(function (key) {\n    if (state[key]) {\n      ret =","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/cli-table3/src/utils.js","startLine":120,"endLine":129},{"filePath":"node_modules/cli-table3/src/utils.js","startLine":97,"endLine":106}]}
{"cloneLines":", spanningCell) {\n    let left = this.chars[this.x == 0 ? 'left' : 'middle'];\n    if (this.x && spanningCell && this.cells) {\n      let cellLeft = this.cells[this.y + spanningCell][this.x - 1];\n      while (cellLeft instanceof ColSpanCell) {\n        cellLeft = this.cells[cellLeft.y][cellLeft.x - 1];\n      }\n      if (!(cellLeft instanceof RowSpanCell)) {\n        left = this.chars['rightMid'];\n      }\n    }\n    let right","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/cli-table3/src/cell.js","startLine":292,"endLine":303},{"filePath":"node_modules/cli-table3/src/cell.js","startLine":242,"endLine":253}]}
{"cloneLines":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst t = __importStar(require(\"@babel/types\"));\nconst","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/babel-walk/lib/test.js","startLine":1,"endLine":23},{"filePath":"node_modules/blamer/build/main/index.js","startLine":1,"endLine":23}]}
{"cloneLines":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recursive","nrTokens":0,"nrLines":25,"files":[{"filePath":"node_modules/babel-walk/lib/index.js","startLine":1,"endLine":25},{"filePath":"node_modules/blamer/build/main/index.js","startLine":1,"endLine":6}]}
{"cloneLines":");\n                }\n            }\n            for (const key of VISITOR_KEYS[node.type] || []) {\n                const subNode = node[key];\n                if (Array.isArray(subNode)) {\n                    for (const subSubNode of subNode) {\n                        recurse(subSubNode);\n                    }\n                }\n                else {\n                    recurse(subNode);\n                }\n            }\n            if (visitor === null || visitor === void 0 ? void 0 : visitor.exit) {\n                for (const v of visitor.exit) {\n                    v(node, state,","nrTokens":0,"nrLines":17,"files":[{"filePath":"node_modules/babel-walk/lib/index.js","startLine":82,"endLine":98},{"filePath":"node_modules/babel-walk/lib/index.js","startLine":46,"endLine":62}]}
{"cloneLines":"(visitors) {\n    const vis = explode_1.default(visitors);\n    return (node, state) => {\n        (function recurse(node) {\n            if (!node)\n                return;\n            const visitor = vis[node.type];\n            if (visitor === null || visitor === void 0 ? void 0 : visitor.enter) {\n                for (const v of visitor.enter) {\n                    v(node, state,","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/babel-walk/lib/index.js","startLine":107,"endLine":116},{"filePath":"node_modules/babel-walk/lib/index.js","startLine":37,"endLine":46}]}
{"cloneLines":"for (const key of VISITOR_KEYS[node.type] || []) {\n                    const subNode = node[key];\n                    if (Array.isArray(subNode)) {\n                        for (const subSubNode of subNode) {\n                            recurse(subSubNode);\n                        }\n                    }\n                    else {\n                        recurse(subNode);\n                    }\n                }\n            }","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/babel-walk/lib/index.js","startLine":120,"endLine":131},{"filePath":"node_modules/babel-walk/lib/index.js","startLine":49,"endLine":60}]}
{"cloneLines":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst t = __importStar(require(\"@babel/types\"));\nif","nrTokens":0,"nrLines":23,"files":[{"filePath":"node_modules/babel-walk/lib/explode.js","startLine":1,"endLine":23},{"filePath":"node_modules/blamer/build/main/index.js","startLine":1,"endLine":23}]}
{"cloneLines":"] = {\n                        enter: input[key].enter ? [input[key].enter] : [],\n                        exit: input[key].exit ? [input[key].exit] : [],\n                    };\n                }\n            }\n        }\n    }\n    return","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/babel-walk/lib/explode.js","startLine":98,"endLine":106},{"filePath":"node_modules/babel-walk/lib/explode.js","startLine":70,"endLine":78}]}
{"cloneLines":"],\n  \"main\": \"out/index.js\",\n  \"typings\": \"out/index.d.ts\",\n  \"scripts\": {\n    \"clean\": \"rimraf {tsconfig.tsbuildinfo,out}\",\n    \"lint\": \"eslint \\\"src/**/*.ts\\\" --cache\",\n    \"compile\": \"tsc -b .\",\n    \"compile:watch\": \"tsc -p . --watch --sourceMap\",\n    \"test\": \"mocha \\\"out/**/*.spec.js\\\" -s 0\",\n    \"build\": \"npm run clean && npm run compile && npm run lint && npm test\",\n    \"watch\": \"npm run clean && npm run compile:watch\"\n  },\n  \"devDependencies\"","nrTokens":0,"nrLines":13,"files":[{"filePath":"node_modules/@nodelib/fs.stat/package.json","startLine":21,"endLine":33},{"filePath":"node_modules/@nodelib/fs.walk/package.json","startLine":24,"endLine":36}]}
{"cloneLines":"ed path.\n\n```ts\nconst stats = fsStat.stat('path');\nconst stats = fsStat.stat('path', {});\nconst stats = fsStat.stat('path', new fsStat.Settings());\n```\n\n#### path\n\n* Required: `true`\n* Type: `string | Buffer | URL`\n\nA path to a file. If a URL is provided, it must use the `file:` protocol.\n\n#### optionsOrSettings\n\n* Required: `false`\n* Type: `Options | Settings`\n* Default: An instance of `Settings` class\n\nAn [`Options`](#options) object or an instance of [`Settings`](#settings) class.\n\n> :book: When you pass a plain object, an instance of the `Settings` class will be created automatically. If yo","nrTokens":0,"nrLines":25,"files":[{"filePath":"node_modules/@nodelib/fs.stat/README.md","startLine":46,"endLine":70},{"filePath":"node_modules/@nodelib/fs.walk/README.md","startLine":58,"endLine":82}]}
{"cloneLines":"],\n  \"engines\": {\n    \"node\": \">= 8\"\n  },\n  \"files\": [\n    \"out/**\",\n    \"!out/**/*.map\",\n    \"!out/**/*.spec.*\"\n  ],\n  \"main\": \"out/index.js\",\n  \"typings\": \"out/index.d.ts\",\n  \"scripts\": {\n    \"clean\": \"rimraf {tsconfig.tsbuildinfo,out}\",\n    \"lint\": \"eslint \\\"src/**/*.ts\\\" --cache\",\n    \"compile\": \"tsc -b .\",\n    \"compile:watch\": \"tsc -p . --watch --sourceMap\",\n    \"test\": \"mocha \\\"out/**/*.spec.js\\\" -s 0\",\n    \"build\": \"npm run clean && npm run compile && npm run lint && npm test\",\n    \"watch\": \"npm run clean && npm run compile:watch\"\n  },\n  \"dependencies\": {\n    \"@nodelib/fs.stat\"","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/@nodelib/fs.scandir/package.json","startLine":15,"endLine":36},{"filePath":"node_modules/@nodelib/fs.stat/package.json","startLine":13,"endLine":37}]}
{"cloneLines":" fsScandir.scandirSync('path');\nconst entries = fsScandir.scandirSync('path', {});\nconst entries = fsScandir.scandirSync(('path', new fsScandir.Settings());\n```\n\n#### path\n\n* Required: `true`\n* Type: `string | Buffer | URL`\n\nA path to a file. If a URL is provided, it must use the `file:` protocol.\n\n#### opti","nrTokens":0,"nrLines":16,"files":[{"filePath":"node_modules/@nodelib/fs.scandir/README.md","startLine":47,"endLine":62},{"filePath":"node_modules/@nodelib/fs.walk/README.md","startLine":58,"endLine":73}]}
{"cloneLines":"nsOrSettings\n\n* Required: `false`\n* Type: `Options | Settings`\n* Default: An instance of `Settings` class\n\nAn [`Options`](#options) object or an instance of [`Settings`](#settingsoptions) class.\n\n> :book: When you pass a plain object, an instance of the `Settings` class will be created automatically.","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/@nodelib/fs.scandir/README.md","startLine":62,"endLine":71},{"filePath":"node_modules/@nodelib/fs.walk/README.md","startLine":73,"endLine":82}]}
{"cloneLines":"licLinks\n\n* Type: `boolean`\n* Default: `false`\n\nFollow symbolic links or not. Call `fs.stat` on symbolic link if `true`.\n\n### `throwErrorOnBrokenSymbolicLink`\n\n* Type: `boolean`\n* Default: `true`\n\nThrow an error when symbolic link is broken if `true` or safely use `lstat` call if `false`.\n\n### `pathSegment","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/@nodelib/fs.scandir/README.md","startLine":116,"endLine":127},{"filePath":"node_modules/@nodelib/fs.walk/README.md","startLine":178,"endLine":189}]}
{"cloneLines":"## `pathSegmentSeparator`\n\n* Type: `string`\n* Default: `path.sep`\n\nBy default, this package uses the correct path separator for your OS (`\\` on Windows, `/` on Unix-like systems). But you can set this option to any separator character(s) that you want to use instead.\n\n### `fs`\n\n* Type: [`FileSystemAdapter`](./src/adapters/fs.ts)\n* Default: A default FS methods\n\nBy default, the built-in Node.js mod","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/@nodelib/fs.scandir/README.md","startLine":125,"endLine":138},{"filePath":"node_modules/@nodelib/fs.stat/README.md","startLine":100,"endLine":113}]}
{"cloneLines":"],\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/kucherenko/jscpd.git\"\n  },\n  \"scripts\": {\n    \"build\": \"yarn clean && yarn compile\",\n    \"clean\": \"rm -rf ./dist\",\n    \"compile\": \"tsc -p tsconfig.build.json\",\n    \"prepare\": \"ts-node ../../build-utils/publish-util.ts ./package.json dist/index\",\n    \"postpublish\": \"ts-node ../../build-utils/publish-util.ts ./package.json src/index\",\n    \"prepublishOnly\": \"yarn build\"\n  },\n  \"dependencies\"","nrTokens":0,"nrLines":17,"files":[{"filePath":"node_modules/@jscpd/finder/package.json","startLine":17,"endLine":33},{"filePath":"node_modules/@jscpd/tokenizer/package.json","startLine":16,"endLine":32}]}
{"cloneLines":"0-rc.3 (2020-05-04)\n\n\n\n\n## 3.3.0-rc.3 (2020-05-02)\n\n* v3.3.0-rc.3 ([9f388ff](https://github.com/kucherenko/jscpd/commit/9f388ff))\n* docs: ?????? update README for the packages ([76492e6](https://github.com/kucherenko/jscpd/commit/76492e6))\n* refactor: ???? change imports in interfaces ([f72e3e0](https://github.com/kucherenko/jscpd/commit/f72e3e0))\n* refactor: ???? remove cyclic dependency between core and tokenizer ([6615825](https://github.com/kucherenko/jscpd/commit/6615825))\n* chore: ???? add tool for changing package.json before publishing ([fb9c7ec](https://github.com/kucherenko/jscpd/commit/fb9c7ec))\n* chore: ???? change npm script to yarn ([3729bf9](https://github.com/kucherenko/jscpd/commit/3729bf9))\n* chore: ???? change package json ([205136f](https://github.com/kucherenko/jscpd/commit/205136f))\n* chore: ???? fix issue with yarncompile ([44eef97](https://github.com/kucherenko/jscpd/commit/44eef97))\n\n\n\n## 3.3.0-rc.2 (2020-04-29)\n\n* v3.3.0-rc.2 ([77890f4](https://github.com/kucherenko/jscpd/commit/77890f4))\n* docs: ?????? add screenshot to documentation ([1271d98](https://github.com/kucherenko/jscpd/commit/1271d98))\n\n\n\n## 3.3.0-rc.1 (2020-04-29)\n\n* v3.3.0-rc.1 ([dd2a39d](https://github.com/kucherenko/jscpd/commit/dd2a39d))\n*","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/@jscpd/finder/CHANGELOG.md","startLine":8,"endLine":29},{"filePath":"node_modules/@jscpd/tokenizer/CHANGELOG.md","startLine":8,"endLine":29}]}
{"cloneLines":",\n    \"test\": \"__tests__\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/kucherenko/jscpd.git\"\n  },\n  \"scripts\": {\n    \"build\": \"yarn clean && yarn compile\",\n    \"clean\": \"rm -rf ./dist\",\n    \"compile\": \"tsc -p tsconfig.build.json\",\n    \"prepare\": \"ts-node ../../build-utils/publish-util.ts ./package.json dist/index\",\n    \"postpublish\": \"ts-node ../../build-utils/publish-util.ts ./package.json src/index\",\n    \"prepublishOnly\": \"yarn build\"\n  },\n  \"bugs\"","nrTokens":0,"nrLines":22,"files":[{"filePath":"node_modules/@jscpd/core/package.json","startLine":11,"endLine":32},{"filePath":"node_modules/@jscpd/tokenizer/package.json","startLine":11,"endLine":32}]}
{"cloneLines":"(https://github.com/kucherenko/jscpd/commit/c0a1584))\n* refactor: ???? change imports in interfaces ([f72e3e0](https://github.com/kucherenko/jscpd/commit/f72e3e0))\n* refactor: ???? remove cyclic dependency between core and tokenizer ([6615825](https://github.com/kucherenko/jscpd/commit/6615825))\n* chore: ???? add tool for changing package.json before publishing ([fb9c7ec](https://github.com/kucherenko/jscpd/commit/fb9c7ec))\n* chore: ???? change npm script to yarn ([3729bf9](https://github.com/kucherenko/jscpd/commit/3729bf9))\n* chore: ???? change package json ([205136f](https://github.com/kucherenko/jscpd/commit/205136f))\n* chore: ???? fix issue with yarncompile ([44eef97](https://github.com/kucherenko/jscpd/commit/44eef97))\n\n\n\n## 3.3.0-rc.2 (2020-04-29)\n\n* v3.3.0-rc","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/@jscpd/core/CHANGELOG.md","startLine":10,"endLine":23},{"filePath":"node_modules/@jscpd/tokenizer/CHANGELOG.md","startLine":9,"endLine":22}]}
{"cloneLines":"const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    for","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/which/which.js","startLine":94,"endLine":101},{"filePath":"node_modules/which/which.js","startLine":59,"endLine":66}]}
{"cloneLines":",\n\t\"author\": {\n\t\t\"name\": \"Sindre Sorhus\",\n\t\t\"email\": \"sindresorhus@gmail.com\",\n\t\t\"url\": \"sindresorhus.com\"\n\t},\n\t\"engines\": {\n\t\t\"node\": \">=8\"\n\t},\n\t\"scripts\": {\n\t\t\"test\": \"xo && ava && tsd\"\n\t},\n\t\"files\": [\n\t\t\"index.js\",\n\t\t\"index.d.ts\"\n\t],\n\t\"keywords\": [\n\t\t\"string\"","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/string-width/package.json","startLine":6,"endLine":23},{"filePath":"node_modules/strip-ansi/package.json","startLine":6,"endLine":23}]}
{"cloneLines":".length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array","nrTokens":0,"nrLines":11,"files":[{"filePath":"node_modules/spark-md5/spark-md5.js","startLine":253,"endLine":263},{"filePath":"node_modules/spark-md5/spark-md5.js","startLine":213,"endLine":223}]}
{"cloneLines":"<< ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex","nrTokens":0,"nrLines":26,"files":[{"filePath":"node_modules/spark-md5/spark-md5.js","startLine":275,"endLine":300},{"filePath":"node_modules/spark-md5/spark-md5.js","startLine":229,"endLine":252}]}
{"cloneLines":"* 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/spark-md5/spark-md5.js","startLine":584,"endLine":591},{"filePath":"node_modules/spark-md5/spark-md5.js","startLine":240,"endLine":248}]}
{"cloneLines":"<< ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */","nrTokens":0,"nrLines":20,"files":[{"filePath":"node_modules/spark-md5/spark-md5.js","startLine":675,"endLine":694},{"filePath":"node_modules/spark-md5/spark-md5.js","startLine":496,"endLine":515}]}
{"cloneLines":",\n\t\"author\": {\n\t\t\"name\": \"Sindre Sorhus\",\n\t\t\"email\": \"sindresorhus@gmail.com\",\n\t\t\"url\": \"sindresorhus.com\"\n\t},\n\t\"engines\": {\n\t\t\"node\": \">=8\"\n\t},\n\t\"scripts\": {\n\t\t\"test\": \"xo && ava && tsd\"\n\t},\n\t\"files\": [\n\t\t\"index.js\",\n\t\t\"index.d.ts\"\n\t],\n\t\"keywords\": [\n\t\t\"regex\"","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/shebang-regex/package.json","startLine":6,"endLine":23},{"filePath":"node_modules/strip-ansi/package.json","startLine":6,"endLine":23}]}
{"cloneLines":"ge data\n  * dir - directory that contains package.json (Note: the second argument will change to \"pkgfile\" in v2)\n\n* `opts.pathFilter(pkg, path, relativePath)` - transform a path within a package\n  * pkg - package data\n  * path - the path being resolved\n  * relativePath - the path relative from the package.json location\n  * returns - a relative path that will be joined from the package.json location\n\n* opts.paths - require.paths array to use if nothing is found on the normal `node_modules` recursive walk (probably don't use this)\n\n  For advanced users, `paths` can also be a `opts.paths(request, start, opts)` function\n    * request - the import specifier being resolved\n    * start - lookup path\n    * getNodeModulesDirs - a thunk (no-argument function) that returns the paths using standard `node_modules` resolution\n    * opts - the resolution options\n\n* `opts.packageIterator(request, start, opts)` - return the list of candidate paths where the packages sources may be found (probably don't use this)\n    * request - the import specifier being resolved\n    * start - lookup path\n    * getPackageCandidates - a thunk (no-argument function) that returns the paths using standard `node_modules` resolution\n    * opts - the resolution options\n\n* opts.moduleDirectory - directory (or directories) in which to recursively look for modules. default: `\"node_modules\"`\n\n* opts.preserveSymlinks - if true, doesn't resolve `basedir` to real path before resolving.\nThis is the way Node resolves dependencies when executed with the [--preserve-symlinks](https://nodejs.org/api/all.html#cli_preserve_symlinks) flag.\n**Note:** this property is currently `true` by default but it will be changed to\n`false` in the next major version because *Node's resolution algorithm does not preserve symlinks by default*.\n\ndefault `opts` values:\n\n```js\n{\n    paths: []","nrTokens":0,"nrLines":36,"files":[{"filePath":"node_modules/resolve/readme.markdown","startLine":198,"endLine":233},{"filePath":"node_modules/resolve/readme.markdown","startLine":90,"endLine":125}]}
{"cloneLines":"var toHex = function () {\n  var reverse = new (require('stream').Transform)()\n\n  reverse._transform = function (chunk, enc, callback) {\n    reverse.push(chunk.toString('hex'))\n    callback()\n  }\n\n  return reverse\n}\n\nvar wsClosed = false\nvar rsClosed = false\nvar callbackCalled = false\n\nvar check = function () {\n  if (wsClosed && rsClosed && callbackCalled) {\n    console.log('test-browser.js passes'","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/pump/test-browser.js","startLine":17,"endLine":34},{"filePath":"node_modules/pump/test-node.js","startLine":6,"endLine":23}]}
{"cloneLines":", function () {\n  rsClosed = true\n  check()\n})\n\nvar res = pump(rs, toHex(), toHex(), toHex(), ws, function () {\n  callbackCalled = true\n  check()\n})\n\nif (res !== ws) {\n  throw new Error('should return last stream')\n}\n\nsetTimeout(function () {\n  rs.push","nrTokens":0,"nrLines":16,"files":[{"filePath":"node_modules/pump/test-browser.js","startLine":44,"endLine":59},{"filePath":"node_modules/pump/test-node.js","startLine":33,"endLine":48}]}
{"cloneLines":"ou know what you are doing.\n\n`options` may contain the following properties:\n\n- `filename` (string): The name of the Pug file; it is included in the produced AST nodes and error handling, if provided.\n- `plugins` (array): An array of plugins, in the order they should be applied.\n- `src` (string): The source of the Pug file; it is u","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/pug-parser/README.md","startLine":82,"endLine":90},{"filePath":"node_modules/pug-parser/README.md","startLine":24,"endLine":30}]}
{"cloneLines":"<T> {\n  /**\n   * Attaches callbacks for the resolution and/or rejection of the ThenPromise.\n   * @param onfulfilled The callback to execute when the ThenPromise is resolved.\n   * @param onrejected The callback to execute when the ThenPromise is rejected.\n   * @returns A ThenPromise for the completion of which ever callback is executed.\n   */\n  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Thenable<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Thenable<TResult2>) | undefined | null): ThenPromise","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/promise/index.d.ts","startLine":14,"endLine":21},{"filePath":"node_modules/promise/index.d.ts","startLine":1,"endLine":8}]}
{"cloneLines":"ars, braces, slashes, and so on: `!(**/{a,b,*/c})`.\n\nThus, given that there is no canonical glob specification to use as a single source of truth when differences of opinion arise regarding behavior, sometimes we have to implement our best judgement ","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/picomatch/README.md","startLine":671,"endLine":679},{"filePath":"node_modules/to-regex-range/README.md","startLine":240,"endLine":248}]}
{"cloneLines":"nt and rely on feedback from users to make improvements.\n\n**Performance**\n\nAlthough this library performs well in benchmarks, and in most cases it's faster than other popular libraries we benchmarked against, we will always choose accuracy over performance. It's not helpful to anyone if our library is faster at returning the wrong answer.\n\n<br>\n<br>\n\n## About\n\n<details>\n<summary><strong","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/picomatch/README.md","startLine":679,"endLine":692},{"filePath":"node_modules/to-regex-range/README.md","startLine":248,"endLine":261}]}
{"cloneLines":"(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  \n  return {\n    root: allParts[1],\n    dir: allParts[0].","nrTokens":0,"nrLines":8,"files":[{"filePath":"node_modules/path-parse/index.js","startLine":54,"endLine":61},{"filePath":"node_modules/path-parse/index.js","startLine":21,"endLine":27}]}
{"cloneLines":",\n\t\"author\": {\n\t\t\"name\": \"Sindre Sorhus\",\n\t\t\"email\": \"sindresorhus@gmail.com\",\n\t\t\"url\": \"sindresorhus.com\"\n\t},\n\t\"engines\": {\n\t\t\"node\": \">=8\"\n\t},\n\t\"scripts\": {\n\t\t\"test\": \"xo && ava && tsd\"\n\t},\n\t\"files\": [\n\t\t\"index.js\",\n\t\t\"index.d.ts\"\n\t],\n\t\"keywords\": [\n\t\t\"path\"","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/path-key/package.json","startLine":6,"endLine":23},{"filePath":"node_modules/strip-ansi/package.json","startLine":6,"endLine":23}]}
{"cloneLines":",\n\t\"author\": {\n\t\t\"name\": \"Sindre Sorhus\",\n\t\t\"email\": \"sindresorhus@gmail.com\",\n\t\t\"url\": \"sindresorhus.com\"\n\t},\n\t\"engines\": {\n\t\t\"node\": \">=8\"\n\t},\n\t\"scripts\": {\n\t\t\"test\": \"xo && ava && tsd\"\n\t},\n\t\"files\": [\n\t\t\"index.js\",\n\t\t\"index.d.ts\"\n\t],\n\t\"keywords\": [\n\t\t\"npm\"","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/npm-run-path/package.json","startLine":6,"endLine":23},{"filePath":"node_modules/strip-ansi/package.json","startLine":6,"endLine":23}]}
{"cloneLines":"= (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (!","nrTokens":0,"nrLines":6,"files":[{"filePath":"node_modules/micromatch/index.js","startLine":295,"endLine":300},{"filePath":"node_modules/micromatch/index.js","startLine":259,"endLine":264}]}
{"cloneLines":") {\n    if ('dependencies' in result) {\n      if (!Array.isArray(result.dependencies)) {\n        throw new Error('Result should have a dependencies property that is an array');\n      }\n    } else {\n      result.dependencies = [];\n    }\n    return result;\n  } else {\n    throw new Error('Invalid result object from transform.');\n  }\n}\nfunction normalizeAsync","nrTokens":0,"nrLines":14,"files":[{"filePath":"node_modules/jstransformer/index.js","startLine":54,"endLine":67},{"filePath":"node_modules/jstransformer/index.js","startLine":27,"endLine":40}]}
{"cloneLines":"(file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  try","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/jsonfile/index.js","startLine":40,"endLine":49},{"filePath":"node_modules/jsonfile/index.js","startLine":10,"endLine":19}]}
{"cloneLines":"e(file, obj, { flag: 'a' }, function (err) {\n  if (err) console.error(err)\n})\n```\n\n----\n\n### writeFileSync(filename, obj, [options])\n\n`options`: Pass in any [`fs.writeFileSync`](https://nodejs.org/api/fs.html#fs_fs_writefilesync_file_data_options) options or set `replacer` for a [JSON replacer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify). Can also pass","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/jsonfile/README.md","startLine":164,"endLine":172},{"filePath":"node_modules/jsonfile/README.md","startLine":76,"endLine":85}]}
{"cloneLines":",\n    \"test\": \"__tests__\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/kucherenko/jscpd.git\"\n  },\n  \"scripts\": {\n    \"build\": \"yarn clean && yarn compile\",\n    \"clean\": \"rm -rf ./dist\",\n    \"compile\": \"tsc -p tsconfig.build.json\",\n    \"prepare\": \"ts-node ../../build-utils/publish-util.ts ./package.json dist/index\",\n    \"postpublish\": \"ts-node ../../build-utils/publish-util.ts ./package.json src/index\",\n    \"prepublishOnly\": \"yarn build\"\n  },\n  \"dependencies\": {\n    \"@jscpd/core\": \"^3.5.4\",\n    \"@jscpd/finder\"","nrTokens":0,"nrLines":24,"files":[{"filePath":"node_modules/jscpd/package.json","startLine":15,"endLine":38},{"filePath":"node_modules/@jscpd/tokenizer/package.json","startLine":11,"endLine":35}]}
{"cloneLines":"enko/jscpd/commit/c0ab855))\n* docs: ?????? update README for the packages ([76492e6](https://github.com/kucherenko/jscpd/commit/76492e6))\n* refactor: ???? change imports in interfaces ([f72e3e0](https://github.com/kucherenko/jscpd/commit/f72e3e0))\n* refactor: ???? remove cyclic dependency between core and tokenizer ([6615825](https://github.com/kucherenko/jscpd/commit/6615825))\n* chore: ???? add tool for changing package.json before publishing ([fb9c7ec](https://github.com/kucherenko/jscpd/commit/fb9c7ec))\n* chore: ???? change npm script to yarn ([3729bf9](https://github.com/kucherenko/jscpd/commit/3729bf9))\n* chore: ???? change package json ([205136f](https://github.com/kucherenko/jscpd/commit/205136f))\n* chore: ???? fix issue with yarncompile ([44eef97](https://github.com/kucherenko/jsc","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/jscpd/CHANGELOG.md","startLine":5,"endLine":13},{"filePath":"node_modules/@jscpd/tokenizer/CHANGELOG.md","startLine":8,"endLine":21}]}
{"cloneLines":"hese with a grain of salt. See the [benchmarks](./benchmark/index.js) for more detail.\n\n```\n# all\nv7.0 x 413,222 ops/sec ??2.02% (86 runs sampled)\nv6.0 x 111,061 ops/sec ??1.29% (85 runs sampled)\nparseFloat x 317,596 ops/sec ??1.36% (86 runs sampled)\nfastest is 'v7.0'\n\n# string\nv7.0 x 3,054,496 ops/sec ??1.05% (89 runs sampled)\nv6.0 x 2,957,781 ops/sec ??0.98% (88 runs sampled)\nparseFloat x 3,071,060 ops/sec ??1.13% (88 runs sampled)\nfastest is 'parseFloat,v7.0'\n\n# number\nv7.0 x 3,146,895 ops/sec ??0.89% (89 runs sampled)\nv6.0 x 3,214,038 ops/sec ??1.07% (89 runs sampled)\nparseFloat x 3,077,588 ops/sec ??1.07% (87 runs sampled)\nfastest is 'v6.0'\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You","nrTokens":0,"nrLines":36,"files":[{"filePath":"node_modules/is-number/README.md","startLine":123,"endLine":158},{"filePath":"node_modules/to-regex-range/README.md","startLine":235,"endLine":270}]}
{"cloneLines":"}\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nmodule","nrTokens":0,"nrLines":25,"files":[{"filePath":"node_modules/is-glob/index.js","startLine":109,"endLine":133},{"filePath":"node_modules/is-glob/index.js","startLine":77,"endLine":101}]}
{"cloneLines":"e});\nisGlob('abc/!(a).js', {strict: false});\nisGlob('abc/+(a).js', {strict: false});\nisGlob('abc/*(a).js', {strict: false});\nisGlob('abc/?(a).js', {strict: false});\n//=> true\n```\n\n**False**\n\nEscaped globs or extglobs return `false`:\n\n```js\nisGlob('\\\\!foo.js', {strict: false});\nisGlob('\\\\*.js', {strict: false});\nisGlob('\\\\*\\\\*/abc.js', {strict: false});\nisGlob('abc/\\\\*.js', {strict: false});\nisGlob('abc/\\\\(aaa|bbb).js', {strict: false});\nisGlob('abc/\\\\[a-z].js', {strict: false});\nisGlob('abc/\\\\{a,b}.js', {strict: false});\n//=> false\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test","nrTokens":0,"nrLines":40,"files":[{"filePath":"node_modules/is-glob/README.md","startLine":137,"endLine":176},{"filePath":"node_modules/is-number/README.md","startLine":119,"endLine":270}]}
{"cloneLines":"},\n  \"devDependencies\": {\n    \"gulp-format-md\": \"^0.1.10\",\n    \"mocha\": \"^3.0.2\"\n  },\n  \"keywords\": [\n    \"bash\",\n    \"braces\",\n    \"check\",\n    \"exec\",\n    \"expression\",\n    \"extglob\",\n    \"glob\",\n    \"globbing\",\n    \"globstar\",\n    \"is\",\n    \"match\",\n    \"matches\",\n    \"pattern\",\n    \"regex\",\n    \"regular\",\n    \"string\",\n    \"test\"\n  ],\n  \"verb\": {\n    \"toc\"","nrTokens":0,"nrLines":26,"files":[{"filePath":"node_modules/is-extglob/package.json","startLine":21,"endLine":46},{"filePath":"node_modules/is-glob/package.json","startLine":29,"endLine":54}]}
{"cloneLines":"com/package/micromatch): Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | [homepage](https://github.com/jonschlinkert/micromatch \"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This document was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme) (a [verb](https://github.com/verbose/verb) generator), please don't edit the readme directly. Any changes to the readme must be m","nrTokens":0,"nrLines":26,"files":[{"filePath":"node_modules/is-extglob/README.md","startLine":77,"endLine":102},{"filePath":"node_modules/repeat-string/README.md","startLine":106,"endLine":131}]}
{"cloneLines":"Copyright (c) 2015 Tiancheng ???Timothy??? Gu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.","nrTokens":0,"nrLines":19,"files":[{"filePath":"node_modules/is-expression/LICENSE.md","startLine":1,"endLine":19},{"filePath":"node_modules/pug-strip-comments/LICENSE.md","startLine":1,"endLine":7}]}
{"cloneLines":"{\n\t\"assert\": true,\n\t\"node:assert\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"assert/strict\": \">= 15\",\n\t\"node:assert/strict\": \">= 16\",\n\t\"async_hooks\": \">= 8\",\n\t\"node:async_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"buffer_ieee754\": \">= 0.5 && < 0.9.7\",\n\t\"buffer\": true,\n\t\"node:buffer\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"child_process\": true,\n\t\"node:child_process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"cluster\": \">= 0.5\",\n\t\"node:cluster\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"console\": true,\n\t\"node:console\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"constants\": true,\n\t\"node:constants\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"crypto\": true,\n\t\"node:crypto\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_debug_agent\": \">= 1 && < 8\",\n\t\"_debugger\": \"< 8\",\n\t\"dgram\": true,\n\t\"node:dgram\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"diagnostics_channel\": [\">= 14.17 && < 15\", \">= 15.1\"],\n\t\"node:diagnostics_channel\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns\": true,\n\t\"node:dns\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns/promises\": \">= 15\",\n\t\"node:dns/promises\": \">= 16\",\n\t\"domain\": \">= 0.7.12\",\n\t\"node:domain\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"events\": true,\n\t\"node:events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"freelist\": \"< 6\",\n\t\"fs\": true,\n\t\"node:fs\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"fs/promises\": [\">= 10 && < 10.1\", \">= 14\"],\n\t\"node:fs/promises\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_agent\": \">= 0.11.1\",\n\t\"node:_http_agent\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_client\": \">= 0.11.1\",\n\t\"node:_http_client\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_common\": \">= 0.11.1\",\n\t\"node:_http_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_incoming\": \">= 0.11.1\",\n\t\"node:_http_incoming\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_outgoing\": \">= 0.11.1\",\n\t\"node:_http_outgoing\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_server\": \">= 0.11.1\",\n\t\"node:_http_server\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http\": true,\n\t\"node:http\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http2\": \">= 8.8\",\n\t\"node:http2\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"https\": true,\n\t\"node:https\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector\": \">= 8\",\n\t\"node:inspector\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector/promises\": [\">= 19\"],\n\t\"node:inspector/promises\": [\">= 19\"],\n\t\"_linklist\": \"< 8\",\n\t\"module\": true,\n\t\"node:module\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"net\": true,\n\t\"node:net\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node-inspect/lib/_inspect\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_client\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_repl\": \">= 7.6 && < 12\",\n\t\"os\": true,\n\t\"node:os\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path\": true,\n\t\"node:path\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path/posix\": \">= 15.3\",\n\t\"node:path/posix\": \">= 16\",\n\t\"path/win32\": \">= 15.3\",\n\t\"node:path/win32\": \">= 16\",\n\t\"perf_hooks\": \">= 8.5\",\n\t\"node:perf_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"process\": \">= 1\",\n\t\"node:process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"punycode\": \">= 0.5\",\n\t\"node:punycode\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"querystring\": true,\n\t\"node:querystring\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline\": true,\n\t\"node:readline\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline/promises\": \">= 17\",\n\t\"node:readline/promises\": \">= 17\",\n\t\"repl\": true,\n\t\"node:repl\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"smalloc\": \">= 0.11.5 && < 3\",\n\t\"_stream_duplex\": \">= 0.9.4\",\n\t\"node:_stream_duplex\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_transform\": \">= 0.9.4\",\n\t\"node:_stream_transform\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_wrap\": \">= 1.4.1\",\n\t\"node:_stream_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_passthrough\": \">= 0.9.4\",\n\t\"node:_stream_passthrough\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_readable\": \">= 0.9.4\",\n\t\"node:_stream_readable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_writable\": \">= 0.9.4\",\n\t\"node:_stream_writable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream\": true,\n\t\"node:stream\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream/consumers\": \">= 16.7\",\n\t\"node:stream/consumers\": \">= 16.7\",\n\t\"stream/promises\": \">= 15\",\n\t\"node:stream/promises\": \">= 16\",\n\t\"stream/web\": \">= 16.5\",\n\t\"node:stream/web\": \">= 16.5\",\n\t\"string_decoder\": true,\n\t\"node:string_decoder\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"sys\": [\">= 0.4 && < 0.7\", \">= 0.8\"],\n\t\"node:sys\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"test/reporters\": \">= 19.9 && < 20.2\",\n\t\"node:test/reporters\": [\">= 18.17 && < 19\", \">= 19.9\", \">= 20\"],\n\t\"node:test\": [\">= 16.17 && < 17\", \">= 18\"],\n\t\"timers\": true,\n\t\"node:timers\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"timers/promises\": \">= 15\",\n\t\"node:timers/promises\": \">= 16\",\n\t\"_tls_common\": \">= 0.11.13\",\n\t\"node:_tls_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_tls_legacy\": \">= 0.11.3 && < 10\",\n\t\"_tls_wrap\": \">= 0.11.3\",\n\t\"node:_tls_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tls\": true,\n\t\"node:tls\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"trace_events\": \">= 10\",\n\t\"node:trace_events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tty\": true,\n\t\"node:tty\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"url\": true,\n\t\"node:url\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util\": true,\n\t\"node:util\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util/types\": \">= 15.3\",\n\t\"node:util/types\": \">= 16\",\n\t\"v8/tools/arguments\": \">= 10 && < 12\",\n\t\"v8/tools/codemap\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/consarray\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/csvparser\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/logreader\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/profile_view\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/splaytree\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8\": \">= 1\",\n\t\"node:v8\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"vm\": true,\n\t\"node:vm\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"wasi\": [\">= 13.4 && < 13.5\", \">= 18.17 && < 19\", \">= 20\"],\n\t\"node:wasi\": [\">= 18.17 && < 19\", \">= 20\"],\n\t\"worker_threads\": \">= 11.7\",\n\t\"node:worker_threads\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"zlib\": \">= 0.5\",\n\t\"node:zlib\": [\">= 14.18 && < 15\", \">= 16\"]\n}","nrTokens":0,"nrLines":158,"files":[{"filePath":"node_modules/is-core-module/core.json","startLine":1,"endLine":158},{"filePath":"node_modules/resolve/lib/core.json","startLine":1,"endLine":158}]}
{"cloneLines":",\n\t\"scripts\": {\n\t\t\"prepublishOnly\": \"safe-publish-latest\",\n\t\t\"prepublish\": \"not-in-publish || npm run prepublishOnly\",\n\t\t\"pretest\": \"npm run --silent lint\",\n\t\t\"test\": \"npm run tests-only\",\n\t\t\"posttest\": \"aud --production\",\n\t\t\"tests-only\": \"npm run test:stock && npm run test:staging && npm run test:shams\",\n\t\t\"test:stock\": \"nyc node test\",\n\t\t\"test:staging\": \"nyc node --harmony --es-staging test\",\n\t\t\"test:shams\": \"npm run --silent test:shams:getownpropertysymbols && npm run --silent test:shams:corejs\",\n\t\t\"test:shams:corejs\": \"nyc node test/shams/core-js.js\",\n\t\t\"test:shams:getownpropertysymbols\": \"nyc node test/shams/get-own-property-symbols.js\",\n\t\t\"lint\": \"eslint --ext=js,mjs .\",\n\t\t\"version\": \"auto-changelog && git add CHANGELOG.md\",\n\t\t\"postversion\": \"auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \\\"v$(node -e \\\"console.log(require('./package.json').version)\\\")\\\"\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git://github.com/inspect-js/has-symbols.git\"","nrTokens":0,"nrLines":20,"files":[{"filePath":"node_modules/has-symbols/package.json","startLine":5,"endLine":24},{"filePath":"node_modules/has-tostringtag/package.json","startLine":26,"endLine":45}]}
{"cloneLines":"},\n\t\"testling\": {\n\t\t\"files\": \"test/index.js\",\n\t\t\"browsers\": [\n\t\t\t\"iexplore/6.0..latest\",\n\t\t\t\"firefox/3.0..6.0\",\n\t\t\t\"firefox/15.0..latest\",\n\t\t\t\"firefox/nightly\",\n\t\t\t\"chrome/4.0..10.0\",\n\t\t\t\"chrome/20.0..latest\",\n\t\t\t\"chrome/canary\",\n\t\t\t\"opera/10.0..latest\",\n\t\t\t\"opera/next\",\n\t\t\t\"safari/4.0..latest\",\n\t\t\t\"ipad/6.0..latest\",\n\t\t\t\"iphone/6.0..latest\",\n\t\t\t\"android-browser/4.2\"\n\t\t]\n\t},\n\t\"engines\": {\n\t\t\"node\": \">= 0.4\"\n\t},\n\t\"auto-changelog\": {\n\t\t\"output\": \"CHANGELOG.md\",\n\t\t\"template\": \"keepachangelog\",\n\t\t\"unreleased\": false,\n\t\t\"commitLimit\": false,\n\t\t\"backfillLimit\": false,\n\t\t\"hideCredit\": true\n\t},","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/has-symbols/package.json","startLine":66,"endLine":95},{"filePath":"node_modules/is-regex/package.json","startLine":56,"endLine":86}]}
{"cloneLines":")\n          threw = false\n        } finally {\n          if (threw) {\n            try {\n              fs.closeSync(fd)\n            } catch (er) {}\n          } else {\n            fs.closeSync(fd)\n          }\n        }\n        return ret\n      }\n\n    } else","nrTokens":0,"nrLines":15,"files":[{"filePath":"node_modules/graceful-fs/polyfills.js","startLine":229,"endLine":243},{"filePath":"node_modules/graceful-fs/polyfills.js","startLine":193,"endLine":208}]}
{"cloneLines":";\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.start","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/graceful-fs/legacy-streams.js","startLine":87,"endLine":98},{"filePath":"node_modules/graceful-fs/legacy-streams.js","startLine":25,"endLine":36}]}
{"cloneLines":", options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$appendFile","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/graceful-fs/graceful-fs.js","startLine":140,"endLine":149},{"filePath":"node_modules/graceful-fs/graceful-fs.js","startLine":120,"endLine":129}]}
{"cloneLines":", [path, data, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$copyFile","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/graceful-fs/graceful-fs.js","startLine":161,"endLine":170},{"filePath":"node_modules/graceful-fs/graceful-fs.js","startLine":140,"endLine":129}]}
{"cloneLines":", cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$readdir","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/graceful-fs/graceful-fs.js","startLine":183,"endLine":192},{"filePath":"node_modules/graceful-fs/graceful-fs.js","startLine":120,"endLine":129}]}
{"cloneLines":", cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  return","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/graceful-fs/graceful-fs.js","startLine":359,"endLine":368},{"filePath":"node_modules/graceful-fs/graceful-fs.js","startLine":120,"endLine":129}]}
{"cloneLines":",\n\t\"funding\": \"https://github.com/sponsors/sindresorhus\",\n\t\"author\": {\n\t\t\"name\": \"Sindre Sorhus\",\n\t\t\"email\": \"sindresorhus@gmail.com\",\n\t\t\"url\": \"https://sindresorhus.com\"\n\t},\n\t\"engines\": {\n\t\t\"node\": \">=8\"\n\t},\n\t\"scripts\": {\n\t\t\"test\": \"xo && ava && tsd\"\n\t},\n\t\"files\": [\n\t\t\"index.js\",\n\t\t\"index.d.ts\",","nrTokens":0,"nrLines":16,"files":[{"filePath":"node_modules/get-stream/package.json","startLine":6,"endLine":21},{"filePath":"node_modules/is-stream/package.json","startLine":6,"endLine":22}]}
{"cloneLines":"e', { toRegex: true })); //=> '[a-e]'\n// alphabetical with step\nconsole.log(fill('a', 'z', 3, { toRegex: true })); //=> 'a|d|g|j|m|p|s|v|y'\n// numerical range\nconsole.log(fill('1', '100', { toRegex: true })); //=> '[1-9]|[1-9][0-9]|100'\n// numerical range with zero padding\nconsole.log(fill('000001', '100000', { toRegex: true }));\n//=> '0{5}[1-9]|0{4}[1-9][0-9]|0{3}[1-9][0-9]{2}|0{2}[1-9][0-9]{3}|0[1-9][0-9]{4}|100000'\n```\n\n### options.transform\n\n**Type**: `function`\n\n**Default**: `undefined`\n\n**Description**: Customize each value in the returned array (or [string](#optionstoRegex)). _(you can also pass this function as the last argument to `fill()`)_.\n\n**Example(s)**\n\n```js\n// add zero padding\nconsole.log(fill(1, 5, value => String(value).padStart(4, '0')));\n//=> ['0001', '0002', '0003', '0004', '0005']\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests a","nrTokens":0,"nrLines":38,"files":[{"filePath":"node_modules/fill-range/README.md","startLine":170,"endLine":207},{"filePath":"node_modules/is-number/README.md","startLine":119,"endLine":268}]}
{"cloneLines":">\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 116 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 4   | [paulmillr](https://github.com/paulmillr) |  \n| 2   | [realityking](https://github.com/realityking) |  \n| 2   | [bluelovers](https://github.com/b","nrTokens":0,"nrLines":24,"files":[{"filePath":"node_modules/fill-range/README.md","startLine":214,"endLine":237},{"filePath":"node_modules/to-regex-range/README.md","startLine":282,"endLine":305}]}
{"cloneLines":"(value, function (err, result) {\n        if (err) {\n          reject(err)\n          return\n        }\n        resolve(result)\n      })\n    })\n\n    // Let's fork the promise chain to\n    // make the error bubble up to the user but\n    // not lead to a unhandledRejection\n    p.catch(noop)\n\n    return p\n  }\n\n  function drained","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/fastq/queue.js","startLine":251,"endLine":268},{"filePath":"node_modules/fastq/queue.js","startLine":232,"endLine":249}]}
{"cloneLines":"'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}","nrTokens":0,"nrLines":336,"files":[{"filePath":"node_modules/eventemitter3/index.js","startLine":1,"endLine":336},{"filePath":"node_modules/eventemitter3/umd/eventemitter3.js","startLine":2,"endLine":337}]}
{"cloneLines":"Permission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","nrTokens":0,"nrLines":18,"files":[{"filePath":"node_modules/emoji-regex/LICENSE-MIT.txt","startLine":3,"endLine":20},{"filePath":"node_modules/pug-strip-comments/LICENSE.md","startLine":3,"endLine":7}]}
{"cloneLines":"ng `src`. This method throws an error if the expression is not constant. e.g. `toConstant(\"Math.random()\")` would throw an error.\n\nConstants is an object mapping strings to values, where those values should be treated as constants. Note that this makes it a pretty bad idea to have `Math` in there if the user might make use of `Math.random` and a pretty ba","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/constantinople/README.md","startLine":40,"endLine":46},{"filePath":"node_modules/constantinople/README.md","startLine":32,"endLine":38}]}
{"cloneLines":"// Type definitions for Colors.js 1.2\n// Project: https://github.com/Marak/colors.js\n// Definitions by: Bart van der Schoor <https://github.com/Bartvds>, Staffan Eketorp <https://github.com/staeke>\n// Definitions: https://github.com/Marak/colors.js\n\nexport const enabled: boolean;\nexport function enable(): void;\nexport function disable(): void;\nexport function setTheme(theme: any): void;\n\nexport function strip(str: string): string;\nexport function stripColors(str: string): string;\n\nexport function black(str: string): string;\nexport function red(str: string): string;\nexport function green(str: string): string;\nexport function yellow(str: string): string;\nexport function blue(str: string): string;\nexport function magenta(str: string): string;\nexport function cyan(str: string): string;\nexport function white(str: string): string;\nexport function gray(str: string): string;\nexport function grey(str: string): string;\n\nexport function bgBlack(str: string): string;\nexport function bgRed(str: string): string;\nexport function bgGreen(str: string): string;\nexport function bgYellow(str: string): string;\nexport function bgBlue(str: string): string;\nexport function bgMagenta(str: string): string;\nexport function bgCyan(str: string): string;\nexport function bgWhite(str: string): string;\n\nexport function reset(str: string): string;\nexport function bold(str: string): string;\nexport function dim(str: string): string;\nexport function italic(str: string): string;\nexport function underline(str: string): string;\nexport function inverse(str: string): string;\nexport function hidden(str: string): string;\nexport function strikethrough(str: string): string;\n\nexport function rainbow(str: string): string;\nexport function zebra(str: string): string;\nexport function america(str: string): string;\nexport function trap(str: string): string;\nexport function random(str: string): string;\nexport function zalgo(str: string): string;","nrTokens":0,"nrLines":48,"files":[{"filePath":"node_modules/colors/safe.d.ts","startLine":1,"endLine":48},{"filePath":"node_modules/@colors/colors/safe.d.ts","startLine":1,"endLine":48}]}
{"cloneLines":"},\n    \"engines\": {\n        \"node\": \">=0.1.90\"\n    },\n    \"main\": \"lib/index.js\",\n    \"files\": [\n        \"examples\",\n        \"lib\",\n        \"LICENSE\",\n        \"safe.js\",\n        \"themes\",\n        \"index.d.ts\",\n        \"safe.d.ts\"\n    ],\n    \"devDependencies\": {\n        \"eslint\": \"^5.2.0\",\n        \"eslint-config-google\": \"^0.11.0\"\n    }\n}","nrTokens":0,"nrLines":19,"files":[{"filePath":"node_modules/colors/package.json","startLine":27,"endLine":45},{"filePath":"node_modules/@colors/colors/package.json","startLine":27,"endLine":45}]}
{"cloneLines":"export interface Color {\n    (text: string): string;\n\n    strip: Color;\n    stripColors: Color;\n\n    black: Color;\n    red: Color;\n    green: Color;\n    yellow: Color;\n    blue: Color;\n    magenta: Color;\n    cyan: Color;\n    white: Color;\n    gray: Color;\n    grey: Color;\n\n    bgBlack: Color;\n    bgRed: Color;\n    bgGreen: Color;\n    bgYellow: Color;\n    bgBlue: Color;\n    bgMagenta: Color;\n    bgCyan: Color;\n    bgWhite: Color;\n\n    reset: Color;\n    bold: Color;\n    dim: Color;\n    italic: Color;\n    underline: Color;\n    inverse: Color;\n    hidden: Color;\n    strikethrough: Color;\n\n    rainbow: Color;\n    zebra: Color;\n    america: Color;\n    trap: Color;\n    random: Color;\n    zalgo: Color;\n}\n\nexport function enable(): void;\nexport function disable(): void;\nexport function setTheme(theme: any): void;\n\nexport let enabled: boolean;\n\nexport const strip: Color;\nexport const stripColors: Color;\n\nexport const black: Color;\nexport const red: Color;\nexport const green: Color;\nexport const yellow: Color;\nexport const blue: Color;\nexport const magenta: Color;\nexport const cyan: Color;\nexport const white: Color;\nexport const gray: Color;\nexport const grey: Color;\n\nexport const bgBlack: Color;\nexport const bgRed: Color;\nexport const bgGreen: Color;\nexport const bgYellow: Color;\nexport const bgBlue: Color;\nexport const bgMagenta: Color;\nexport const bgCyan: Color;\nexport const bgWhite: Color;\n\nexport const reset: Color;\nexport const bold: Color;\nexport const dim: Color;\nexport const italic: Color;\nexport const underline: Color;\nexport const inverse: Color;\nexport const hidden: Color;\nexport const strikethrough: Color;\n\nexport const rainbow: Color;\nexport const zebra: Color;\nexport const america: Color;\nexport const trap: Color;\nexport const random: Color;\nexport const zalgo: Color;\n\ndeclare global {\n    interface String {\n        strip: string;\n        stripColors: string;\n\n        black: string;\n        red: string;\n        green: string;\n        yellow: string;\n        blue: string;\n        magenta: string;\n        cyan: string;\n        white: string;\n        gray: string;\n        grey: string;\n\n        bgBlack: string;\n        bgRed: string;\n        bgGreen: string;\n        bgYellow: string;\n        bgBlue: string;\n        bgMagenta: string;\n        bgCyan: string;\n        bgWhite: string;\n\n        reset: string;\n        // @ts-ignore\n        bold: string;\n        dim: string;\n        italic: string;\n        underline: string;\n        inverse: string;\n        hidden: string;\n        strikethrough: string;\n\n        rainbow: string;\n        zebra: string;\n        america: string;\n        trap: string;\n        random: string;\n        zalgo: string;\n    }\n}","nrTokens":0,"nrLines":131,"files":[{"filePath":"node_modules/colors/index.d.ts","startLine":6,"endLine":136},{"filePath":"node_modules/@colors/colors/index.d.ts","startLine":6,"endLine":136}]}
{"cloneLines":"screenshots/colors.png)\n\n## Installation\n\n    npm install colors\n\n## colors and styles!\n\n### text colors\n\n  - black\n  - red\n  - green\n  - yellow\n  - blue\n  - magenta\n  - cyan\n  - white\n  - gray\n  - grey\n\n### bright text colors\n\n  - brightRed\n  - brightGreen\n  - brightYellow\n  - brightBlue\n  - brightMagenta\n  - brightCyan\n  - brightWhite\n\n### background colors\n\n  - bgBlack\n  - bgRed\n  - bgGreen\n  - bgYellow\n  - bgBlue\n  - bgMagenta\n  - bgCyan\n  - bgWhite\n  - bgGray\n  - bgGrey\n\n### bright background colors\n\n  - bgBrightRed\n  - bgBrightGreen\n  - bgBrightYellow\n  - bgBrightBlue\n  - bgBrightMagenta\n  - bgBrightCyan\n  - bgBrightWhite\n\n### ","nrTokens":0,"nrLines":67,"files":[{"filePath":"node_modules/colors/README.md","startLine":21,"endLine":87},{"filePath":"node_modules/@colors/colors/README.md","startLine":19,"endLine":85}]}
{"cloneLines":"y way which doesn't extend `String.prototype`\n\n```js\nvar colors = require('colors/safe');\n\nconsole.log(colors.green('hello')); // outputs green text\nconsole.log(colors.red.underline('i like cake and pies')) // outputs red underlined text\nconsole.log(colors.inverse('inverse the color')); // inverses the color\nconsole.log(colors.rainbow('OMG Rainbows!')); // rainbow\nconsole.log(colors.trap('Run the trap')); // Drops the bass\n\n```\n\nI prefer the first way. Some people seem to be afraid of extending `String.prototype` and prefer the second way. \n\nIf you are writing good code you will never have an issue with the first approach. If you really don't want to touch `String.prototype`, the second usage will not touch `String` native object.\n\n## Enabling/Disabling Colors\n\nThe package will auto-detect whether your terminal can use colors and enable/disable accordingly. When colors are disabled, the color functions do nothing. You can override this with a command-line flag","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/colors/README.md","startLine":108,"endLine":137},{"filePath":"node_modules/@colors/colors/README.md","startLine":106,"endLine":135}]}
{"cloneLines":"``javascript\nvar colors = require('colors');\ncolors.enable();\ncolors.disable();\n```\n\n## Console.log [string substitution](http://nodejs.org/docs/latest/api/console.html#console_console_log_data)\n\n```js\nvar name = 'Marak';\nconsole.log(colors.green('Hello %s'), name);\n// outputs -> 'Hello Marak'\n```\n\n## Custom themes\n\n### Using standard API\n\n```js\n\nvar colors = requi","nrTokens":0,"nrLines":24,"files":[{"filePath":"node_modules/colors/README.md","startLine":158,"endLine":181},{"filePath":"node_modules/@colors/colors/README.md","startLine":156,"endLine":179}]}
{"cloneLines":"('colors');\n\ncolors.setTheme({\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red'\n});\n\n// outputs red text\nconsole.log(\"this is an error\".error);\n\n// outputs yellow text\nconsole.log(\"this is a warning\".warn);\n```\n\n### Using string safe API\n\n```js\nvar colors = require('colors/safe');\n\n// set single property\nvar error = colors.red;\nerror('this is r","nrTokens":0,"nrLines":30,"files":[{"filePath":"node_modules/colors/README.md","startLine":183,"endLine":212},{"filePath":"node_modules/@colors/colors/README.md","startLine":181,"endLine":210}]}
{"cloneLines":"uillermo@learnboost.com&gt; ([Rauchg](https://github.com/rauchg))\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014 James Talmage &lt;james.talmage@jrtechnical.com&gt;\n\nOriginal cli-table code/documentation: Copyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software witho","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/cli-table3/README.md","startLine":220,"endLine":229},{"filePath":"node_modules/pug-strip-comments/LICENSE.md","startLine":3,"endLine":7}]}
{"cloneLines":"triction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARR","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/cli-table3/README.md","startLine":229,"endLine":235},{"filePath":"node_modules/pug-strip-comments/LICENSE.md","startLine":7,"endLine":7}]}
{"cloneLines":"&& !state.escaped) {\n        state.stack.pop();\n      } else if (character === '\\\\' && !state.escaped) {\n        state.escaped = true;\n      } else {\n        state.escaped = false;\n      }\n      break;\n    case TOKEN_TYPES.TEMPLATE_QUOTE","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/character-parser/index.js","startLine":116,"endLine":124},{"filePath":"node_modules/character-parser/index.js","startLine":107,"endLine":115}]}
{"cloneLines":"&& !state.escaped) {\n        state.stack.pop();\n      } else if (character === '\\\\' && !state.escaped) {\n        state.escaped = true;\n      } else {\n        state.escaped = false;\n      }\n      break;\n    default","nrTokens":0,"nrLines":9,"files":[{"filePath":"node_modules/character-parser/index.js","startLine":141,"endLine":149},{"filePath":"node_modules/character-parser/index.js","startLine":107,"endLine":115}]}
{"cloneLines":"        |\n\nIf you'd like to run these comparisons yourself, see [test/support/generate.js](test/support/generate.js).\n\n## Benchmarks\n\n### Running benchmarks\n\nInstall dev dependencies:\n\n```bash\nnpm i -d && npm benchmark\n```\n\n### Latest results\n\nBraces is more accurate, without sacrificing performance.\n\n```bash\n# range (expanded)\n  braces x 29,040 ops/sec ??3.69% (91 runs sampled))\n  minimatch x 4,735 ops/sec ??1.28% (90 runs sampled)\n\n# range (optimized for regex)\n  braces x 382,878 ops/sec ??0.56% (94 runs sampled)\n  minimatch x 1,040 ops/sec ??0.44% (93 runs sampled)\n\n# nested ranges (expanded)\n  braces x 19,744 ops/sec ??2.27% (92 runs sampled))\n  minimatch x 4,579 ops/sec ??0.50% (93 runs sampled)\n\n# nested ranges (optimized for regex)\n  braces x 246,019 ops/sec ??2.02% (93 runs sampled)\n  minimatch x 1,028 ops/sec ??0.39% (94 runs sampled)\n\n# set (expanded) \n  braces x 138,641 ops/sec ??0.53% (95 runs sampled)\n  minimatch x 219,582 ops/sec ??0.98% (94 r","nrTokens":0,"nrLines":40,"files":[{"filePath":"node_modules/braces/README.md","startLine":532,"endLine":571},{"filePath":"node_modules/is-number/README.md","startLine":119,"endLine":209}]}
{"cloneLines":"d in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n<details>\n  <summary><strong>Guiding Principles</strong></summary>\n\n- Changelogs are for humans, not machines.\n- There should be an entry for every single version.\n- The same types of changes should be grouped.\n- Versions and sections should be linkable.\n- The latest version comes first.\n- The release date of each versions is displayed.\n- Mention whether you follow Semantic Versioning.\n\n</details>\n\n<details>\n  <summary><strong>Types of changes</strong></summary>\n\nChangelog entries are classified using the following labels _(from [keep-a-changelog](http://keepachangelog.com/)_):\n\n- `Added` for new features.\n- `Changed` for changes in existing functionality.\n- `Deprecated` for soon-to-be removed features.\n- `Removed` for now removed features.\n- `Fixed` for any bug fixes.\n- `Security` in case of vulnerabilities.\n\n<","nrTokens":0,"nrLines":33,"files":[{"filePath":"node_modules/braces/CHANGELOG.md","startLine":5,"endLine":37},{"filePath":"node_modules/picomatch/CHANGELOG.md","startLine":5,"endLine":39}]}
{"cloneLines":"Gu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","nrTokens":0,"nrLines":7,"files":[{"filePath":"node_modules/babel-walk/LICENSE.md","startLine":1,"endLine":7},{"filePath":"node_modules/pug-strip-comments/LICENSE.md","startLine":1,"endLine":7}]}
{"cloneLines":"// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from","nrTokens":0,"nrLines":37,"files":[{"filePath":"node_modules/asap/browser-raw.js","startLine":37,"endLine":73},{"filePath":"node_modules/asap/raw.js","startLine":35,"endLine":71}]}
{"cloneLines":"module.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawTask","nrTokens":0,"nrLines":10,"files":[{"filePath":"node_modules/asap/asap.js","startLine":16,"endLine":25},{"filePath":"node_modules/asap/browser-asap.js","startLine":26,"endLine":35}]}
{"cloneLines":"Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.","nrTokens":0,"nrLines":17,"files":[{"filePath":"node_modules/asap/LICENSE.md","startLine":4,"endLine":20},{"filePath":"node_modules/pug-strip-comments/LICENSE.md","startLine":3,"endLine":7}]}
{"cloneLines":" both the window and worker context.\nThe following charts capture the browser test results for the most recent\nrelease.\nThe first chart shows test results for ASAP running in the main window context.\nThe second chart shows test results for ASAP running in a web worker context.\nTest results are inconclusive (grey) on browsers that do not support web\nworkers.\nThese data are captured automatically by [Continuous\nIntegration][].\n\n![Browser Compatibility](http://kriskowal-asap.s3-website-us-west-2.amazonaws.com/train/integration-2/saucelabs-results-matrix.svg)\n\n![Compatibility in Web Workers](http://kriskowal-asap.s3-website-us-west-2.amazonaws.com/train/integration-2","nrTokens":0,"nrLines":12,"files":[{"filePath":"node_modules/asap/CHANGES.md","startLine":56,"endLine":67},{"filePath":"node_modules/asap/README.md","startLine":115,"endLine":128}]}
{"cloneLines":"id: login\n        uses: atlassian/gajira-login@v2.0.0\n        env:\n          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}\n          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}\n          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}\n\n      - name: Jira Create issue\n        if: env.JIRA_CREATE_ISSUE_AUTO","nrTokens":0,"nrLines":9,"files":[{"filePath":".github/workflows/create_issue.yml","startLine":20,"endLine":28},{"filePath":".github/workflows/create_issue_on_label.yml","startLine":20,"endLine":28}]}
{"cloneLines":"id: create_jira_issue\n        uses: atlassian/gajira-create@v2.0.1\n        with:\n          project: ${{ secrets.JIRA_PROJECT }}\n          issuetype: ${{ secrets.JIRA_ISSUE_TYPE }}\n          summary: \"[GH#${{ github.event.issue.number }}]  ${{ github.event.issue.title }}\"\n          description: |\n            ${{ github.event.issue.body }}\n            ----\n            {panel}\n            _[Github permalink |${{ github.event.issue.html_url }}]_\n            {panel}\n\n      - name: Update Jira issue if JIRA_UPDATE_ISSUE_BODY is defined\n        if: env.JIRA_CREATE_ISSUE_AUTO","nrTokens":0,"nrLines":15,"files":[{"filePath":".github/workflows/create_issue.yml","startLine":29,"endLine":43},{"filePath":".github/workflows/create_issue_on_label.yml","startLine":29,"endLine":43}]}
{"cloneLines":"}\n  fetchComments() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      cache: false,\n      success: (data) => this.setState({ data: data }),\n      error: (xhr, status, err) => console.error(status, err)\n    })\n  }\n  fetchComments() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      cache: false,\n      success: (data) => this.setState({ data: data }),\n      error: (xhr, status, err) => console.error(status, err)\n    })\n  }\n  fetchComments() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      cache: false,\n      success: (data) => this.setState({ data: data }),\n      error: (xhr, status, err) => console.error(status, err)\n    })\n  }\n  fetchComments() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      cache: false,\n      success: (data) => this.setState({ data: data }),\n      error: (xhr, status, err) => console.error(status, err)\n    })\n  }\n  fetchComments() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      cache: false,\n      success: (data) => this.setState({ data: data }),\n      error: (xhr, status, err) => console.error(status, err)\n    })\n  }\n  componentDidMount","nrTokens":0,"nrLines":47,"files":[{"filePath":"test.tsx","startLine":16,"endLine":62},{"filePath":"test.tsx","startLine":7,"endLine":17}]}
{"cloneLines":"}\n  fetchComments() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      cache: false,\n      success: (data) => this.setState({ data: data }),\n      error: (xhr, status, err) => console.error(status, err)\n    })\n  }\n  componentDidMount","nrTokens":0,"nrLines":11,"files":[{"filePath":"test.jsx","startLine":16,"endLine":26},{"filePath":"test.jsx","startLine":7,"endLine":17}]}
{"cloneLines":")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }\n}","nrTokens":0,"nrLines":7,"files":[{"filePath":"jsx.js","startLine":144,"endLine":150},{"filePath":"jsx.js","startLine":37,"endLine":42}]}
